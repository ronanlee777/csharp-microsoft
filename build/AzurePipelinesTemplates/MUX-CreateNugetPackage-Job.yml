parameters:
# Extract the build revision number from Build.BuildNumber. This is needed to pass to build-nupkg
  jobName: ''
  dependsOn: ''
  buildOutputDir: '$(Build.SourcesDirectory)\BuildOutput'
  nupkgdir: '$(build.artifactStagingDirectory)'
# The "primary" build arch is the one that the nuspec gets its winmd, pri, and other neutral files from
  primaryBuildArch: x86
  buildFlavor: Release
  signConfig: ''
  useReleaseTag: 'false'
  prereleaseVersionTag: 'prerelease'

jobs:
- job: ${{ parameters.jobName }}
  dependsOn:
    - ${{ parameters.dependsOn }}

  # XES tasks need to be on PackageES machines.
  ${{if parameters.signConfig }}:
    pool:
      name: Package ES Lab E

  steps:
  - ${{if parameters.signConfig }}:
    - task: PkgESSetupBuild@10
      displayName: 'XESSetupBuild'
      inputs:
        productName: dep.controls
        branchVersion: false
        nugetVer: true

  - template: MUX-PopulateBuildDateAndRevision-Steps.yml

  - script: |
      echo parameters.jobName '${{ parameters.jobName }}'
      echo parameters.buildOutputDir '${{ parameters.buildOutputDir }}'
      echo parameters.nupkgdir '${{ parameters.nupkgdir }}'
      echo parameters.publishPath '${{ parameters.publishPath }}'
      echo buildrevision=$(buildrevision)
      echo builddate=$(builddate)
      echo useReleaseTag=${{ parameters.useReleaseTag }}
    displayName: 'CreateNugetPackage: Display parameters'

  - task: DownloadBuildArtifacts@0 
    inputs: 
      artifactName: drop
      downloadPath: '$(Build.SourcesDirectory)\Artifacts'

  - template: MUX-InstallNuget-Steps.yml

  - ${{if parameters.signConfig }}:
    # Re-create framework packages because we made them in the build step against unsigned binaries.
    - template: MUX-MakeFrameworkPackages-Steps.yml

    # Copy the re-made framework packages into the same location in the artifact drop to be republished at the end of the job.
    - task: CopyFiles@2
      inputs:
        targetFolder: '${{ parameters.nupkgdir }}'
        sourceFolder: '$(Build.SourcesDirectory)\Artifacts\drop'
        Contents: '**\Microsoft.UI.Xaml*.appx'

  - powershell: |
      $prereleaseTag = "${{ parameters.prereleaseVersionTag }}"
      if ("${{ parameters.useReleaseTag}}" -eq [bool]::TrueString) { $prereleaseTag = "" }

      & "$env:Build_SourcesDirectory\build\NuSpecs\build-nupkg.ps1" `
        -BuildOutput '$(Build.SourcesDirectory)\Artifacts\drop' `
        -OutputDir '${{ parameters.nupkgdir }}' `
        -prereleaseversion "$prereleaseTag" `
        -DateOverride '$(builddate)' `
        -Subversion '$(buildrevision)' `
        -BuildArch ${{ parameters.primaryBuildArch }} `
        -BuildFlavor ${{ parameters.buildFlavor }}

    displayName: 'build-nupkg.ps1'

  - ${{if parameters.signConfig }}:
    - task: PkgESCodeSign@10
      env:
        SYSTEM_ACCESSTOKEN: $(system.accesstoken)
      displayName: CodeSign
      inputs:
        signConfigXml: ${{ parameters.signConfig }}
        inPathRoot: '${{ parameters.nupkgdir }}'
        outPathRoot: '${{ parameters.nupkgdir }}\signed'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish artifact: nupkg'
    inputs:
      PathtoPublish: '${{ parameters.nupkgdir }}'
      artifactName: 'drop'

# To publish the package to vsts feed, set queue time variable NuGetFeed = d62f8eac-f05c-4c25-bccb-21f98b95c95f
# This is the magic GUID from the pipeline visual designer for this feed: https://dev.azure.com/ms/microsoft-ui-xaml/_packaging?_a=feed&feed=MUX-CI
  - task: 333b11bd-d341-40d9-afcf-b32d5ce6f23b@2
    condition: and(ne(variables['NuGetFeed'], ''), ne(variables['Build.Reason'], 'Manual'))
    displayName: 'NuGet push to $(NuGetFeed)'
    inputs:
      command: push
      publishVstsFeed: $(NuGetFeed)
      packagesToPush: $(Build.ArtifactStagingDirectory)/*.nupkg
