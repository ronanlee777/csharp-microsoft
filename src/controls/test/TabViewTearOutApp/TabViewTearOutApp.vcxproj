<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$([MSBuild]::GetPathOfFileAbove(environment.props))" />
  <PropertyGroup Label="Globals">
    <CppWinRTOptimized>true</CppWinRTOptimized>
    <CppWinRTRootNamespaceAutoMerge>true</CppWinRTRootNamespaceAutoMerge>
    <MinimalCoreWin>true</MinimalCoreWin>
    <ProjectGuid>{86317243-45a8-4770-a4b2-768f721e5f9b}</ProjectGuid>
    <ProjectName>TabViewTearOutApp</ProjectName>
    <RootNamespace>TabViewTearOutApp</RootNamespace>
    <DefaultLanguage>en-US</DefaultLanguage>
    <MinimumVisualStudioVersion>16.0</MinimumVisualStudioVersion>
    <AppContainerApplication>false</AppContainerApplication>
    <AppxPackage>false</AppxPackage>
    <ApplicationType>Windows Store</ApplicationType>
    <ApplicationTypeRevision>$(MuxSdkVersion)</ApplicationTypeRevision>
    <WindowsTargetPlatformVersion>$(MuxSdkVersion)</WindowsTargetPlatformVersion>
    <WindowsTargetPlatformMinVersion>10.0.17763.0</WindowsTargetPlatformMinVersion>
    <WindowsAppSDKSelfContained>true</WindowsAppSDKSelfContained>
    <MSBuildWarningsAsMessages>$(MSBuildWarningsAsMessages);WMC1501</MSBuildWarningsAsMessages>
    <!-- This app is unpackaged, so we need to separate the intermediate output path from the output path
         so we can selectively only binplace the latter. -->
    <IntermediateOutputPathSubdirectory>Intermediate</IntermediateOutputPathSubdirectory>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <Import Project="$(NugetPackageDirectory)\Microsoft.WindowsAppSDK.$(WindowsAppSdkPackageVersion)\build\native\Microsoft.WindowsAppSDK.props" Condition="Exists('$(NugetPackageDirectory)\Microsoft.WindowsAppSDK.$(WindowsAppSdkPackageVersion)\build\native\Microsoft.WindowsAppSDK.props')" />
  <Import Project="$(NugetPackageDirectory)\Microsoft.Windows.CppWinRT.$(CppWinRTVersion)\build\native\Microsoft.Windows.CppWinRT.props" Condition="Exists('$(NugetPackageDirectory)\Microsoft.Windows.CppWinRT.$(CppWinRTVersion)\build\native\Microsoft.Windows.CppWinRT.props')" />
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|ARM64">
      <Configuration>Debug</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|ARM64">
      <Configuration>Release</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)'=='Debug'" Label="Configuration">
    <UseDebugLibraries>true</UseDebugLibraries>
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)'=='Release'" Label="Configuration">
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)'=='Debug'">
    <ClCompile>
      <Optimization>Disabled</Optimization>
    </ClCompile>
  </ItemDefinitionGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ItemDefinitionGroup>
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <PrecompiledHeaderOutputFile>$(IntDir)pch.pch</PrecompiledHeaderOutputFile>
      <WarningLevel>Level4</WarningLevel>
      <AdditionalOptions>%(AdditionalOptions) /bigobj /FS</AdditionalOptions>
      <PreprocessorDefinitions>_UNICODE;UNICODE;%(PreprocessorDefinitions);DISABLE_XAML_GENERATED_MAIN</PreprocessorDefinitions>
      <TreatWarningAsError>true</TreatWarningAsError>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories);$(LiftedIxpInternalIncludePath);$(LiftedIxpIncludePath)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <AdditionalDependencies>
        kernel32.lib;
        user32.lib;
        %(AdditionalDependencies);
        gdi32.lib;
      </AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)'=='Release'">
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
  </ItemDefinitionGroup>
  <ItemGroup>
    <Manifest Include="app.manifest" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="MainPage.xaml.h">
      <DependentUpon>MainPage.xaml</DependentUpon>
      <SubType>Code</SubType>
    </ClInclude>
    <ClInclude Include="DesktopWindow.h" />
    <ClInclude Include="MainWindow.h" />
    <ClInclude Include="pch.h" />
    <ClInclude Include="App.h">
      <DependentUpon>App.xaml</DependentUpon>
    </ClInclude>
    <ClInclude Include="resource.h" />
    <ClInclude Include="targetver.h" />
  </ItemGroup>
  <ItemGroup>
    <ApplicationDefinition Include="App.xaml" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="MainPage.xaml.cpp">
      <DependentUpon>MainPage.xaml</DependentUpon>
      <SubType>Code</SubType>
    </ClCompile>
    <ClCompile Include="DesktopWindow.cpp" />
    <ClCompile Include="MainWindow.cpp" />
    <ClCompile Include="pch.cpp">
      <PrecompiledHeader>Create</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include="App.cpp">
      <DependentUpon>App.xaml</DependentUpon>
    </ClCompile>
    <ClCompile Include="WinMain.cpp" />
  </ItemGroup>
  <ItemGroup>
    <Midl Include="App.idl">
      <SubType>Code</SubType>
      <DependentUpon>App.xaml</DependentUpon>
    </Midl>
    <Midl Include="MainPage.idl">
      <DependentUpon>MainPage.xaml</DependentUpon>
      <SubType>Code</SubType>
    </Midl>
  </ItemGroup>
  <ItemGroup>
    <ResourceCompile Include="TabViewTearOutApp.rc" />
  </ItemGroup>
  <ItemGroup>
    <Image Include="small.ico" />
    <Image Include="TabViewTearOutApp.ico" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="$(MUXProjectRoot)\Samples\AppTestAutomationHelpers\AppTestAutomationHelpers.vcxproj">
      <Project>{128e6f7a-578c-48dc-bd3f-750ec662c268}</Project>
      <Name>AppTestAutomationHelpers</Name>
    </ProjectReference>
    <ProjectReference Include="$(MUXProjectRoot)\MergedWinMD\private\MergedWinMD.vcxproj" ReferenceOutputAssembly="False" />
  </ItemGroup>
  <ItemGroup>
    <Page Include="MainPage.xaml">
      <SubType>Designer</SubType>
    </Page>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <PropertyGroup>
    <!--Causes loading of winrt dependencies from CoreWebView2 SDK package - required for any usage from WinUI3/WinAppSDK.
        Note end-user WASDK apps get this implicitly via $(MicrosoftWindowsAppSDKPackageDir). -->
    <WebView2UseWinRT>true</WebView2UseWinRT>
  </PropertyGroup>

  <ImportGroup Label="ExtensionTargets">
    <Import Project="$(NugetPackageDirectory)\Microsoft.WindowsAppSDK.$(WindowsAppSdkPackageVersion)\build\native\Microsoft.WindowsAppSDK.targets" Condition="Exists('$(NugetPackageDirectory)\Microsoft.WindowsAppSDK.$(WindowsAppSdkPackageVersion)\build\native\Microsoft.WindowsAppSDK.targets')" />
    <Import Project="$(NugetPackageDirectory)\Microsoft.Windows.CppWinRT.$(CppWinRTVersion)\build\native\Microsoft.Windows.CppWinRT.targets" Condition="Exists('$(NugetPackageDirectory)\Microsoft.Windows.CppWinRT.$(CppWinRTVersion)\build\native\Microsoft.Windows.CppWinRT.targets')" />
    <Import Project="$(NugetPackageDirectory)\Microsoft.Web.WebView2.$(WebView2PackageVersion)\build\native\Microsoft.Web.WebView2.targets" Condition="Exists('$(NugetPackageDirectory)\Microsoft.Web.WebView2.$(WebView2PackageVersion)\build\native\Microsoft.Web.WebView2.targets')" />
  </ImportGroup>
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('$(NugetPackageDirectory)\Microsoft.WindowsAppSDK.$(WindowsAppSdkPackageVersion)\build\native\Microsoft.WindowsAppSDK.props')" Text="$([System.String]::Format('$(ErrorText)', '$(NugetPackageDirectory)\Microsoft.WindowsAppSDK.$(WindowsAppSdkPackageVersion)\build\native\Microsoft.WindowsAppSDK.props'))" />
    <Error Condition="!Exists('$(NugetPackageDirectory)\Microsoft.WindowsAppSDK.$(WindowsAppSdkPackageVersion)\build\native\Microsoft.WindowsAppSDK.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(NugetPackageDirectory)\Microsoft.WindowsAppSDK.$(WindowsAppSdkPackageVersion)\build\native\Microsoft.WindowsAppSDK.targets'))" />
    <Error Condition="!Exists('$(NugetPackageDirectory)\Microsoft.Windows.CppWinRT.$(CppWinRTVersion)\build\native\Microsoft.Windows.CppWinRT.props')" Text="$([System.String]::Format('$(ErrorText)', '$(NugetPackageDirectory)\Microsoft.Windows.CppWinRT.$(CppWinRTVersion)\build\native\Microsoft.Windows.CppWinRT.props'))" />
    <Error Condition="!Exists('$(NugetPackageDirectory)\Microsoft.Windows.CppWinRT.$(CppWinRTVersion)\build\native\Microsoft.Windows.CppWinRT.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(NugetPackageDirectory)\Microsoft.Windows.CppWinRT.$(CppWinRTVersion)\build\native\Microsoft.Windows.CppWinRT.targets'))" />
    <Error Condition="!Exists('$(NugetPackageDirectory)\Microsoft.Web.WebView2.$(WebView2PackageVersion)\build\native\Microsoft.Web.WebView2.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(NugetPackageDirectory)\Microsoft.Web.WebView2.$(WebView2PackageVersion)\build\native\Microsoft.Web.WebView2.targets'))" />
  </Target>
  <PropertyGroup>
    <ResolveReferencesDependsOn>ReferencePrivateWinUIWinMDs;$(ResolveReferencesDependsOn)</ResolveReferencesDependsOn>
  </PropertyGroup>
  <Target Name="ReferencePrivateWinUIWinMDs">
    <!-- This is a test app that can exercise preview or private APIs, so we need to ensure we reference the set of private WinMDs. -->
    <PropertyGroup>
      <WinUIPackagePath>$(NugetPackageDirectory)\Microsoft.WindowsAppSDK.$(WindowsAppSdkPackageVersion)\</WinUIPackagePath>
      <WinMDTempPath>$(TEMP)\TabViewTearOutAppWinMDs\</WinMDTempPath>
    </PropertyGroup>
    <ItemGroup>
      <Reference Remove="@(Reference)" Condition="$([System.String]::Copy('%(ReferencePath.Identity)').StartsWith('$(WinUIPackagePath)'))" />
      <Reference Remove="@(Reference)" Condition="$([System.String]::Copy('%(ReferencePath.HintPath)').StartsWith('$(WinUIPackagePath)'))" />
      <Reference Include="$(ArtifactsObjDir)MergedWinMD\private\Merged\*.winmd" />
    </ItemGroup>
    <!-- We do, however, need to include these WinMDs that are not included in our merged WinMDs.
         We can't include them in-place, though, because Microsoft.UI.Xaml.winmd will also be pulled in then, since C++/WinRT references metadata folders rather than files.
         To get around that limitation, we'll copy the WinMDs we need to a temp folder and include them from there. -->
    <ItemGroup>
      <OtherWinMDs Include="$(WinUIPackagePath)\lib\uap10.0\*.winmd" Exclude="$(WinUIPackagePath)\lib\uap10.0\Microsoft.UI.Xaml.winmd" />
    </ItemGroup>
    <RemoveDir Directories="$(WinMDTempPath)" />
    <MakeDir Directories="$(WinMDTempPath)" />
    <Copy SourceFiles="@(OtherWinMDs)" DestinationFiles="@(OtherWinMDs->'$(WinMDTempPath)%(Filename)%(Extension)')" SkipUnchangedFiles="True" />
    <ItemGroup>
      <Reference Include="$(WinMDTempPath)*.winmd" />
    </ItemGroup>
    <ItemGroup>
      <FileWrites Include="$(WinMDTempPath)*" />
    </ItemGroup>
  </Target>
  <Target Name="AddExtraPayloadFiles" AfterTargets="AddMicrosoftWindowsAppSDKPayloadFiles">
    <ItemGroup>
      <AdditionalMicrosoftWindowsAppSDKFiles Include="$(MicrosoftWindowsAppSDKMsixContent)\**\*.xaml" />
      <AdditionalMicrosoftWindowsAppSDKFiles Include="$(MicrosoftWindowsAppSDKMsixContent)\**\*.xbf" />
      <AdditionalMicrosoftWindowsAppSDKFiles Include="$(MicrosoftWindowsAppSDKMsixContent)\**\*.html" />
    </ItemGroup>
    <CreateItem Include="@(AdditionalMicrosoftWindowsAppSDKFiles)" AdditionalMetadata="CopyToOutputDirectory=PreserveNewest;Link=%(AdditionalMicrosoftWindowsAppSDKFiles.RecursiveDir)%(AdditionalMicrosoftWindowsAppSDKFiles.Filename)%(AdditionalMicrosoftWindowsAppSDKFiles.Extension)">
      <Output TaskParameter="Include" ItemName="None" />
    </CreateItem>
    <CreateItem Include="@(AdditionalMicrosoftWindowsAppSDKFiles)" AdditionalMetadata="CopyToOutputDirectory=PreserveNewest;Link=%(AdditionalMicrosoftWindowsAppSDKFiles.RecursiveDir)%(AdditionalMicrosoftWindowsAppSDKFiles.Filename)%(AdditionalMicrosoftWindowsAppSDKFiles.Extension)">
      <Output TaskParameter="Include" ItemName="None" />
    </CreateItem>
  </Target>
  <Target Name="CopyPayloadFiles" AfterTargets="Build">
    <Copy SourceFiles="@(Content)" DestinationFiles="@(Content->'$(OutDir)%(Link)')" Condition="'%(Content.Link)' != ''" />
    <Copy SourceFiles="@(Content)" DestinationFiles="@(Content->'$(OutDir)%(Identity)')" Condition="'%(Content.Link)' == '' and !$([System.IO.Path]::IsPathRooted('%(Identity)'))" />
    <Copy SourceFiles="@(Content)" DestinationFiles="@(Content->'$(OutDir)%(Filename)%(Extension)')" Condition="'%(Content.Link)' == '' and $([System.IO.Path]::IsPathRooted('%(Identity)'))" />
  </Target>
  <PropertyGroup>
    <TargetDestination>$(TestBinplaceDestinationPath)</TargetDestination>
  </PropertyGroup>
  <Target Name="BinplaceOutDir" BeforeTargets="Binplace" DependsOnTargets="CopyPayloadFiles">
    <PropertyGroup>
      <UnpackagedAppsDirectory>$(ArtifactsObjDir)controls\test\MUXControls.Test\UnpackagedApps\$(MSBuildProjectName)\</UnpackagedAppsDirectory>
    </PropertyGroup>
    <ItemGroup>
      <BinplaceItem Include="$(OutDir)**\*" Exclude="$(GeneratedFilesDir)**\*;$(IntermediateOutputPath)**\*">
        <Destination>$(TargetDestination)\UnpackagedApps\$(MSBuildProjectName)</Destination>
      </BinplaceItem>
    </ItemGroup>
    <Copy SourceFiles="@(BinplaceItem)" DestinationFiles="@(BinplaceItem->'$(UnpackagedAppsDirectory)%(RecursiveDir)%(Filename)%(Extension)')" />
  </Target>
</Project>
