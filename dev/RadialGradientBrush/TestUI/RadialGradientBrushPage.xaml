<!-- Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT License. See LICENSE in the project root for license information. -->
<local:TestPage
    x:Class="MUXControlsTestApp.RadialGradientBrushPage"
    x:Name="RadialGradientBrushTestPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:MUXControlsTestApp"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:media="using:Microsoft.UI.Xaml.Media"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid x:Name="RootGrid" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" Margin="12">
        <Grid.Resources>
            <media:RadialGradientBrush x:Name="SharedRadialGradientBrush" FallbackColor="Orange">
                <GradientStop Color="Red" Offset="0" />
                <GradientStop Color="Green" Offset="0.5" />
                <GradientStop Color="Blue" Offset="1" />
            </media:RadialGradientBrush>
            
            <Style TargetType="Border">
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BorderBrush" Value="Black" />
            </Style>
            <Style TargetType="StackPanel">
                <Setter Property="HorizontalAlignment" Value="Left" />
            </Style>
        </Grid.Resources>
        <ScrollViewer HorizontalScrollMode="Auto" VerticalScrollMode="Auto" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
            <StackPanel>
                <Border>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <TextBlock Text="Locally set brush:" Grid.Row="0" Grid.Column="0" />
                        <Rectangle Width="100" Height="100" x:Name="GradientRectangle" AutomationProperties.Name="GradientRectangle" Grid.Row="1" Grid.Column="0">
                            <Rectangle.Fill>
                                <media:RadialGradientBrush FallbackColor="Red">
                                    <GradientStop Color="Orange" Offset="0.5" />
                                    <GradientStop Color="Green" Offset="1" />
                                </media:RadialGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Ellipse Width="200" Height="100" Grid.Row="2" Grid.Column="0" Grid.RowSpan="2">
                            <Ellipse.Fill>
                                <media:RadialGradientBrush>
                                    <GradientStop Color="Yellow" Offset="0" />
                                    <GradientStop Color="MediumPurple" Offset="1" />
                                </media:RadialGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>

                        <Button x:Name="GenerateRenderTargetBitmapButton" AutomationProperties.Name="GenerateRenderTargetBitmapButton" Content="RenderTargetBitmap on rectangle" Click="GenerateRenderTargetBitmapButton_Click" Grid.Row="0" Grid.Column="1" />
                        <Rectangle x:Name="RenderTargetBitmapResultRectangle" Height="100" Width="100" Fill="LightGray" Grid.Row="1" Grid.Column="1" />
                        <TextBlock Text="Color match test:" Grid.Row="2" Grid.Column="1" />
                        <TextBox x:Name="ColorMatchTestResult" AutomationProperties.Name="ColorMatchTestResult" IsReadOnly="True" Grid.Row="3" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Top" />
                    </Grid>
                </Border>

                <Border>
                    <StackPanel>
                        <TextBlock Text="Shared resource brush:" />
                        <Rectangle Width="100" Height="100" Fill="{StaticResource SharedRadialGradientBrush}" />
                        <TextBlock Text="Text with gradient foreground" FontSize="20" Foreground="{StaticResource SharedRadialGradientBrush}" />
                        <Button Content="Button with gradient background" Background="{StaticResource SharedRadialGradientBrush}" />
                    </StackPanel>
                </Border>

                <Border>
                    <StackPanel x:DefaultBindMode="OneWay">
                        <StackPanel.Resources>
                            <Style TargetType="Button">
                                <Setter Property="Margin" Value="0,0,5,0" />
                            </Style>
                        </StackPanel.Resources>
                        <TextBlock Text="Dynamically created brush:" />

                        <StackPanel Orientation="Horizontal">
                            <Button x:Name="ReplaceGradientButton" AutomationProperties.Name="ReplaceGradientButton" Content="Create new gradient" Click="ReplaceGradientButton_Click" />
                            <Button x:Name="AddGradientStopButton" AutomationProperties.Name="AddGradientStopButton" Content="Add random gradient stop" Click="AddGradientStopButton_Click" />
                            <Button x:Name="RemoveGradientStopButton" AutomationProperties.Name="RemoveGradientStopButton" Content="Remove random gradient stop" Click="RemoveGradientStopButton_Click" />
                        </StackPanel>

                        <StackPanel Orientation="Horizontal">
                            <Button x:Name="RandomizeGradientOriginButton" AutomationProperties.Name="RandomizeGradientOriginButton" Content="Randomize origin" Click="RandomizeGradientOriginButton_Click" />
                            <Button x:Name="RandomizeEllipseCenterButton" AutomationProperties.Name="RandomizeEllipseCenterButton" Content="Randomize center" Click="RandomizeEllipseCenterButton_Click" />
                            <Button x:Name="RandomizeEllipseRadiusButton" AutomationProperties.Name="RandomizeEllipseRadiusButton" Content="Randomize radius" Click="RandomizeEllipseRadiusButton_Click" />
                            <Button x:Name="ToggleMappingModeButton" AutomationProperties.Name="ToggleMappingModeButton" Content="Toggle mapping mode" Click="ToggleMappingModeButton_Click" />
                        </StackPanel>

                        <ComboBox x:Name="InterpolationColorSpaceComboBox" AutomationProperties.Name="InterpolationColorSpaceComboBox" Header="Space: ({Auto, Rgb, RgbLinear} only)" ItemsSource="{x:Bind GetColorSpaceValueNames(), Mode=OneTime}" SelectedItem="{x:Bind DynamicGradientBrushInterpolationSpace, Mode=TwoWay}" />

                        <ComboBox x:Name="SpreadMethodComboBox" AutomationProperties.Name="SpreadMethodComboBox" Header="SpreadMethod:" ItemsSource="{x:Bind GetSpreadMethodValueNames(), Mode=OneTime}" SelectedItem="{x:Bind DynamicGradientBrushSpreadMethod, Mode=TwoWay}" />

                        <Rectangle x:Name="RectangleWithDynamicGradient" Width="200" Height="200" Fill="Gray" />
                        <TextBlock x:Name="TextBlockWithDynamicGradient" Text="Text with random gradient foreground" FontSize="20" Foreground="Gray" />

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="MappingMode: " Grid.Row="0" />
                            <TextBlock Text="{x:Bind DynamicGradientBrush.MappingMode}" Grid.Row="0" Grid.Column="1" />
                            <TextBlock Text="GradientStops.Count: " Grid.Row="1" />
                            <TextBlock Text="{x:Bind DynamicGradientBrush.GradientStops.Count}" Grid.Row="1" Grid.Column="1" x:Name="GradientStopCountText" AutomationProperties.Name="GradientStopCountText" />
                            <TextBlock Text="GradientOrigin: " Grid.Row="2" />
                            <TextBlock Text="{x:Bind DynamicGradientBrush.GradientOrigin}" Grid.Row="2" Grid.Column="1" />
                            <TextBlock Text="EllipseCenter: " Grid.Row="3" />
                            <TextBlock Text="{x:Bind DynamicGradientBrush.EllipseCenter}" Grid.Row="3" Grid.Column="1" />
                            <TextBlock Text="EllipseRadius: " Grid.Row="4" />
                            <TextBlock Text="{x:Bind DynamicGradientBrush.EllipseRadius}" Grid.Row="4" Grid.Column="1" />
                        </Grid>
                    </StackPanel>
                </Border>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</local:TestPage>
