<!-- Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT License. See LICENSE in the project root for license information. -->
<local:TestPage
    x:Class="MUXControlsTestApp.TabViewPage"
    x:Name="TabViewTestPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:MUXControlsTestApp"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:controls="using:Microsoft.UI.Xaml.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <StackPanel Padding="12" Background="LightGray" Width="250">
                <CheckBox x:Name="IsCloseableCheckBox" AutomationProperties.Name="IsCloseableCheckBox" Checked="IsCloseableCheckBox_CheckChanged" Unchecked="IsCloseableCheckBox_CheckChanged" IsChecked="True" Content="IsCloseable on first tab"/>
                <CheckBox x:Name="CancelCloseCheckBox" AutomationProperties.Name="CancelCloseCheckBox" Content="Cancel Closing event"/>
                <CheckBox x:Name="CancelItemCloseCheckBox" AutomationProperties.Name="CancelItemCloseCheckBox" Content="Cancel Closing on first item"/>
                <CheckBox x:Name="IsAddButtonVisibleCheckBox" AutomationProperties.Name="IsAddButtonVisibleCheckBox" Content="Add button visible" IsChecked="{x:Bind Tabs.IsAddButtonVisible, Mode=TwoWay}"/>

                <Button x:Name="RemoveTabButton" AutomationProperties.Name="RemoveTabButton" Content="Remove Tab" Margin="0,0,0,8" Click="RemoveTabButton_Click"/>
                <Button x:Name="SelectItemButton" AutomationProperties.Name="SelectItemButton" Content="Select Item 1" Margin="0,0,0,8" Click="SelectItemButton_Click"/>
                <Button x:Name="SelectIndexButton" AutomationProperties.Name="SelectIndexButton" Content="Select Index 2" Margin="0,0,0,8" Click="SelectIndexButton_Click"/>
                <Button x:Name="ChangeShopTextButton" AutomationProperties.Name="ChangeShopTextButton" Content="Change Shop text" Margin="0,0,0,8" Click="ChangeShopTextButton_Click"/>
                <Button x:Name="CustomTooltipButton" AutomationProperties.Name="CustomTooltipButton" Content="Custom Tooltip" Margin="0,0,0,8" Click="CustomTooltipButton_Click"/>
                <Button x:Name="SetTabViewWidth" AutomationProperties.Name="SetTabViewWidth" Content="Set Width" Margin="0,0,0,8" Click="SetTabViewWidth_Click" />

                <StackPanel Orientation="Horizontal" Margin="0,0,0,8">
                    <TextBlock Text="Scroll buttons visible: " />
                    <TextBlock x:Name="ScrollButtonsVisible" AutomationProperties.Name="ScrollButtonsVisible" Text="False" />
                    <Button x:Name="GetScrollButtonsVisible" AutomationProperties.Name="GetScrollButtonsVisible" Content="Get" Margin="4,0,0,0" Click="GetScrollButtonsVisible_Click" />
                </StackPanel>

                <StackPanel Orientation="Horizontal" Margin="0,0,0,8">
                    <TextBlock VerticalAlignment="Center">Tab Width:</TextBlock>
                    <ComboBox x:Name="TabWidthComboBox" AutomationProperties.Name="TabWidthComboBox" Margin="4,0,0,0" SelectedIndex="1" SelectionChanged="TabWidthComboBox_SelectionChanged">
                        <ComboBoxItem Content="SizeToContent"/>
                        <ComboBoxItem Content="Equal"/>
                    </ComboBox>
                </StackPanel>

                <StackPanel Orientation="Horizontal" Margin="0,0,0,8">
                    <TextBlock>Selected Index:</TextBlock>
                    <TextBlock x:Name="SelectedIndexTextBlock" AutomationProperties.Name="SelectedIndexTextBlock" Margin="4,0,0,0" Text="0"/>
                </StackPanel>

                <StackPanel Orientation="Horizontal" Margin="0,0,0,8">
                    <TextBlock>Tab dragged out:</TextBlock>
                    <TextBlock x:Name="TabDraggedOutsideTextBlock" AutomationProperties.Name="TabDraggedOutsideTextBlock" Margin="4,0,0,0" Text=""/>
                </StackPanel>

                <StackPanel Orientation="Horizontal" Margin="0,0,0,8">
                    <Button x:Name="GetTab0ToolTipButton" AutomationProperties.Name="GetTab0ToolTipButton" Content="Tooltip0" Click="GetTab0ToolTipButton_Click"/>
                    <TextBlock x:Name="Tab0ToolTipTextBlock" AutomationProperties.Name="Tab0ToolTipTextBlock" Margin="4,0,0,0" Text=""/>
                </StackPanel>

                <StackPanel Orientation="Horizontal" Margin="0,0,0,8">
                    <Button x:Name="GetTab1ToolTipButton" AutomationProperties.Name="GetTab1ToolTipButton" Content="Tooltip1" Click="GetTab1ToolTipButton_Click"/>
                    <TextBlock x:Name="Tab1ToolTipTextBlock" AutomationProperties.Name="Tab1ToolTipTextBlock" Margin="4,0,0,0" Text=""/>
                </StackPanel>
            </StackPanel>

            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <controls:TabView
                    x:Name="Tabs"
                    TabWidthMode="Equal"
                    SelectedIndex="0"
                    SelectionChanged="TabViewSelectionChanged"
                    TabClosing="TabViewTabClosing"
                    TabDraggedOutside="TabViewTabDraggedOutside"
                    AddButtonClick="AddButtonClick">

                    <controls:TabView.RightCustomContent>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="Middle" Margin="6,3,6,0" VerticalAlignment="Center"/>
                            <TextBlock Grid.Column="2" Text="Right" Margin="6,3,6,0" VerticalAlignment="Center"/>
                        </Grid>
                    </controls:TabView.RightCustomContent>

                    <controls:TabView.Items>

                        <controls:TabViewItem x:Name="FirstTab" AutomationProperties.Name="FirstTab" Header="Home" TabClosing="FirstTab_TabClosing" ToolTipService.ToolTip="Custom Tooltip">
                            <controls:TabViewItem.IconSource>
                                <controls:SymbolIconSource Symbol="Home"/>
                            </controls:TabViewItem.IconSource>

                            <StackPanel x:Name="FirstTabContent" AutomationProperties.Name="FirstTabContent">
                                <Button x:Name="FirstTabButton" AutomationProperties.Name="FirstTabButton" Margin="8" FontSize="20">Home Button</Button>
                                <Button x:Name="FirstTabButton2" AutomationProperties.Name="FirstTabButton2" Margin="8" FontSize="20">Another Button</Button>
                            </StackPanel>
                        </controls:TabViewItem>

                        <controls:TabViewItem x:Name="SecondTab" AutomationProperties.Name="SecondTab" Header="Shop" IsCloseable="True">
                            <controls:TabViewItem.IconSource>
                                <controls:SymbolIconSource Symbol="Shop"/>
                            </controls:TabViewItem.IconSource>

                            <StackPanel>
                                <TextBlock Padding="16">Shop text</TextBlock>
                                <Button Content="SecondTabButton" AutomationProperties.Name="SecondTabButton" />
                            </StackPanel>
                        </controls:TabViewItem>

                        <controls:TabViewItem x:Name="LongHeaderTab" AutomationProperties.Name="LongHeaderTab" Header="Long Header No Icon">
                            <StackPanel>
                                <TextBlock Padding="16">Emoji text</TextBlock>
                                <Button Content="Button 3" />
                            </StackPanel>
                        </controls:TabViewItem>

                        <controls:TabViewItem x:Name="NotCloseableTab" AutomationProperties.Name="NotCloseableTab" Header="Video" IsCloseable="False">
                            <controls:TabViewItem.IconSource>
                                <controls:SymbolIconSource Symbol="Video"/>
                            </controls:TabViewItem.IconSource>

                            <StackPanel>
                                <TextBlock Padding="16">This tab can't be closed.</TextBlock>
                            </StackPanel>
                        </controls:TabViewItem>

                        <controls:TabViewItem x:Name="LastTab" AutomationProperties.Name="LastTab" Header="Contact">
                            <controls:TabViewItem.IconSource>
                                <controls:SymbolIconSource Symbol="Contact"/>
                            </controls:TabViewItem.IconSource>

                            <TextBlock x:Name="LastTabContent" AutomationProperties.Name="LastTabContent" Padding="16">Contact text</TextBlock>
                        </controls:TabViewItem>

                    </controls:TabView.Items>
                </controls:TabView>

                <controls:TabView x:Name="DataBindingTabView" Grid.Row="1"
                    IsAddButtonVisible="false">

                    <controls:TabView.ItemTemplate>
                        <DataTemplate x:DataType="local:TabDataItem">
                            <controls:TabViewItem Header="{x:Bind Header}" IconSource="{x:Bind IconSource}" Content="{x:Bind Content}">
                                <controls:TabViewItem.ContentTemplate>
                                    <DataTemplate>
                                        <Grid Margin="16">
                                            <TextBlock Foreground="Purple" Text="{Binding}"/>
                                        </Grid>
                                    </DataTemplate>
                                </controls:TabViewItem.ContentTemplate>
                            </controls:TabViewItem>
                        </DataTemplate>
                    </controls:TabView.ItemTemplate>
                </controls:TabView>
            </Grid>
        </Grid>
    </Grid>
</local:TestPage>
