<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT License. See LICENSE in the project root for license information. -->
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="..\..\packages\Microsoft.Windows.CppWinRT.2.0.190603.8\build\native\Microsoft.Windows.CppWinRT.props" Condition="Exists('..\..\packages\Microsoft.Windows.CppWinRT.2.0.190603.8\build\native\Microsoft.Windows.CppWinRT.props')" />
  <Import Project="..\..\packages\Microsoft.SourceLink.GitHub.1.0.0-beta2-18618-05\build\Microsoft.SourceLink.GitHub.props" Condition="Exists('..\..\packages\Microsoft.SourceLink.GitHub.1.0.0-beta2-18618-05\build\Microsoft.SourceLink.GitHub.props')" />
  <Import Project="..\..\packages\Microsoft.SourceLink.Common.1.0.0-beta2-18618-05\build\Microsoft.SourceLink.Common.props" Condition="Exists('..\..\packages\Microsoft.SourceLink.Common.1.0.0-beta2-18618-05\build\Microsoft.SourceLink.Common.props')" />
  <Import Project="..\..\packages\Microsoft.Build.Tasks.Git.1.0.0-beta2-18618-05\build\Microsoft.Build.Tasks.Git.props" Condition="Exists('..\..\packages\Microsoft.Build.Tasks.Git.1.0.0-beta2-18618-05\build\Microsoft.Build.Tasks.Git.props')" />
  <Import Project="$(MSBuildProjectDirectory)\..\..\mux.controls.props" Condition="Exists('$(MSBuildProjectDirectory)\..\..\mux.controls.props')" />
  <Import Project="$(MSBuildProjectDirectory)\..\..\environment.props" />
  <Import Project="$(MSBuildProjectDirectory)\..\..\ProjectConfigurations.props" />
  <Import Project="$(MSBuildProjectDirectory)\..\..\version.props" />
  <PropertyGroup Label="Globals">
    <ProjectGuid>{ad0c90b0-4845-4d4b-88f1-86f653f8171b}</ProjectGuid>
    <Keyword>DynamicLibrary</Keyword>
    <TargetName>$(MUXTargetName)</TargetName>
    <RootNamespace>$(MUXNamespace)</RootNamespace>
    <DefaultLanguage>en-US</DefaultLanguage>
    <MinimumVisualStudioVersion>15.0</MinimumVisualStudioVersion>
    <AppContainerApplication>true</AppContainerApplication>
    <ApplicationType>Windows Store</ApplicationType>
    <WindowsTargetPlatformVersion Condition="'$(WindowsTargetPlatformVersion)'==''">$(MuxSdkVersion)</WindowsTargetPlatformVersion>
    <WindowsTargetPlatformMinVersion>10.0.14393.0</WindowsTargetPlatformMinVersion>
    <ApplicationTypeRevision>10.0</ApplicationTypeRevision>
    <!-- Use 64-bit compilers because 32-bit compilers run out of heap space -->
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
    <MUXControlsFrameworkPackageName>Microsoft.UI.Xaml</MUXControlsFrameworkPackageName>
    <MUXControlsFrameworkPackageName Condition="'$(Configuration)'=='Debug'">Microsoft.UI.Xaml.Debug</MUXControlsFrameworkPackageName>
    <ScriptPath>..\..\tools\</ScriptPath>
    <ForceMuiRes>true</ForceMuiRes>
    <Use64BitLinker>true</Use64BitLinker>
    <!-- XBF is no longer embedded to improve F5 times but we need it embedded for the Nuget package PRI file, turn it on for release builds -->
    <DisableEmbeddedXbf Condition="'$(Configuration)'=='Release'">false</DisableEmbeddedXbf>
    <AppxBundlePlatforms>x86|x64|arm|arm64</AppxBundlePlatforms>

    <CppWinRTUsePrefixes>false</CppWinRTUsePrefixes>
    <CppWinRTAddXamlMetaDataProviderIdl>false</CppWinRTAddXamlMetaDataProviderIdl>
  </PropertyGroup>
  <!-- <PropertyGroup Condition="'$(Use64BitLinker)' == 'true' AND '$(BuildingWithBuildExe)' != 'true'">
      <LinkToolPath>$(OSBuildToolsRoot)\vc\HostX64\$(BuildArchName)</LinkToolPath>
      <LinkTrackerFrameworkPath>$(MSBuildToolsPath)\amd64</LinkTrackerFrameworkPath>
      <LinkTrackerSdkPath>$(MSBuildToolsPath)\amd64</LinkTrackerSdkPath>
  </PropertyGroup> -->
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)'=='Debug'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)'=='Release'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ItemDefinitionGroup>
    <Page>
      <Version>Undefined</Version>
      <Type>Undefined</Type>
      <Priority>Undefined</Priority>
      <IsPublic>true</IsPublic>
      <IncludeInWindowsAppx>true</IncludeInWindowsAppx>
    </Page>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup>
    <PRIResource>
      <IsPreviewResource>False</IsPreviewResource>
    </PRIResource>
  </ItemDefinitionGroup>
  <ItemGroup>
    <Midl Include="..\..\idl\Microsoft.UI.Xaml.idl" />
  </ItemGroup>
  <ImportGroup Label="Shared">
    <Import Project="..\RatingControl\RatingControl.vcxitems" Label="Shared" Condition="$(BuildLeanMuxForTheStoreApp) != 'true'" />
    <Import Project="..\NavigationView\NavigationView.vcxitems" Label="Shared" />
    <Import Project="..\ColorPicker\ColorPicker.vcxitems" Label="Shared" Condition="$(BuildLeanMuxForTheStoreApp) != 'true'" />
    <Import Project="..\Collections\Collections.vcxitems" Label="Shared" />
    <Import Project="..\CommandBarFlyout\CommandBarFlyout.vcxitems" Label="Shared" Condition="$(BuildLeanMuxForTheStoreApp) != 'true'" />
    <Import Project="..\Effects\Microsoft.UI.Composition.Effects.vcxitems" Label="Shared" />
    <Import Project="..\PersonPicture\PersonPicture.vcxitems" Label="Shared" Condition="$(BuildLeanMuxForTheStoreApp) != 'true'" />
    <Import Project="..\ResourceHelper\ResourceHelper.vcxitems" Label="Shared" />
    <Import Project="..\PullToRefresh\RefreshContainer\RefreshContainer.vcxitems" Label="Shared" Condition="$(BuildLeanMuxForTheStoreApp) != 'true'" />
    <Import Project="..\PullToRefresh\RefreshVisualizer\RefreshVisualizer.vcxitems" Label="Shared" Condition="$(BuildLeanMuxForTheStoreApp) != 'true'" />
    <Import Project="..\PullToRefresh\ScrollViewerIRefreshInfoProviderAdapter\ScrollViewerIRefreshInfoProviderAdapter.vcxitems" Label="Shared" Condition="$(BuildLeanMuxForTheStoreApp) != 'true'" />
    <Import Project="..\MenuBar\MenuBar.vcxitems" Label="Shared" Condition="$(BuildLeanMuxForTheStoreApp) != 'true'" />
    <Import Project="..\Common\Common.vcxitems" Label="Shared" />
    <Import Project="..\CommonStyles\CommonStyles.vcxitems" Label="Shared" />
    <Import Project="..\Materials\Acrylic\AcrylicBrush.vcxitems" Label="Shared" />
    <Import Project="..\Materials\Reveal\RevealBrush.vcxitems" Label="Shared" />
    <Import Project="..\TreeView\TreeView.vcxitems" Label="Shared" Condition="$(BuildLeanMuxForTheStoreApp) != 'true'" />
    <Import Project="..\Telemetry\Telemetry.vcxitems" Label="Shared" />
    <Import Project="..\ParallaxView\ParallaxView.vcxitems" Label="Shared" />
    <Import Project="..\Scroller\Scroller.vcxitems" Label="Shared" />
    <Import Project="..\ScrollViewer\ScrollViewer.vcxitems" Label="Shared" Condition="$(BuildLeanMuxForTheStoreApp) != 'true'" />
    <Import Project="..\Lights\Lights.vcxitems" Label="Shared" />
    <Import Project="..\Repeater\Repeater.vcxitems" Label="Shared" />
    <Import Project="..\SwipeControl\SwipeControl.vcxitems" Label="Shared" Condition="$(BuildLeanMuxForTheStoreApp) != 'true'" />
    <Import Project="..\TwoPaneView\TwoPaneView.vcxitems" Label="Shared" Condition="$(BuildLeanMuxForTheStoreApp) != 'true'" />
    <Import Project="..\TestHooks\TestHooks.vcxitems" Label="Shared" />
    <Import Project="..\PullToRefresh\PTRTracing\PTRTracing.vcxitems" Label="Shared" Condition="$(BuildLeanMuxForTheStoreApp) != 'true'" />
    <Import Project="..\SplitButton\SplitButton.vcxitems" Label="Shared" Condition="$(BuildLeanMuxForTheStoreApp) != 'true'" />
    <Import Project="..\LayoutPanel\LayoutPanel.vcxitems" Label="Shared" />
    <Import Project="..\DropDownButton\DropDownButton.vcxitems" Label="Shared" Condition="$(BuildLeanMuxForTheStoreApp) != 'true'" />
    <Import Project="..\RadioButtons\RadioButtons.vcxitems" Label="Shared" Condition="$(BuildLeanMuxForTheStoreApp) != 'true'" />
    <!-- IconSource is implemented in Windows.UI.Xaml.dll in the OS repo, so we don't want to include it on that side. -->
    <Import Project="..\IconSource\IconSource.vcxitems" Label="Shared" />
    <!-- These two depend on the type InteractionBase, which is behind the Velocity feature Feature_Xaml2018 in the OS repo.
         We can't compile them without attaching the same feature annotation, and MIDL doesn't let us attach feature attributes
         to non-public types.  So for now we'll just exclude these from the OS repo. -->
    <Import Project="..\Interactions\ButtonInteraction\ButtonInteraction.vcxitems" Label="Shared" Condition="$(UseInternalSDK) == 'true'" />
    <Import Project="..\Interactions\SliderInteraction\SliderInteraction.vcxitems" Label="Shared" Condition="$(UseInternalSDK) == 'true'" />
    <Import Project="..\MenuFlyout\MenuFlyout.vcxitems" Label="Shared" />
    <Import Project="..\TeachingTip\TeachingTip.vcxitems" Label="Shared" Condition="$(BuildLeanMuxForTheStoreApp) != 'true'" />
    <Import Project="..\RadioMenuFlyoutItem\RadioMenuFlyoutItem.vcxitems" Label="Shared" Condition="$(BuildLeanMuxForTheStoreApp) != 'true'" />
    <Import Project="..\AnimatedVisualPlayer\AnimatedVisualPlayer.vcxitems" Label="Shared" Condition="$(BuildLeanMuxForTheStoreApp) != 'true' and $(UseInsiderSDK) == 'true'" />
    <Import Project="..\TabView\TabView.vcxitems" Label="Shared" Condition="$(BuildLeanMuxForTheStoreApp) != 'true'" />
    <Import Project="..\AutoSuggestBox\AutoSuggestBox.vcxitems" Label="Shared" />
    <Import Project="..\CheckBox\CheckBox.vcxitems" Label="Shared" />
    <Import Project="..\CalendarDatePicker\CalendarDatePicker.vcxitems" Label="Shared" />
    <Import Project="..\DatePicker\DatePicker.vcxitems" Label="Shared" />
    <Import Project="..\Slider\Slider.vcxitems" Label="Shared" />
    <Import Project="..\TimePicker\TimePicker.vcxitems" Label="Shared" />
    <Import Project="..\ToolTip\ToolTip.vcxitems" Label="Shared" />
  </ImportGroup>
  <ItemGroup>
    <SharedPage Include="@(Page)" />
  </ItemGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|arm64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|arm64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup>
    <GenerateManifest>false</GenerateManifest>
    <IgnoreImportLibrary>false</IgnoreImportLibrary>
  </PropertyGroup>
  <!-- Disable code analysis until this compiler bug is fixed: Bug 616860: /analyze on pch.cpp using C++/WinRT takes 25 minutes and runs out of memory -->
  <!-- <PropertyGroup Condition="'$(Configuration)'=='Release'">
    <RunCodeAnalysis>true</RunCodeAnalysis>
    <CodeAnalysisTreatWarningsAsErrors>true</CodeAnalysisTreatWarningsAsErrors>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)'=='Release'">
    <CodeAnalysisRuleSet>..\..\build\PrefastWarnings.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup> -->
  <ItemDefinitionGroup>
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <CompileAsWinRT>false</CompileAsWinRT>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <IgnoreAllDefaultLibraries>$(IgnoreAllDefaultLibraries)</IgnoreAllDefaultLibraries>
      <GenerateWindowsMetadata>true</GenerateWindowsMetadata>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup>
    <Midl>
      <AdditionalIncludeDirectories>$(MSBuildProjectDirectory)\..;$(MSBuildProjectDirectory)\..\..\idl;$(MiniWindowsSDKIncludePath)</AdditionalIncludeDirectories>
      <Enumclass>false</Enumclass>
      <PreprocessorDefinitions Condition="'$(Configuration)'=='Debug'">%(PreprocessorDefinitions);DEBUG;DBG</PreprocessorDefinitions>
    </Midl>
    <Link>
      <ModuleDefinitionFile>Microsoft.UI.Xaml.def</ModuleDefinitionFile>
      <GenerateDebugInformation Condition="'$(Configuration)'=='Debug'">$(GenerateDebugInformation)</GenerateDebugInformation>
      <AdditionalDependencies>mincore.lib;dxguid.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <!-- Microsoft.winmd will contain the definition of both public, preview and private types. -->
      <WindowsMetadataFile>$(OutDir)\Microsoft.winmd</WindowsMetadataFile>
      <GenerateMapFile>true</GenerateMapFile>
      <LinkTimeCodeGeneration Condition="'$(Configuration)'=='Release'">UseLinkTimeCodeGeneration</LinkTimeCodeGeneration>
    </Link>
    <ClCompile>
      <DisableSpecificWarnings>4100;4189;4467;4702;6326;%(DisableSpecificWarnings)</DisableSpecificWarnings>
      <AdditionalIncludeDirectories>
        %(AdditionalIncludeDirectories);
        $(MSBuildProjectDirectory)\..\inc;
        $(MSBuildProjectDirectory)\..\Generated;
        $(OutDir);
      </AdditionalIncludeDirectories>
      <AdditionalIncludeDirectories>
        $(GeneratedFilesDir)\winrt;
        $(GeneratedFilesDir)\Automation\Peers;
        $(GeneratedFilesDir)\Controls;
        $(GeneratedFilesDir)\Controls\Primitives;
        $(GeneratedFilesDir)\Media;
        $(GeneratedFilesDir)\XamlTypeInfo;
        $(GeneratedFilesDir)\Microsoft\UI\Composition\Effects;
        $(GeneratedFilesDir)\Microsoft\UI\Private\Controls;
        $(GeneratedFilesDir)\Microsoft\UI\Private\Media;
        %(AdditionalIncludeDirectories);
        $(MiniWindowsSDKIncludePath);
      </AdditionalIncludeDirectories>
      <AdditionalOptions>/std:c++17 /bigobj %(AdditionalOptions)</AdditionalOptions>
      <AdditionalOptions>/Wv:18 /Zm1000 %(AdditionalOptions)</AdditionalOptions>
      <AdditionalOptions>%(AdditionalOptions) /await</AdditionalOptions>
      <WarningLevel>Level4</WarningLevel>
      <TreatWarningAsError>true</TreatWarningAsError>
      <EnablePREfast Condition="'$(Configuration)'=='Release'">true</EnablePREfast>
      <ShowIncludes>false</ShowIncludes>
      <!-- Disable RTTI to keep binary size down (adds about 50% to release dll size) -->
      <RuntimeTypeInfo>false</RuntimeTypeInfo>
      <ControlFlowGuard Condition="'$(Configuration)'=='Release'">Guard</ControlFlowGuard>
      <StringPooling Condition="'$(Configuration)'=='Release'">true</StringPooling>
      <PreprocessorDefinitions Condition="'$(Configuration)'=='Debug'">DEBUG;DBG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <PreprocessorDefinitions>DISABLE_WINRT_DEPRECATION;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <Optimization Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">MinSpace</Optimization>
      <Optimization Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">MinSpace</Optimization>
      <Optimization Condition="'$(Configuration)|$(Platform)'=='Release|x64'">MinSpace</Optimization>
      <Optimization Condition="'$(Configuration)|$(Platform)'=='Release|arm64'">MinSpace</Optimization>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include="..\inc\BoxHelpers.h" />
    <ClInclude Include="..\inc\BuildMacros.h" />
    <ClInclude Include="..\inc\CastHelpers.h" />
    <ClInclude Include="..\inc\CommandingHelpers.h" />
    <ClInclude Include="..\inc\common.h" />
    <ClInclude Include="..\inc\CppWinRTHelpers.h" />
    <ClInclude Include="..\inc\CppWinRTIncludes.h" />
    <ClInclude Include="..\inc\DispatcherHelper.h" />
    <ClInclude Include="..\inc\enum_array.h" />
    <ClInclude Include="..\inc\enum_vector.h" />
    <ClInclude Include="..\inc\GlobalDependencyProperty.h" />
    <ClInclude Include="..\inc\DownlevelHelper.h" />
    <ClInclude Include="..\inc\ErrorHandling.h" />
    <ClInclude Include="..\inc\RegUtil.h" />
    <ClInclude Include="..\inc\RuntimeClassHelpers.h" />
    <ClInclude Include="..\inc\SharedHelpers.h" />
    <ClInclude Include="..\inc\tracker_ref.h" />
    <ClInclude Include="..\inc\TypeHelper.h" />
    <ClInclude Include="..\inc\CollectionHelper.h" />
    <ClInclude Include="MUXControlsFactory.h" />
    <ClInclude Include="pch.h" />
    <ClInclude Include="targetver.h" />
    <ClInclude Include="version.h" />
    <ClInclude Include="XamlControlsResources.h" />
    <ClInclude Include="XamlMember.h" />
    <ClInclude Include="XamlMetadataProvider.h" />
    <ClInclude Include="XamlMetadataProviderGenerated.h" />
    <ClInclude Include="XamlType.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="CommandingHelpers.cpp" />
    <ClCompile Include="MUXControlsFactory.cpp" />
    <ClCompile Include="dllmain.cpp" />
    <ClCompile Include="DoubleUtil.cpp" />
    <ClCompile Include="DownlevelHelper.cpp" />
    <ClCompile Include="FloatUtil.cpp" />
    <ClCompile Include="pch.cpp">
      <PrecompiledHeader>Create</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include="SharedHelpers.cpp" />
    <ClCompile Include="$(MSBuildThisFileDirectory)..\Generated\XamlControlsResources.properties.cpp" />
    <ClCompile Include="XamlControlsResources.cpp" />
    <ClCompile Include="XamlMember.cpp" />
    <ClCompile Include="XamlMetadataProvider.cpp" />
    <ClCompile Include="$(OutDir)XamlMetadataProviderGenerated.cpp" />
    <ClCompile Include="XamlType.cpp" />
    <None Include="$(OutDir)XamlMetadataProviderWindowsCodeGen.cs" />
    <None Include="WinRtType.tt" />
  </ItemGroup>
  <ItemGroup>
    <None Include="Microsoft.UI.Xaml.def" />
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <ResourceCompile Include="Microsoft.UI.Xaml.rc" />
  </ItemGroup>
  <ItemGroup>
    <Page Include="$(OutDir)Generic.xaml">
      <SubType>Designer</SubType>
      <ThemeResource>true</ThemeResource>
      <Link>Themes\%(Filename)%(Extension)</Link>
    </Page>
    <Page Include="$(MSBuildProjectDirectory)\DensityStyles\Compact.xaml">
      <SubType>Designer</SubType>
      <ThemeResource>true</ThemeResource>
      <Link>DensityStyles\%(Filename)%(Extension)</Link>
    </Page>
    <Page Include="$(MSBuildProjectDirectory)\DensityStyles\CompactDatePickerTimePickerFlyout.xaml">
      <SubType>Designer</SubType>
      <ThemeResource>true</ThemeResource>
      <Link>DensityStyles\%(Filename)%(Extension)</Link>
    </Page>
    <Page Include="$(OutDir)rs1_themeresources.xaml">
      <SubType>Designer</SubType>
      <ThemeResource>true</ThemeResource>
      <Link>Themes\%(Filename)%(Extension)</Link>
    </Page>
    <Page Include="$(OutDir)rs1_compact_themeresources.xaml">
      <SubType>Designer</SubType>
      <ThemeResource>true</ThemeResource>
      <Link>Themes\%(Filename)%(Extension)</Link>
    </Page>
    <!-- Pages which needs CustomCompile to run a different version of GenXBF, we attach MinSDKVersionRequired to Page to help CompileXaml to identify the min SDK Version -->
    <PageRequiringCustomCompilation Include="$(OutDir)rs2_generic.xaml">
      <SubType>Designer</SubType>
      <ThemeResource>true</ThemeResource>
      <Link>Themes\%(Filename)%(Extension)</Link>
      <MinSDKVersionRequired>$(MinSDKVersionRequiredForRS2ThemeResource)</MinSDKVersionRequired>
    </PageRequiringCustomCompilation>
    <PageRequiringCustomCompilation Include="$(OutDir)rs3_generic.xaml">
      <SubType>Designer</SubType>
      <ThemeResource>true</ThemeResource>
      <Link>Themes\%(Filename)%(Extension)</Link>
      <MinSDKVersionRequired>$(MinSDKVersionRequiredForRS3ThemeResource)</MinSDKVersionRequired>
    </PageRequiringCustomCompilation>
    <PageRequiringCustomCompilation Include="$(OutDir)rs4_generic.xaml">
      <SubType>Designer</SubType>
      <ThemeResource>true</ThemeResource>
      <Link>Themes\%(Filename)%(Extension)</Link>
      <MinSDKVersionRequired>$(MinSDKVersionRequiredForRS4ThemeResource)</MinSDKVersionRequired>
    </PageRequiringCustomCompilation>
    <PageRequiringCustomCompilation Include="$(OutDir)rs5_generic.xaml">
      <SubType>Designer</SubType>
      <ThemeResource>true</ThemeResource>
      <Link>Themes\%(Filename)%(Extension)</Link>
      <MinSDKVersionRequired>$(MinSDKVersionRequiredForRS5ThemeResource)</MinSDKVersionRequired>
    </PageRequiringCustomCompilation>
    <PageRequiringCustomCompilation Include="$(OutDir)19h1_generic.xaml">
      <SubType>Designer</SubType>
      <ThemeResource>true</ThemeResource>
      <Link>Themes\%(Filename)%(Extension)</Link>
      <MinSDKVersionRequired>$(MinSDKVersionRequiredFor19H1ThemeResource)</MinSDKVersionRequired>
    </PageRequiringCustomCompilation>
    <PageRequiringCustomCompilation Include="$(OutDir)rs2_themeresources.xaml;$(OutDir)rs2_compact_themeresources.xaml">
      <SubType>Designer</SubType>
      <ThemeResource>true</ThemeResource>
      <Link>Themes\%(Filename)%(Extension)</Link>
      <MinSDKVersionRequired>$(MinSDKVersionRequiredForRS2ThemeResource)</MinSDKVersionRequired>
    </PageRequiringCustomCompilation>
    <PageRequiringCustomCompilation Include="$(OutDir)rs3_themeresources.xaml;$(OutDir)rs3_compact_themeresources.xaml">
      <SubType>Designer</SubType>
      <ThemeResource>true</ThemeResource>
      <Link>Themes\%(Filename)%(Extension)</Link>
      <MinSDKVersionRequired>$(MinSDKVersionRequiredForRS3ThemeResource)</MinSDKVersionRequired>
    </PageRequiringCustomCompilation>
    <PageRequiringCustomCompilation Include="$(OutDir)rs4_themeresources.xaml;$(OutDir)rs4_compact_themeresources.xaml">
      <SubType>Designer</SubType>
      <ThemeResource>true</ThemeResource>
      <Link>Themes\%(Filename)%(Extension)</Link>
      <MinSDKVersionRequired>$(MinSDKVersionRequiredForRS4ThemeResource)</MinSDKVersionRequired>
    </PageRequiringCustomCompilation>
    <PageRequiringCustomCompilation Include="$(OutDir)rs5_themeresources.xaml;$(OutDir)rs5_compact_themeresources.xaml">
      <SubType>Designer</SubType>
      <ThemeResource>true</ThemeResource>
      <Link>Themes\%(Filename)%(Extension)</Link>
      <MinSDKVersionRequired>$(MinSDKVersionRequiredForRS5ThemeResource)</MinSDKVersionRequired>
    </PageRequiringCustomCompilation>
    <PageRequiringCustomCompilation Include="$(OutDir)19h1_themeresources.xaml;$(OutDir)19h1_compact_themeresources.xaml">
      <SubType>Designer</SubType>
      <ThemeResource>true</ThemeResource>
      <Link>Themes\%(Filename)%(Extension)</Link>
      <MinSDKVersionRequired>$(MinSDKVersionRequiredFor19H1ThemeResource)</MinSDKVersionRequired>
    </PageRequiringCustomCompilation>
    <Page Include="@(PageRequiringCustomCompilation)" />
    <CompactPage Include="$(MSBuildThisFileDirectory)DensityStyles\Compact.xaml" />
  </ItemGroup>
  <ItemGroup>
    <None Include="XamlMetadataProviderGenerated.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>$(OutDir)XamlMetadataProviderGenerated.cpp</LastGenOutput>
      <OutputFilePath>$(OutDir)</OutputFilePath>
    </None>
    <None Include="XamlMetadataProviderWindowsCodeGen.tt" />
    <None Include="CommonHelpers.tt" />
    <None Include="CppWinRTFilterTypes.tt" />
    <T4ParameterValues Include="MetadataWinmdPaths">
      <Value>$(OutDir)\sdk\Microsoft.UI.Xaml.winmd</Value>
    </T4ParameterValues>
  </ItemGroup>
  <ItemGroup>
    <!-- This natvis support is not ready for prime time 
    <Natvis Include="$(IntermediateOutputPath)CppWinRT\Platform\winrt\cppwinrt.natvis">
    </Natvis>
    <Natvis Include="$(IntermediateOutputPath)CppWinRT\Component\winrt\Microsoft.UI.Xaml.natvis">
    </Natvis>
    -->
  </ItemGroup>
  <Import Project="$(CppTargetsFilePath)" />
  <Import Project="$(MSBuildExtensionsPath)\Microsoft\VisualStudio\v$(VisualStudioVersion)\TextTemplating\Microsoft.TextTemplating.targets" />
  <Import Project="$(MSBuildProjectDirectory)\..\..\CustomInlineTasks.targets" />
  <!-- We make it so that devs just include the en-us version of their string resources in the project. This is because
       we only want people editing the en-us version (it's the only file that's input to the localization process) and
       because if we use ** in the item target then the project shows 60+ 'resources.resw' files and it is completely unusable.
       
       To work around this we take all the PRIResource items and find/replace 'en-us' to '**' -->
  <Target Name="ExpandEnUSPRIResourceToWildcards" BeforeTargets="_PrepareForBuild">
    <Message Text="Input PRIResource = @(PRIResource)" />
    <ItemGroup>
      <!-- Replace all en-us in the list with ** -->
      <PRIResourceExpanded Include="@(PRIResource)">
        <Replaced>$([System.String]::Copy('%(Identity)').ToLowerInvariant().Replace('en-us','**'))</Replaced>
      </PRIResourceExpanded>
      <!-- Remove all entries in the old PRIResource list so we can take it over -->
      <PRIResource Remove="@(PRIResource)" />
    </ItemGroup>
    <!-- Use CreateItem to expand all the ** to individual full paths -->
    <CreateItem Include="@(PRIResourceExpanded -&gt; '%(Replaced)')">
      <Output TaskParameter="Include" ItemName="PRIResource" />
    </CreateItem>
    <Message Text="Expanded PRIResource = @(PRIResource)" />
  </Target>
  <!-- Override the target which appends the XamlCompiler generated files to the ClCompile input list. 
       Doing this makes it so that we get XBF generation but ignore the XamlCompiler outputs (which are
       in C++/CX format and do us no good. We are currently hand-authoring the necessary parts of our
       IXamlMetadataProvider implementation. -->
  <Target Name="ComputeXamlGeneratedCompileInputs" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="..\..\packages\MUXCustomBuildTasks.1.0.44\build\native\MUXCustomBuildTasks.targets" Condition="Exists('..\..\packages\MUXCustomBuildTasks.1.0.44\build\native\MUXCustomBuildTasks.targets')" />
    <Import Project="..\..\packages\Microsoft.Build.Tasks.Git.1.0.0-beta2-18618-05\build\Microsoft.Build.Tasks.Git.targets" Condition="Exists('..\..\packages\Microsoft.Build.Tasks.Git.1.0.0-beta2-18618-05\build\Microsoft.Build.Tasks.Git.targets')" />
    <Import Project="..\..\packages\Microsoft.SourceLink.Common.1.0.0-beta2-18618-05\build\Microsoft.SourceLink.Common.targets" Condition="Exists('..\..\packages\Microsoft.SourceLink.Common.1.0.0-beta2-18618-05\build\Microsoft.SourceLink.Common.targets')" />
    <Import Project="..\..\packages\Microsoft.SourceLink.GitHub.1.0.0-beta2-18618-05\build\Microsoft.SourceLink.GitHub.targets" Condition="Exists('..\..\packages\Microsoft.SourceLink.GitHub.1.0.0-beta2-18618-05\build\Microsoft.SourceLink.GitHub.targets')" />
    <Import Project="..\..\packages\Microsoft.Windows.CppWinRT.2.0.190603.8\build\native\Microsoft.Windows.CppWinRT.targets" Condition="Exists('..\..\packages\Microsoft.Windows.CppWinRT.2.0.190603.8\build\native\Microsoft.Windows.CppWinRT.targets')" />
  </ImportGroup>
  <PropertyGroup>
    <MergedWinmdDirectory>$(OutDir)Merged</MergedWinmdDirectory>
    <UnmergedWinmdDirectory>$(OutDir)Unmerged</UnmergedWinmdDirectory>
    <CppWinRTProjectWinMD>$(OutDir)Microsoft.winmd</CppWinRTProjectWinMD>
  </PropertyGroup>
  <!-- It's costly to include all of our default templates as merged dictionaries.
       Instead of that, we'll compile their contents into a statically merged XAML file.-->
  <Target Name="CategorizeSharedPages">
    <ItemGroup>
      <!-- We merge the contents of the shared XAML pages into our generic and theme resources XAML files,
           so we don't want to actually build these pages. We'll remove them prior to any processing of Page items. -->
      <Page Remove="@(SharedPage)" />
    </ItemGroup>
    <ItemGroup>
      <UndefinedPage Include="@(SharedPage)" Condition="'%(Version)' == 'Undefined' Or '%(Type)' == 'Undefined'" />
    </ItemGroup>
    <Error File="@(UndefinedPage -&gt; '%(Filename)%(Extension)')" Condition="'%(Filename)%(Extension)' != ''" Text="Version and/or type of %(Filename)%(Extension) was not defined in including .vcxitems file. Please annotate &lt;Page&gt; item tag with &lt;Version&gt; and &lt;Type&gt; item metadata." />
    <ItemGroup>
      <OrderedSharedPage Include="@(SharedPage)" Condition="'%(Priority)' == '1'" />
      <OrderedSharedPage Include="@(SharedPage)" Condition="'%(Priority)' == '2'" />
      <OrderedSharedPage Include="@(SharedPage)" Condition="'%(Priority)' == '3'" />
      <OrderedSharedPage Include="@(SharedPage)" Condition="'%(Priority)' == '4'" />
      <OrderedSharedPage Include="@(SharedPage)" Condition="'%(Priority)' == '5'" />
      <OrderedSharedPage Include="@(SharedPage)" Condition="'%(Priority)' == '6'" />
      <OrderedSharedPage Include="@(SharedPage)" Condition="'%(Priority)' == '7'" />
      <OrderedSharedPage Include="@(SharedPage)" Condition="'%(Priority)' == '8'" />
      <OrderedSharedPage Include="@(SharedPage)" Condition="'%(Priority)' == 'Undefined'" />
      <RS1StylePage Include="@(OrderedSharedPage)" Condition="'%(Version)' == 'RS1' And '%(Type)' == 'DefaultStyle'" />
      <RS2StylePage Include="@(OrderedSharedPage)" Condition="'%(Version)' == 'RS2' And '%(Type)' == 'DefaultStyle'" />
      <RS3StylePage Include="@(OrderedSharedPage)" Condition="'%(Version)' == 'RS3' And '%(Type)' == 'DefaultStyle'" />
      <RS4StylePage Include="@(OrderedSharedPage)" Condition="'%(Version)' == 'RS4' And '%(Type)' == 'DefaultStyle'" />
      <RS5StylePage Include="@(OrderedSharedPage)" Condition="'%(Version)' == 'RS5' And '%(Type)' == 'DefaultStyle'" />
      <NineteenH1StylePage Include="@(OrderedSharedPage)" Condition="'%(Version)' == '19H1' And '%(Type)' == 'DefaultStyle'" />
      <RS1ThemeResourcePage Include="@(OrderedSharedPage)" Condition="'%(Version)' == 'RS1' And '%(Type)' == 'ThemeResources'" />
      <RS2ThemeResourcePage Include="@(OrderedSharedPage)" Condition="'%(Version)' == 'RS2' And '%(Type)' == 'ThemeResources'" />
      <RS3ThemeResourcePage Include="@(OrderedSharedPage)" Condition="'%(Version)' == 'RS3' And '%(Type)' == 'ThemeResources'" />
      <RS4ThemeResourcePage Include="@(OrderedSharedPage)" Condition="'%(Version)' == 'RS4' And '%(Type)' == 'ThemeResources'" />
      <RS5ThemeResourcePage Include="@(OrderedSharedPage)" Condition="'%(Version)' == 'RS5' And '%(Type)' == 'ThemeResources'" />
      <NineteenH1ThemeResourcePage Include="@(OrderedSharedPage)" Condition="'%(Version)' == '19H1' And '%(Type)' == 'ThemeResources'" />
    </ItemGroup>
  </Target>
  <PropertyGroup>
    <GenerateXamlFileBeforeTargets>BeforeBuildGenerateSources;CompileXaml;Prep_ComputeProcessXamlFiles;CompilePageRequiringCustomCompilation</GenerateXamlFileBeforeTargets>
  </PropertyGroup>
  <Target Name="GenerateGenericResourceFile" DependsOnTargets="CategorizeSharedPages" BeforeTargets="$(GenerateXamlFileBeforeTargets)" Inputs="@(RS1StylePage);@(RS2StylePage);@(RS3StylePage);@(RS4StylePage);@(RS5StylePage);@(NineteenH1StylePage)" Outputs="$(OutDir)Generic.xaml;$(OutDir)rs1_generic.xaml;$(OutDir)rs2_generic.xaml;$(OutDir)rs3_generic.xaml;$(OutDir)rs4_generic.xaml;$(OutDir)rs5_generic.xaml;$(OutDir)19h1_generic.xaml;">
    <Message Text="Generating generic resources XAML file " />
    <BatchMergeXaml RS1Pages="@(RS1StylePage)" RS2Pages="@(RS2StylePage)" RS3Pages="@(RS3StylePage)" RS4Pages="@(RS4StylePage)" RS5Pages="@(RS5StylePage)" N19H1Pages="@(NineteenH1StylePage)" PostfixForGeneratedFile="generic" OutputDirectory="$(OutDir)" />
    <Copy SourceFiles="$(OutDir)rs1_generic.xaml" DestinationFiles="$(OutDir)Generic.xaml" />
    <!-- NB: We have to use CreateProperty here instead of PropertyGroup.	
      PropertyGroup values are always evaluated even when their enclosing target is skipped,	
      whereas CreateProperty has the TaskParameter ValueSetByTask that can be used	
      to only set a property if the target actually runs. -->
    <CreateProperty Value="True">
      <Output TaskParameter="ValueSetByTask" PropertyName="GenericXamlFileNeedsCompilation" />
    </CreateProperty>
  </Target>
  <Target Name="GenerateThemeResourceFile" DependsOnTargets="CategorizeSharedPages" BeforeTargets="$(GenerateXamlFileBeforeTargets)" Inputs="@(RS1ThemeResourcePage);@(RS2ThemeResourcePage);@(RS3ThemeResourcePage);@(RS4ThemeResourcePage);@(RS5ThemeResourcePage);@(NineteenH1ThemeResourcePage)" Outputs="$(OutDir)rs1_themeresources.xaml;$(OutDir)rs2_themeresources.xaml;$(OutDir)rs3_themeresources.xaml;$(OutDir)rs4_themeresources.xaml;$(OutDir)rs5_themeresources.xaml;$(OutDir)19h1_themeresources.xaml;">
    <Message Text="Generating theme resources XAML file " />
    <BatchMergeXaml RS1Pages="@(RS1ThemeResourcePage)" RS2Pages="@(RS2ThemeResourcePage)" RS3Pages="@(RS3ThemeResourcePage)" RS4Pages="@(RS4ThemeResourcePage)" RS5Pages="@(RS5ThemeResourcePage)" N19H1Pages="@(NineteenH1ThemeResourcePage)" PostfixForGeneratedFile="themeresources" OutputDirectory="$(OutDir)" />
    <!-- NB: We have to use CreateProperty here instead of PropertyGroup.	
      PropertyGroup values are always evaluated even when their enclosing target is skipped,	
      whereas CreateProperty has the TaskParameter ValueSetByTask that can be used	
      to only set a property if the target actually runs. -->
    <CreateProperty Value="True">
      <Output TaskParameter="ValueSetByTask" PropertyName="ThemeResourceFileNeedsCompilation" />
    </CreateProperty>
  </Target>
  <Target Name="GenerateCompactThemeResourceFile" DependsOnTargets="CategorizeSharedPages" BeforeTargets="$(GenerateXamlFileBeforeTargets)" Inputs="@(RS1ThemeResourcePage);@(RS2ThemeResourcePage);@(RS3ThemeResourcePage);@(RS4ThemeResourcePage);@(RS5ThemeResourcePage);@(NineteenH1ThemeResourcePage);@(CompactPage)" Outputs="$(OutDir)rs1_compact_themeresources.xaml;$(OutDir)rs2_compact_themeresources.xaml;$(OutDir)rs3_compact_themeresources.xaml;$(OutDir)rs4_compact_themeresources.xaml;$(OutDir)rs5_compact_themeresources.xaml;$(OutDir)19h1_compact_themeresources.xaml;">
    <Message Text="Generating theme resources XAML file " />
    <BatchMergeXaml RS1Pages="@(RS1ThemeResourcePage);@(CompactPage)" RS2Pages="@(RS2ThemeResourcePage);@(CompactPage)" RS3Pages="@(RS3ThemeResourcePage);@(CompactPage)" RS4Pages="@(RS4ThemeResourcePage);@(CompactPage)" RS5Pages="@(RS5ThemeResourcePage);@(CompactPage)" N19H1Pages="@(NineteenH1ThemeResourcePage);@(CompactPage)" PostfixForGeneratedFile="compact_themeresources" OutputDirectory="$(OutDir)" />
    <!-- NB: We have to use CreateProperty here instead of PropertyGroup.	
      PropertyGroup values are always evaluated even when their enclosing target is skipped,	
      whereas CreateProperty has the TaskParameter ValueSetByTask that can be used	
      to only set a property if the target actually runs. -->
    <CreateProperty Value="True">
      <Output TaskParameter="ValueSetByTask" PropertyName="CompactThemeResourceFileNeedsCompilation" />
    </CreateProperty>
  </Target>  
  <Target Name="RemovePageRequiringCustomCompilation" AfterTargets="BeforeBuildGenerateSources" BeforeTargets="MarkupCompilePass2" Condition="'@(PageRequiringCustomCompilation)' != ''">
    <Message Text="RemovePageRequiringCustomCompilation" />
    <ItemGroup>
      <Page Remove="@(PageRequiringCustomCompilation)" />
    </ItemGroup>
  </Target>
  <Target Name="AddPageRequiringCustomCompilation" BeforeTargets="CompilePageRequiringCustomCompilation" AfterTargets="MarkupCompilePass2" Condition="'@(PageRequiringCustomCompilation)' != ''">
    <Message Text="AddPageRequiringCustomCompilation" />
    <ItemGroup>
      <Page Include="@(PageRequiringCustomCompilation)" />
    </ItemGroup>
  </Target>
  <!-- The CompilePageRequiringCustomCompilation contents are mostly copied from the
       definition of the MarkupCompilePass2 target from Microsoft.Windows.UI.Xaml.Common.targets.
       We use it to run the same XAML compilation functionality, except against a different SDK. -->
  <Target Name="CompilePageRequiringCustomCompilation" AfterTargets="MarkupCompilePass2" DependsOnTargets="$(MarkupCompilePass2DependsOn)">
    <PropertyGroup>
      <WarningLevel>$(PrevWarningLevel)</WarningLevel>
      <WarningLevel Condition="'$(WarningLevel)' == '' and '$(ExplicitResetWarningSuppression)' == 'true'">1</WarningLevel>
    </PropertyGroup>
    <!-- The Name of the Local Assembly in Managed and Native -->
    <PropertyGroup>
      <LocalAssembly Condition="'$(LocalAssembly)' == '' and Exists(@(XamlIntermediateAssembly))">
        @(XamlIntermediateAssembly-&gt;'%(Identity)')
      </LocalAssembly>
    </PropertyGroup>
    <CallTarget Targets="SDKRedistOutputGroup" Condition="'$(IncludeSDKRedistOutputGroup)' == 'true'">
      <Output TaskParameter="TargetOutputs" ItemName="_SDKRedistOutputGroupOutput_xaml" />
    </CallTarget>
    <ItemGroup>
      <SdkXamlItems Include="@(_SDKRedistOutputGroupOutput_xaml)" Condition="'%(Extension)'=='.xaml'" />
    </ItemGroup>
    <ItemGroup>
      <!-- C++ provides a filtered Item that eliminates any Managed Assemblies on the ReferencePath (from SDKs for example) -->
      <XamlReferencesToCompile Condition="'$(Language)'=='C++'" Include="@(WinMDReferenceToCompile)" />
      <XamlReferencesToCompile Condition="'$(Language)'!='C++'" Include="@(ReferencePath)" />
    </ItemGroup>
    <ItemGroup>
      <PageToBeCompiled Include="@(PageRequiringCustomCompilation)" Condition="'%(Filename)' == 'rs2_generic' And ('$(GenericXamlFileNeedsCompilation)' == 'True' Or !Exists('$(IntDir)\Generated Files\Themes\rs2_generic.xbf'))" />
      <PageToBeCompiled Include="@(PageRequiringCustomCompilation)" Condition="'%(Filename)' == 'rs3_generic' And ('$(GenericXamlFileNeedsCompilation)' == 'True' Or !Exists('$(IntDir)\Generated Files\Themes\rs3_generic.xbf'))" />
      <PageToBeCompiled Include="@(PageRequiringCustomCompilation)" Condition="'%(Filename)' == 'rs4_generic' And ('$(GenericXamlFileNeedsCompilation)' == 'True' Or !Exists('$(IntDir)\Generated Files\Themes\rs4_generic.xbf'))" />
      <PageToBeCompiled Include="@(PageRequiringCustomCompilation)" Condition="'%(Filename)' == 'rs5_generic' And ('$(GenericXamlFileNeedsCompilation)' == 'True' Or !Exists('$(IntDir)\Generated Files\Themes\rs5_generic.xbf'))" />
      <PageToBeCompiled Include="@(PageRequiringCustomCompilation)" Condition="'%(Filename)' == '19h1_generic' And ('$(GenericXamlFileNeedsCompilation)' == 'True' Or !Exists('$(IntDir)\Generated Files\Themes\19h1_generic.xbf'))" />
      <PageToBeCompiled Include="@(PageRequiringCustomCompilation)" Condition="'%(Filename)' == 'rs2_themeresources' And ('$(ThemeResourceFileNeedsCompilation)' == 'True' Or !Exists('$(IntDir)\Generated Files\Themes\rs2_themeresources.xbf'))" />
      <PageToBeCompiled Include="@(PageRequiringCustomCompilation)" Condition="'%(Filename)' == 'rs3_themeresources' And ('$(ThemeResourceFileNeedsCompilation)' == 'True' Or !Exists('$(IntDir)\Generated Files\Themes\rs3_themeresources.xbf'))" />
      <PageToBeCompiled Include="@(PageRequiringCustomCompilation)" Condition="'%(Filename)' == 'rs4_themeresources' And ('$(ThemeResourceFileNeedsCompilation)' == 'True' Or !Exists('$(IntDir)\Generated Files\Themes\rs4_themeresources.xbf'))" />
      <PageToBeCompiled Include="@(PageRequiringCustomCompilation)" Condition="'%(Filename)' == 'rs5_themeresources' And ('$(ThemeResourceFileNeedsCompilation)' == 'True' Or !Exists('$(IntDir)\Generated Files\Themes\rs5_themeresources.xbf'))" />
      <PageToBeCompiled Include="@(PageRequiringCustomCompilation)" Condition="'%(Filename)' == '19h1_themeresources' And ('$(ThemeResourceFileNeedsCompilation)' == 'True' Or !Exists('$(IntDir)\Generated Files\Themes\19h1_themeresources.xbf'))" />
      <PageToBeCompiled Include="@(PageRequiringCustomCompilation)" Condition="'%(Filename)' == 'rs2_compact_themeresources' And ('$(CompactThemeResourceFileNeedsCompilation)' == 'True' Or !Exists('$(IntDir)\Generated Files\Themes\rs2_compact_themeresources.xbf'))" />
      <PageToBeCompiled Include="@(PageRequiringCustomCompilation)" Condition="'%(Filename)' == 'rs3_compact_themeresources' And ('$(CompactThemeResourceFileNeedsCompilation)' == 'True' Or !Exists('$(IntDir)\Generated Files\Themes\rs3_compact_themeresources.xbf'))" />
      <PageToBeCompiled Include="@(PageRequiringCustomCompilation)" Condition="'%(Filename)' == 'rs4_compact_themeresources' And ('$(CompactThemeResourceFileNeedsCompilation)' == 'True' Or !Exists('$(IntDir)\Generated Files\Themes\rs4_compact_themeresources.xbf'))" />
      <PageToBeCompiled Include="@(PageRequiringCustomCompilation)" Condition="'%(Filename)' == 'rs5_compact_themeresources' And ('$(CompactThemeResourceFileNeedsCompilation)' == 'True' Or !Exists('$(IntDir)\Generated Files\Themes\rs5_compact_themeresources.xbf'))" />
      <PageToBeCompiled Include="@(PageRequiringCustomCompilation)" Condition="'%(Filename)' == '19h1_compact_themeresources' And ('$(CompactThemeResourceFileNeedsCompilation)' == 'True' Or !Exists('$(IntDir)\Generated Files\Themes\19h1_compact_themeresources.xbf'))" />
    </ItemGroup>
    <Message Condition="'@(PageToBeCompiled)' != ''" Text="CustomCompile with min version %(PageToBeCompiled.MinSDKVersionRequired) for Pages: @(PageToBeCompiled)" />
    <CompileXaml Condition="'@(PageToBeCompiled)' != ''" LanguageSourceExtension="$(DefaultLanguageSourceExtension)" Language="$(Language)" RootNamespace="$(RootNamespace)" XamlPages="@(PageToBeCompiled)" XamlApplications="@(ApplicationDefinition)" SdkXamlPages="@(SdkXamlItems)" PriIndexName="$(PriIndexName)" ProjectName="$(XamlProjectName)" IsPass1="False" DisableXbfGeneration="False" CodeGenerationControlFlags="$(XamlCodeGenerationControlFlags)" ClIncludeFiles="@(ClInclude)" CIncludeDirectories="$(XamlCppIncludeDirectories)" LocalAssembly="$(LocalAssembly)" ProjectPath="$(MSBuildProjectFullPath)" OutputPath="$(XamlGeneratedOutputPath)" OutputType="$(OutputType)" ReferenceAssemblyPaths="@(ReferenceAssemblyPaths)" ReferenceAssemblies="@(XamlReferencesToCompile)" ForceSharedStateShutdown="False" CompileMode="RealBuildPass2" XAMLFingerprint="$(XAMLFingerprint)" FingerprintIgnorePaths="$(XAMLFingerprintIgnorePaths)" VCInstallDir="$(VCInstallDir)" WindowsSdkPath="$(WindowsSdkPath)" GenXbf32Path="$(GenXbfPath)" SavedStateFile="$(XamlSavedStateFilePath)" RootsLog="$(XamlRootsLog)" SuppressWarnings="$(SuppressXamlWarnings)" XamlResourceMapName="$(XamlResourceMapName)" XamlComponentResourceLocation="$(XamlComponentResourceLocation)" TargetPlatformMinVersion="%(PageToBeCompiled.MinSDKVersionRequired)" PlatformXmlDir="$(PlatformXmlDir)">
      <Output Condition=" '$(ManagedAssembly)'!='false' " ItemName="Compile" TaskParameter="GeneratedCodeFiles" />
      <Output Condition=" '$(ManagedAssembly)'=='false' " ItemName="XamlGFiles" TaskParameter="GeneratedCodeFiles" />
      <!-- FileWrites is used in Microsoft.Common.Targets for "Clean" build -->
      <Output ItemName="FileWrites" TaskParameter="GeneratedCodeFiles" />
      <Output ItemName="FileWrites" TaskParameter="GeneratedXamlFiles" />
      <Output ItemName="FileWrites" TaskParameter="GeneratedXbfFiles" />
      <Output ItemName="FileWrites" TaskParameter="GeneratedXamlPagesFiles" />
      <Output ItemName="_GeneratedCodeFiles" TaskParameter="GeneratedCodeFiles" />
      <Output ItemName="_GeneratedXamlFiles" TaskParameter="GeneratedXamlFiles" />
      <Output ItemName="_GeneratedXbfFiles" TaskParameter="GeneratedXbfFiles" />
      <Output ItemName="GeneratedXamlPagesFiles" TaskParameter="GeneratedXamlPagesFiles" />
    </CompileXaml>
    <ItemGroup>
      <FileWrites Include="$(XamlSavedStateFilePath)" />
      <FileWrites Condition="'$(XamlRootsLog)' != ''" Include="$(XamlRootsLog)" />
    </ItemGroup>
    <Message Text="(Out) GeneratedCodeFiles: '@(_GeneratedCodeFiles)'" />
    <Message Text="(Out) GeneratedXamlFiles: '@(_GeneratedXamlFiles)'" />
    <Message Text="(Out) GeneratedXbfFiles: '@(_GeneratedXbfFiles)'" />
    <Message Text="(Out) GeneratedXamlPagesFiles: '@(GeneratedXamlPagesFiles)'" />
    <Message Text="(Out) ClCompile: '@(ClCompile)'" Condition="'$(ManagedAssembly)'=='false'" />
    <Message Text="(Out) Compile: '@(Compile)'" Condition="'$(ManagedAssembly)'!='false'" />
    <ItemGroup>
      <ClCompile Include="@(GeneratedXamlPagesFiles)">
        <CompilerIteration>XamlGenerated</CompilerIteration>
      </ClCompile>
    </ItemGroup>
  </Target>
  <PropertyGroup>
    <ProjectMergedIdl>$(IntermediateOutputPath)\Microsoft.UI.Xaml.idl</ProjectMergedIdl>
  </PropertyGroup>
  <!-- Merge all idl files into one -->
  <Target Name="MergeIDLFiles" Inputs="@(Midl)" Outputs="$(ProjectMergedIdl)" BeforeTargets="CppWinRTSetMidlReferences;Midl">
    <PropertyGroup>
      <MidlLines>@(Midl->'#include &lt;%(FullPath)&gt;', '
')</MidlLines>
    </PropertyGroup>
    <WriteLinesToFile File="$(ProjectMergedIdl)" Lines="$(MidlLines)" WriteOnlyWhenDifferent="true" Overwrite="true" />
    <ItemGroup>
      <OriginalMidl Include="@(Midl)" />
      <Midl Remove="@(OriginalMidl)" />
      <Midl Include="$(ProjectMergedIdl)"/>
    </ItemGroup>
  </Target>
  <Target Name="CreateReferenceWinmds" BeforeTargets="XamlMetadataCodeGenMUX">
    <ItemGroup>
      <T4ParameterValues Include="ReferenceWinmds">
        <Value>@(CppWinRTPlatformWinMDReferences)</Value>
      </T4ParameterValues>
    </ItemGroup>
  </Target>
  <!-- Need to invoke MDMerge again to produce the "public" metadata using MDMerge's -createPublicMetadata and -transformExperimental flags -->
  <Target Name="MakeSDKMetadata" AfterTargets="CppWinRTMergeProjectWinMDInputs" BeforeTargets="XamlMetadataCodeGenMUX" Inputs="$(OutDir)Unmerged\Microsoft.UI.Xaml.winmd" Outputs="$(OutDir)sdk\Microsoft.UI.xaml.winmd">
    <PropertyGroup>
      <MdMergeExe>"$(WindowsSdkDir)bin\$(WindowsTargetPlatformVersion)\$(PreferredToolArchitecture)\mdmerge.exe"</MdMergeExe>
      <_MdMergeParameters>-v @(_MdMergeRefsDistinct->'-metadata_dir &quot;%(RelativeDir).&quot;', ' ')</_MdMergeParameters>
      <_MdMergeParameters>$(_MdMergeParameters) -o &quot;$(OutDir)\sdk&quot; -i &quot;$(CppWinRTUnmergedDir)&quot; -partial -n:3 -createPublicMetadata -transformExperimental:transform</_MdMergeParameters>
    </PropertyGroup>
    <Exec Command="$(MdMergeExe) $(_MdMergeParameters)" />    
  </Target>
  <Target Name="XamlMetadataCodeGenMUX" AfterTargets="CppWinRTMakeComponentProjection" BeforeTargets="ClCompile" 
  Inputs="$(OutDir)sdk\Microsoft.UI.Xaml.winmd;XamlMetadataProviderGenerated.tt;CommonHelpers.tt;WinRtType.tt" Outputs="$(OutDir)XamlMetadataProviderGenerated.cpp">
    <!-- Run XamlMetadataProviderGenerated.tt t4 template to generate XamlMetadataProviderGenerated.cpp from the winmd file -->
    <CallTarget Targets="TransformAll" />
    <ItemGroup>
      <FileWrites Include="$(OutDir)XamlMetadataProviderGenerated.cpp" />
    </ItemGroup>
  </Target>
  <Target Name="GetExistingGeneratedFilesForDependencyPropertyCodeGen" BeforeTargets="RunDependencyPropertyCodeGen">
    <CreateItem Include="$(MSBuildProjectDirectory)\..\Generated\*">
      <Output TaskParameter="Include" ItemName="DependencyPropertyCodeGenOutputs" />
    </CreateItem>
  </Target>
  <Target Name="RunDependencyPropertyCodeGen" AfterTargets="CppWinRTMakeComponentProjection" BeforeTargets="ClCompile" Inputs="$(OutDir)Microsoft.winmd" Outputs="@(DependencyPropertyCodeGenOutputs);$(MSBuildProjectDirectory)\..\Generated\AcrylicBrush.properties.cpp">
    <DependencyPropertyCodeGen WinMDInput="$(OutDir)Microsoft.winmd" References="@(CppWinRTPlatformWinMDReferences)" OutputDirectory="$(MSBuildProjectDirectory)\..\Generated" />
    <Touch Files="@(DependencyPropertyCodeGenOutputs)" />
  </Target>
  <Target Name="WorkAroundFastUpToDateCheckBug" AfterTargets="_GenerateProjectPriFileCore" Inputs="$(OutDir)$(TargetName).pri" Outputs="$(OutDir)$(TargetName).dll;$(OutDir)$(TargetName).winmd;$(OutDir)Microsoft.winmd" Condition="Exists('$(OutDir)$(TargetName).dll')">
    <Message Text="Touching '$(OutDir)$(TargetName).dll' because pri file changed to work around DevDiv bug https://devdiv.visualstudio.com/DevDiv/_workitems?id=297204" />
    <Touch Files="$(OutDir)$(TargetName).dll" />
    <Touch Files="$(OutDir)Microsoft.winmd" />
  </Target>
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('..\..\packages\Microsoft.CodeAnalysis.BinSkim.1.3.9\tools\x86\BinSkim.exe')" Text="$([System.String]::Format('$(ErrorText)', '..\..\packages\Microsoft.CodeAnalysis.BinSkim.1.3.9\tools\x86\BinSkim.exe'))" />
    <Error Condition="!Exists('..\..\packages\MUXCustomBuildTasks.1.0.44\build\native\MUXCustomBuildTasks.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\..\packages\MUXCustomBuildTasks.1.0.44\build\native\MUXCustomBuildTasks.targets'))" />
    <Error Condition="!Exists('..\..\packages\Microsoft.Build.Tasks.Git.1.0.0-beta2-18618-05\build\Microsoft.Build.Tasks.Git.props')" Text="$([System.String]::Format('$(ErrorText)', '..\..\packages\Microsoft.Build.Tasks.Git.1.0.0-beta2-18618-05\build\Microsoft.Build.Tasks.Git.props'))" />
    <Error Condition="!Exists('..\..\packages\Microsoft.Build.Tasks.Git.1.0.0-beta2-18618-05\build\Microsoft.Build.Tasks.Git.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\..\packages\Microsoft.Build.Tasks.Git.1.0.0-beta2-18618-05\build\Microsoft.Build.Tasks.Git.targets'))" />
    <Error Condition="!Exists('..\..\packages\Microsoft.SourceLink.Common.1.0.0-beta2-18618-05\build\Microsoft.SourceLink.Common.props')" Text="$([System.String]::Format('$(ErrorText)', '..\..\packages\Microsoft.SourceLink.Common.1.0.0-beta2-18618-05\build\Microsoft.SourceLink.Common.props'))" />
    <Error Condition="!Exists('..\..\packages\Microsoft.SourceLink.Common.1.0.0-beta2-18618-05\build\Microsoft.SourceLink.Common.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\..\packages\Microsoft.SourceLink.Common.1.0.0-beta2-18618-05\build\Microsoft.SourceLink.Common.targets'))" />
    <Error Condition="!Exists('..\..\packages\Microsoft.SourceLink.GitHub.1.0.0-beta2-18618-05\build\Microsoft.SourceLink.GitHub.props')" Text="$([System.String]::Format('$(ErrorText)', '..\..\packages\Microsoft.SourceLink.GitHub.1.0.0-beta2-18618-05\build\Microsoft.SourceLink.GitHub.props'))" />
    <Error Condition="!Exists('..\..\packages\Microsoft.SourceLink.GitHub.1.0.0-beta2-18618-05\build\Microsoft.SourceLink.GitHub.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\..\packages\Microsoft.SourceLink.GitHub.1.0.0-beta2-18618-05\build\Microsoft.SourceLink.GitHub.targets'))" />
    <Error Condition="!Exists('..\..\packages\Microsoft.Windows.CppWinRT.2.0.190603.8\build\native\Microsoft.Windows.CppWinRT.props')" Text="$([System.String]::Format('$(ErrorText)', '..\..\packages\Microsoft.Windows.CppWinRT.2.0.190603.8\build\native\Microsoft.Windows.CppWinRT.props'))" />
    <Error Condition="!Exists('..\..\packages\Microsoft.Windows.CppWinRT.2.0.190603.8\build\native\Microsoft.Windows.CppWinRT.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\..\packages\Microsoft.Windows.CppWinRT.2.0.190603.8\build\native\Microsoft.Windows.CppWinRT.targets'))" />
  </Target>
  <Target Name="RunBinSkim" AfterTargets="AfterBuild" Condition="'$(Configuration)'=='Release'">
    <PropertyGroup>
      <BinSkimCommand>..\..\packages\Microsoft.CodeAnalysis.BinSkim.1.3.9\tools\x86\BinSkim.exe analyze "$(TargetPath)"</BinSkimCommand>
    </PropertyGroup>
    <Message Text="Running BinSkim on $(TargetFileName) to scan for potential security issues" Importance="high" />
    <Exec Command="$(BinSkimCommand) | findstr &quot;error&quot;" IgnoreExitCode="true">
      <Output TaskParameter="ExitCode" PropertyName="ExitCode" />
    </Exec>
    <Error Text="BinSkim task failed." Condition="'$(ExitCode)'=='0'" />
  </Target>
  <Target Name="CheckCompatibility" BeforeTargets="PrepareForBuild" Condition="'$(Configuration)'=='Release'">
    <Message Text="Running CheckCompatibility to ensure that no known incompatibilities between the WinUI and Windows depots have been introduced." />
    <RunPowershellScript Path="$(ScriptPath)CheckCompatibility.ps1" />
  </Target>
  <!-- For the purposes of code coverage, we need to know where the intermediates directory is,
       since we need to re-link Microsoft.UI.Xaml.dll for code coverage.
       We can't get it from any environment variable, so let's write it to a text file as a workaround.
       We'll also output the MSVC tools directory for the same reason. -->
  <Target Name="AfterBuild" Condition="(!Exists('$(OutDir)IntermediateDirectoryLocation.txt') Or !Exists('$(OutDir)VCToolsInstallDirectoryLocation.txt'))">
    <WriteLinesToFile File="$(OutDir)IntermediateDirectoryLocation.txt" Lines="$(IntermediateOutputPath)" Overwrite="true" Encoding="Ascii" />
    <WriteLinesToFile File="$(OutDir)VCToolsInstallDirectoryLocation.txt" Lines="$(VCToolsInstallDir)" Overwrite="true" Encoding="Ascii" />
    <ItemGroup>
      <FileWrites Include="$(OutDir)IntermediateDirectoryLocation.txt" />
      <FileWrites Include="$(OutDir)VCToolsInstallDirectoryLocation.txt" />
    </ItemGroup>
  </Target>
  <PropertyGroup>
    <!-- Tell CreateLCGFile to use the LCE file from RC.EXE -->
    <LCEFile>$(_LceFile)</LCEFile>
  </PropertyGroup>
</Project>