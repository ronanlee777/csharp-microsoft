// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.

// DO NOT EDIT! This file was generated by CustomTasks.DependencyPropertyCodeGen
#include "pch.h"
#include "common.h"
#include "ProgressBarTemplateSettings.h"

GlobalDependencyProperty ProgressBarTemplateSettingsProperties::s_ClipRectProperty{ nullptr };
GlobalDependencyProperty ProgressBarTemplateSettingsProperties::s_ContainerAnimationEndPositionProperty{ nullptr };
GlobalDependencyProperty ProgressBarTemplateSettingsProperties::s_ContainerAnimationEndPosition2Property{ nullptr };
GlobalDependencyProperty ProgressBarTemplateSettingsProperties::s_ContainerAnimationMidPositionProperty{ nullptr };
GlobalDependencyProperty ProgressBarTemplateSettingsProperties::s_ContainerAnimationStartPositionProperty{ nullptr };
GlobalDependencyProperty ProgressBarTemplateSettingsProperties::s_ContainerAnimationStartPosition2Property{ nullptr };
GlobalDependencyProperty ProgressBarTemplateSettingsProperties::s_DispatcherProperty{ nullptr };
GlobalDependencyProperty ProgressBarTemplateSettingsProperties::s_EllipseAnimationEndPositionProperty{ nullptr };
GlobalDependencyProperty ProgressBarTemplateSettingsProperties::s_EllipseAnimationWellPositionProperty{ nullptr };
GlobalDependencyProperty ProgressBarTemplateSettingsProperties::s_EllipseDiameterProperty{ nullptr };
GlobalDependencyProperty ProgressBarTemplateSettingsProperties::s_EllipseOffsetProperty{ nullptr };
GlobalDependencyProperty ProgressBarTemplateSettingsProperties::s_IndicatorLengthDeltaProperty{ nullptr };

ProgressBarTemplateSettingsProperties::ProgressBarTemplateSettingsProperties()
{
    EnsureProperties();
}

void ProgressBarTemplateSettingsProperties::EnsureProperties()
{
    if (!s_ClipRectProperty)
    {
        s_ClipRectProperty =
            InitializeDependencyProperty(
                L"ClipRect",
                winrt::name_of<winrt::RectangleGeometry>(),
                winrt::name_of<winrt::ProgressBarTemplateSettings>(),
                false /* isAttached */,
                ValueHelper<winrt::RectangleGeometry>::BoxedDefaultValue(),
                nullptr);
    }
    if (!s_ContainerAnimationEndPositionProperty)
    {
        s_ContainerAnimationEndPositionProperty =
            InitializeDependencyProperty(
                L"ContainerAnimationEndPosition",
                winrt::name_of<double>(),
                winrt::name_of<winrt::ProgressBarTemplateSettings>(),
                false /* isAttached */,
                ValueHelper<double>::BoxedDefaultValue(),
                nullptr);
    }
    if (!s_ContainerAnimationEndPosition2Property)
    {
        s_ContainerAnimationEndPosition2Property =
            InitializeDependencyProperty(
                L"ContainerAnimationEndPosition2",
                winrt::name_of<double>(),
                winrt::name_of<winrt::ProgressBarTemplateSettings>(),
                false /* isAttached */,
                ValueHelper<double>::BoxedDefaultValue(),
                nullptr);
    }
    if (!s_ContainerAnimationMidPositionProperty)
    {
        s_ContainerAnimationMidPositionProperty =
            InitializeDependencyProperty(
                L"ContainerAnimationMidPosition",
                winrt::name_of<double>(),
                winrt::name_of<winrt::ProgressBarTemplateSettings>(),
                false /* isAttached */,
                ValueHelper<double>::BoxedDefaultValue(),
                nullptr);
    }
    if (!s_ContainerAnimationStartPositionProperty)
    {
        s_ContainerAnimationStartPositionProperty =
            InitializeDependencyProperty(
                L"ContainerAnimationStartPosition",
                winrt::name_of<double>(),
                winrt::name_of<winrt::ProgressBarTemplateSettings>(),
                false /* isAttached */,
                ValueHelper<double>::BoxedDefaultValue(),
                nullptr);
    }
    if (!s_ContainerAnimationStartPosition2Property)
    {
        s_ContainerAnimationStartPosition2Property =
            InitializeDependencyProperty(
                L"ContainerAnimationStartPosition2",
                winrt::name_of<double>(),
                winrt::name_of<winrt::ProgressBarTemplateSettings>(),
                false /* isAttached */,
                ValueHelper<double>::BoxedDefaultValue(),
                nullptr);
    }
    if (!s_DispatcherProperty)
    {
        s_DispatcherProperty =
            InitializeDependencyProperty(
                L"Dispatcher",
                winrt::name_of<winrt::CoreDispatcher>(),
                winrt::name_of<winrt::ProgressBarTemplateSettings>(),
                false /* isAttached */,
                ValueHelper<winrt::CoreDispatcher>::BoxedDefaultValue(),
                nullptr);
    }
    if (!s_EllipseAnimationEndPositionProperty)
    {
        s_EllipseAnimationEndPositionProperty =
            InitializeDependencyProperty(
                L"EllipseAnimationEndPosition",
                winrt::name_of<double>(),
                winrt::name_of<winrt::ProgressBarTemplateSettings>(),
                false /* isAttached */,
                ValueHelper<double>::BoxedDefaultValue(),
                nullptr);
    }
    if (!s_EllipseAnimationWellPositionProperty)
    {
        s_EllipseAnimationWellPositionProperty =
            InitializeDependencyProperty(
                L"EllipseAnimationWellPosition",
                winrt::name_of<double>(),
                winrt::name_of<winrt::ProgressBarTemplateSettings>(),
                false /* isAttached */,
                ValueHelper<double>::BoxedDefaultValue(),
                nullptr);
    }
    if (!s_EllipseDiameterProperty)
    {
        s_EllipseDiameterProperty =
            InitializeDependencyProperty(
                L"EllipseDiameter",
                winrt::name_of<double>(),
                winrt::name_of<winrt::ProgressBarTemplateSettings>(),
                false /* isAttached */,
                ValueHelper<double>::BoxedDefaultValue(),
                nullptr);
    }
    if (!s_EllipseOffsetProperty)
    {
        s_EllipseOffsetProperty =
            InitializeDependencyProperty(
                L"EllipseOffset",
                winrt::name_of<double>(),
                winrt::name_of<winrt::ProgressBarTemplateSettings>(),
                false /* isAttached */,
                ValueHelper<double>::BoxedDefaultValue(),
                nullptr);
    }
    if (!s_IndicatorLengthDeltaProperty)
    {
        s_IndicatorLengthDeltaProperty =
            InitializeDependencyProperty(
                L"IndicatorLengthDelta",
                winrt::name_of<double>(),
                winrt::name_of<winrt::ProgressBarTemplateSettings>(),
                false /* isAttached */,
                ValueHelper<double>::BoxedDefaultValue(),
                nullptr);
    }
}

void ProgressBarTemplateSettingsProperties::ClearProperties()
{
    s_ClipRectProperty = nullptr;
    s_ContainerAnimationEndPositionProperty = nullptr;
    s_ContainerAnimationEndPosition2Property = nullptr;
    s_ContainerAnimationMidPositionProperty = nullptr;
    s_ContainerAnimationStartPositionProperty = nullptr;
    s_ContainerAnimationStartPosition2Property = nullptr;
    s_DispatcherProperty = nullptr;
    s_EllipseAnimationEndPositionProperty = nullptr;
    s_EllipseAnimationWellPositionProperty = nullptr;
    s_EllipseDiameterProperty = nullptr;
    s_EllipseOffsetProperty = nullptr;
    s_IndicatorLengthDeltaProperty = nullptr;
}

void ProgressBarTemplateSettingsProperties::ClipRect(winrt::RectangleGeometry const& value)
{
    static_cast<ProgressBarTemplateSettings*>(this)->SetValue(s_ClipRectProperty, ValueHelper<winrt::RectangleGeometry>::BoxValueIfNecessary(value));
}

winrt::RectangleGeometry ProgressBarTemplateSettingsProperties::ClipRect()
{
    return ValueHelper<winrt::RectangleGeometry>::CastOrUnbox(static_cast<ProgressBarTemplateSettings*>(this)->GetValue(s_ClipRectProperty));
}

void ProgressBarTemplateSettingsProperties::ContainerAnimationEndPosition(double value)
{
    static_cast<ProgressBarTemplateSettings*>(this)->SetValue(s_ContainerAnimationEndPositionProperty, ValueHelper<double>::BoxValueIfNecessary(value));
}

double ProgressBarTemplateSettingsProperties::ContainerAnimationEndPosition()
{
    return ValueHelper<double>::CastOrUnbox(static_cast<ProgressBarTemplateSettings*>(this)->GetValue(s_ContainerAnimationEndPositionProperty));
}

void ProgressBarTemplateSettingsProperties::ContainerAnimationEndPosition2(double value)
{
    static_cast<ProgressBarTemplateSettings*>(this)->SetValue(s_ContainerAnimationEndPosition2Property, ValueHelper<double>::BoxValueIfNecessary(value));
}

double ProgressBarTemplateSettingsProperties::ContainerAnimationEndPosition2()
{
    return ValueHelper<double>::CastOrUnbox(static_cast<ProgressBarTemplateSettings*>(this)->GetValue(s_ContainerAnimationEndPosition2Property));
}

void ProgressBarTemplateSettingsProperties::ContainerAnimationMidPosition(double value)
{
    static_cast<ProgressBarTemplateSettings*>(this)->SetValue(s_ContainerAnimationMidPositionProperty, ValueHelper<double>::BoxValueIfNecessary(value));
}

double ProgressBarTemplateSettingsProperties::ContainerAnimationMidPosition()
{
    return ValueHelper<double>::CastOrUnbox(static_cast<ProgressBarTemplateSettings*>(this)->GetValue(s_ContainerAnimationMidPositionProperty));
}

void ProgressBarTemplateSettingsProperties::ContainerAnimationStartPosition(double value)
{
    static_cast<ProgressBarTemplateSettings*>(this)->SetValue(s_ContainerAnimationStartPositionProperty, ValueHelper<double>::BoxValueIfNecessary(value));
}

double ProgressBarTemplateSettingsProperties::ContainerAnimationStartPosition()
{
    return ValueHelper<double>::CastOrUnbox(static_cast<ProgressBarTemplateSettings*>(this)->GetValue(s_ContainerAnimationStartPositionProperty));
}

void ProgressBarTemplateSettingsProperties::ContainerAnimationStartPosition2(double value)
{
    static_cast<ProgressBarTemplateSettings*>(this)->SetValue(s_ContainerAnimationStartPosition2Property, ValueHelper<double>::BoxValueIfNecessary(value));
}

double ProgressBarTemplateSettingsProperties::ContainerAnimationStartPosition2()
{
    return ValueHelper<double>::CastOrUnbox(static_cast<ProgressBarTemplateSettings*>(this)->GetValue(s_ContainerAnimationStartPosition2Property));
}

void ProgressBarTemplateSettingsProperties::Dispatcher(winrt::CoreDispatcher const& value)
{
    static_cast<ProgressBarTemplateSettings*>(this)->SetValue(s_DispatcherProperty, ValueHelper<winrt::CoreDispatcher>::BoxValueIfNecessary(value));
}

winrt::CoreDispatcher ProgressBarTemplateSettingsProperties::Dispatcher()
{
    return ValueHelper<winrt::CoreDispatcher>::CastOrUnbox(static_cast<ProgressBarTemplateSettings*>(this)->GetValue(s_DispatcherProperty));
}

void ProgressBarTemplateSettingsProperties::EllipseAnimationEndPosition(double value)
{
    static_cast<ProgressBarTemplateSettings*>(this)->SetValue(s_EllipseAnimationEndPositionProperty, ValueHelper<double>::BoxValueIfNecessary(value));
}

double ProgressBarTemplateSettingsProperties::EllipseAnimationEndPosition()
{
    return ValueHelper<double>::CastOrUnbox(static_cast<ProgressBarTemplateSettings*>(this)->GetValue(s_EllipseAnimationEndPositionProperty));
}

void ProgressBarTemplateSettingsProperties::EllipseAnimationWellPosition(double value)
{
    static_cast<ProgressBarTemplateSettings*>(this)->SetValue(s_EllipseAnimationWellPositionProperty, ValueHelper<double>::BoxValueIfNecessary(value));
}

double ProgressBarTemplateSettingsProperties::EllipseAnimationWellPosition()
{
    return ValueHelper<double>::CastOrUnbox(static_cast<ProgressBarTemplateSettings*>(this)->GetValue(s_EllipseAnimationWellPositionProperty));
}

void ProgressBarTemplateSettingsProperties::EllipseDiameter(double value)
{
    static_cast<ProgressBarTemplateSettings*>(this)->SetValue(s_EllipseDiameterProperty, ValueHelper<double>::BoxValueIfNecessary(value));
}

double ProgressBarTemplateSettingsProperties::EllipseDiameter()
{
    return ValueHelper<double>::CastOrUnbox(static_cast<ProgressBarTemplateSettings*>(this)->GetValue(s_EllipseDiameterProperty));
}

void ProgressBarTemplateSettingsProperties::EllipseOffset(double value)
{
    static_cast<ProgressBarTemplateSettings*>(this)->SetValue(s_EllipseOffsetProperty, ValueHelper<double>::BoxValueIfNecessary(value));
}

double ProgressBarTemplateSettingsProperties::EllipseOffset()
{
    return ValueHelper<double>::CastOrUnbox(static_cast<ProgressBarTemplateSettings*>(this)->GetValue(s_EllipseOffsetProperty));
}

void ProgressBarTemplateSettingsProperties::IndicatorLengthDelta(double value)
{
    static_cast<ProgressBarTemplateSettings*>(this)->SetValue(s_IndicatorLengthDeltaProperty, ValueHelper<double>::BoxValueIfNecessary(value));
}

double ProgressBarTemplateSettingsProperties::IndicatorLengthDelta()
{
    return ValueHelper<double>::CastOrUnbox(static_cast<ProgressBarTemplateSettings*>(this)->GetValue(s_IndicatorLengthDeltaProperty));
}
