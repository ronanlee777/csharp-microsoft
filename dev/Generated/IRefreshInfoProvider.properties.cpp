// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.

// DO NOT EDIT! This file was generated by CustomTasks.DependencyPropertyCodeGen
#include "pch.h"
#include "common.h"
#include "IRefreshInfoProvider.h"


IRefreshInfoProviderProperties::IRefreshInfoProviderProperties()
    : m_interactionRatioChangedEventSource{static_cast<IRefreshInfoProvider*>(this)}
    , m_isInteractingForRefreshChangedEventSource{static_cast<IRefreshInfoProvider*>(this)}
    , m_refreshCompletedEventSource{static_cast<IRefreshInfoProvider*>(this)}
    , m_refreshStartedEventSource{static_cast<IRefreshInfoProvider*>(this)}
{
}

void IRefreshInfoProviderProperties::EnsureProperties()
{
}

void IRefreshInfoProviderProperties::ClearProperties()
{
}

winrt::event_token IRefreshInfoProviderProperties::InteractionRatioChanged(winrt::TypedEventHandler<winrt::IRefreshInfoProvider, winrt::RefreshInteractionRatioChangedEventArgs> const& value)
{
    return m_interactionRatioChangedEventSource.add(value);
}

void IRefreshInfoProviderProperties::InteractionRatioChanged(winrt::event_token const& token)
{
    m_interactionRatioChangedEventSource.remove(token);
}

winrt::event_token IRefreshInfoProviderProperties::IsInteractingForRefreshChanged(winrt::TypedEventHandler<winrt::IRefreshInfoProvider, winrt::IInspectable> const& value)
{
    return m_isInteractingForRefreshChangedEventSource.add(value);
}

void IRefreshInfoProviderProperties::IsInteractingForRefreshChanged(winrt::event_token const& token)
{
    m_isInteractingForRefreshChangedEventSource.remove(token);
}

winrt::event_token IRefreshInfoProviderProperties::RefreshCompleted(winrt::TypedEventHandler<winrt::IRefreshInfoProvider, winrt::IInspectable> const& value)
{
    return m_refreshCompletedEventSource.add(value);
}

void IRefreshInfoProviderProperties::RefreshCompleted(winrt::event_token const& token)
{
    m_refreshCompletedEventSource.remove(token);
}

winrt::event_token IRefreshInfoProviderProperties::RefreshStarted(winrt::TypedEventHandler<winrt::IRefreshInfoProvider, winrt::IInspectable> const& value)
{
    return m_refreshStartedEventSource.add(value);
}

void IRefreshInfoProviderProperties::RefreshStarted(winrt::event_token const& token)
{
    m_refreshStartedEventSource.remove(token);
}
