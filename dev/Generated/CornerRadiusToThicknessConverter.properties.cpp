// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.

// DO NOT EDIT! This file was generated by CustomTasks.DependencyPropertyCodeGen
#include "pch.h"
#include "common.h"
#include "CornerRadiusToThicknessConverter.h"

CppWinRTActivatableClassWithDPFactory(CornerRadiusToThicknessConverter)

GlobalDependencyProperty CornerRadiusToThicknessConverterProperties::s_ConversionKindProperty{ nullptr };

CornerRadiusToThicknessConverterProperties::CornerRadiusToThicknessConverterProperties()
{
    EnsureProperties();
}

void CornerRadiusToThicknessConverterProperties::EnsureProperties()
{
    if (!s_ConversionKindProperty)
    {
        s_ConversionKindProperty =
            InitializeDependencyProperty(
                L"ConversionKind",
                winrt::name_of<winrt::CornerRadiusToThicknessConverterKind>(),
                winrt::name_of<winrt::CornerRadiusToThicknessConverter>(),
                false /* isAttached */,
                ValueHelper<winrt::CornerRadiusToThicknessConverterKind>::BoxValueIfNecessary(winrt::CornerRadiusToThicknessConverterKind::FilterLeftAndRightFromTop),
                nullptr);
    }
}

void CornerRadiusToThicknessConverterProperties::ClearProperties()
{
    s_ConversionKindProperty = nullptr;
}

void CornerRadiusToThicknessConverterProperties::ConversionKind(winrt::CornerRadiusToThicknessConverterKind const& value)
{
    static_cast<CornerRadiusToThicknessConverter*>(this)->SetValue(s_ConversionKindProperty, ValueHelper<winrt::CornerRadiusToThicknessConverterKind>::BoxValueIfNecessary(value));
}

winrt::CornerRadiusToThicknessConverterKind CornerRadiusToThicknessConverterProperties::ConversionKind()
{
    return ValueHelper<winrt::CornerRadiusToThicknessConverterKind>::CastOrUnbox(static_cast<CornerRadiusToThicknessConverter*>(this)->GetValue(s_ConversionKindProperty));
}
