// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.

// DO NOT EDIT! This file was generated by CustomTasks.DependencyPropertyCodeGen
#pragma once

class NumberBoxProperties
{
public:
    NumberBoxProperties();

    void AcceptsCalculation(bool value);
    bool AcceptsCalculation();

    void BasicValidationMode(winrt::NumberBoxBasicValidationMode const& value);
    winrt::NumberBoxBasicValidationMode BasicValidationMode();

    void Header(winrt::hstring const& value);
    winrt::hstring Header();

    void HyperScrollEnabled(bool value);
    bool HyperScrollEnabled();

    void Maximum(double value);
    double Maximum();

    void Minimum(double value);
    double Minimum();

    void NumberFormatter(winrt::INumberFormatter2 const& value);
    winrt::INumberFormatter2 NumberFormatter();

    void PlaceholderText(winrt::hstring const& value);
    winrt::hstring PlaceholderText();

    void SpinButtonPlacementMode(winrt::NumberBoxSpinButtonPlacementMode const& value);
    winrt::NumberBoxSpinButtonPlacementMode SpinButtonPlacementMode();

    void StepFrequency(double value);
    double StepFrequency();

    void Text(winrt::hstring const& value);
    winrt::hstring Text();

    void Value(double value);
    double Value();

    void WrapEnabled(bool value);
    bool WrapEnabled();

    static winrt::DependencyProperty AcceptsCalculationProperty() { return s_AcceptsCalculationProperty; }
    static winrt::DependencyProperty BasicValidationModeProperty() { return s_BasicValidationModeProperty; }
    static winrt::DependencyProperty HeaderProperty() { return s_HeaderProperty; }
    static winrt::DependencyProperty HyperScrollEnabledProperty() { return s_HyperScrollEnabledProperty; }
    static winrt::DependencyProperty MaximumProperty() { return s_MaximumProperty; }
    static winrt::DependencyProperty MinimumProperty() { return s_MinimumProperty; }
    static winrt::DependencyProperty NumberFormatterProperty() { return s_NumberFormatterProperty; }
    static winrt::DependencyProperty PlaceholderTextProperty() { return s_PlaceholderTextProperty; }
    static winrt::DependencyProperty SpinButtonPlacementModeProperty() { return s_SpinButtonPlacementModeProperty; }
    static winrt::DependencyProperty StepFrequencyProperty() { return s_StepFrequencyProperty; }
    static winrt::DependencyProperty TextProperty() { return s_TextProperty; }
    static winrt::DependencyProperty ValueProperty() { return s_ValueProperty; }
    static winrt::DependencyProperty WrapEnabledProperty() { return s_WrapEnabledProperty; }

    static GlobalDependencyProperty s_AcceptsCalculationProperty;
    static GlobalDependencyProperty s_BasicValidationModeProperty;
    static GlobalDependencyProperty s_HeaderProperty;
    static GlobalDependencyProperty s_HyperScrollEnabledProperty;
    static GlobalDependencyProperty s_MaximumProperty;
    static GlobalDependencyProperty s_MinimumProperty;
    static GlobalDependencyProperty s_NumberFormatterProperty;
    static GlobalDependencyProperty s_PlaceholderTextProperty;
    static GlobalDependencyProperty s_SpinButtonPlacementModeProperty;
    static GlobalDependencyProperty s_StepFrequencyProperty;
    static GlobalDependencyProperty s_TextProperty;
    static GlobalDependencyProperty s_ValueProperty;
    static GlobalDependencyProperty s_WrapEnabledProperty;

    winrt::event_token ValueChanged(winrt::TypedEventHandler<winrt::NumberBox, winrt::NumberBoxValueChangedEventArgs> const& value);
    void ValueChanged(winrt::event_token const& token);

    event_source<winrt::TypedEventHandler<winrt::NumberBox, winrt::NumberBoxValueChangedEventArgs>> m_valueChangedEventSource;

    static void EnsureProperties();
    static void ClearProperties();

    static void OnBasicValidationModePropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnMaximumPropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnMinimumPropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnNumberFormatterPropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnSpinButtonPlacementModePropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnTextPropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);

    static void OnValuePropertyChanged(
        winrt::DependencyObject const& sender,
        winrt::DependencyPropertyChangedEventArgs const& args);
};
