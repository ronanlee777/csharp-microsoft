// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.

// DO NOT EDIT! This file was generated by CustomTasks.DependencyPropertyCodeGen
#include "pch.h"
#include "common.h"
#include "IRepeaterScrollingSurface.h"


IRepeaterScrollingSurfaceProperties::IRepeaterScrollingSurfaceProperties()
    : m_configurationChangedEventSource{static_cast<IRepeaterScrollingSurface*>(this)}
    , m_postArrangeEventSource{static_cast<IRepeaterScrollingSurface*>(this)}
    , m_viewportChangedEventSource{static_cast<IRepeaterScrollingSurface*>(this)}
{
}

void IRepeaterScrollingSurfaceProperties::EnsureProperties()
{
}

void IRepeaterScrollingSurfaceProperties::ClearProperties()
{
}

winrt::event_token IRepeaterScrollingSurfaceProperties::ConfigurationChanged(winrt::ConfigurationChangedEventHandler const& value)
{
    return m_configurationChangedEventSource.add(value);
}

void IRepeaterScrollingSurfaceProperties::ConfigurationChanged(winrt::event_token const& token)
{
    m_configurationChangedEventSource.remove(token);
}

winrt::event_token IRepeaterScrollingSurfaceProperties::PostArrange(winrt::PostArrangeEventHandler const& value)
{
    return m_postArrangeEventSource.add(value);
}

void IRepeaterScrollingSurfaceProperties::PostArrange(winrt::event_token const& token)
{
    m_postArrangeEventSource.remove(token);
}

winrt::event_token IRepeaterScrollingSurfaceProperties::ViewportChanged(winrt::ViewportChangedEventHandler const& value)
{
    return m_viewportChangedEventSource.add(value);
}

void IRepeaterScrollingSurfaceProperties::ViewportChanged(winrt::event_token const& token)
{
    m_viewportChangedEventSource.remove(token);
}
