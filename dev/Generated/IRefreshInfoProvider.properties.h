// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.

// DO NOT EDIT! This file was generated by CustomTasks.DependencyPropertyCodeGen
#pragma once

class IRefreshInfoProviderProperties
{
public:
    IRefreshInfoProviderProperties();



    winrt::event_token InteractionRatioChanged(winrt::TypedEventHandler<winrt::IRefreshInfoProvider, winrt::RefreshInteractionRatioChangedEventArgs> const& value);
    void InteractionRatioChanged(winrt::event_token const& token);
    winrt::event_token IsInteractingForRefreshChanged(winrt::TypedEventHandler<winrt::IRefreshInfoProvider, winrt::IInspectable> const& value);
    void IsInteractingForRefreshChanged(winrt::event_token const& token);
    winrt::event_token RefreshCompleted(winrt::TypedEventHandler<winrt::IRefreshInfoProvider, winrt::IInspectable> const& value);
    void RefreshCompleted(winrt::event_token const& token);
    winrt::event_token RefreshStarted(winrt::TypedEventHandler<winrt::IRefreshInfoProvider, winrt::IInspectable> const& value);
    void RefreshStarted(winrt::event_token const& token);

    event_source<winrt::TypedEventHandler<winrt::IRefreshInfoProvider, winrt::RefreshInteractionRatioChangedEventArgs>> m_interactionRatioChangedEventSource;
    event_source<winrt::TypedEventHandler<winrt::IRefreshInfoProvider, winrt::IInspectable>> m_isInteractingForRefreshChangedEventSource;
    event_source<winrt::TypedEventHandler<winrt::IRefreshInfoProvider, winrt::IInspectable>> m_refreshCompletedEventSource;
    event_source<winrt::TypedEventHandler<winrt::IRefreshInfoProvider, winrt::IInspectable>> m_refreshStartedEventSource;

    static void EnsureProperties();
    static void ClearProperties();
};
