// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.

// DO NOT EDIT! This file was generated by CustomTasks.DependencyPropertyCodeGen
#include "pch.h"
#include "common.h"
#include "ProgressRing.h"

namespace winrt::Microsoft::UI::Xaml::Controls
{
    CppWinRTActivatableClassWithDPFactory(ProgressRing)
}

#include "ProgressRing.g.cpp"

GlobalDependencyProperty ProgressRingProperties::s_IsIndeterminateProperty{ nullptr };

ProgressRingProperties::ProgressRingProperties()
{
    EnsureProperties();
}

void ProgressRingProperties::EnsureProperties()
{
    if (!s_IsIndeterminateProperty)
    {
        s_IsIndeterminateProperty =
            InitializeDependencyProperty(
                L"IsIndeterminate",
                winrt::name_of<bool>(),
                winrt::name_of<winrt::ProgressRing>(),
                false /* isAttached */,
                ValueHelper<bool>::BoxedDefaultValue(),
                winrt::PropertyChangedCallback(&OnIsIndeterminatePropertyChanged));
    }
}

void ProgressRingProperties::ClearProperties()
{
    s_IsIndeterminateProperty = nullptr;
}

void ProgressRingProperties::OnIsIndeterminatePropertyChanged(
    winrt::DependencyObject const& sender,
    winrt::DependencyPropertyChangedEventArgs const& args)
{
    auto owner = sender.as<winrt::ProgressRing>();
    winrt::get_self<ProgressRing>(owner)->OnIsIndeterminatePropertyChanged(args);
}

void ProgressRingProperties::IsIndeterminate(bool value)
{
    static_cast<ProgressRing*>(this)->SetValue(s_IsIndeterminateProperty, ValueHelper<bool>::BoxValueIfNecessary(value));
}

bool ProgressRingProperties::IsIndeterminate()
{
    return ValueHelper<bool>::CastOrUnbox(static_cast<ProgressRing*>(this)->GetValue(s_IsIndeterminateProperty));
}
