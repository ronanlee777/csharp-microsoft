<!-- Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT License. See LICENSE in the project root for license information. -->
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Microsoft.UI.Xaml.Controls"
    xmlns:contract7Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,7)">
    <Style TargetType="local:Expander" BasedOn="{StaticResource DefaultExpanderStyle}"/>
    
    <Style x:Key="DefaultExpanderStyle" TargetType="local:Expander">
        <!-- We won't make this control tab stoppable, since the tab focus should go
            to the toggle button. For this logic, several things were made:
            1. Expander::OnApplyTemplate - We set the toggle button's events source to the expander's. This will announce expander properties
               (expand/collapse) changes to narrator. Without this, narrator would announce the toggle button's "on/off" logic
               instead of the "expand/collapse" logic.
            2. ExpanderAutomationPeer::GetChildrenCore - Because of 1., we need to override GetChildrenCore to NOT include the toggle button.
               If we don't do this, we create a weird dependency cycle between the toggle button and the expander.
            3. ExpanderAutomationPeer::GetPeerFromPointCore Finally, when using narrator with a touch screen, this was overriden as well, to
               focus the toggle button programmatically to sync the narrator focus with the keyboard focus.
               Without this override, the narrator user that focuses the expander on a touch screen will see that pressing "Tab"
               doesn't work how they would expect.-->
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:Expander">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ExpandStates">
                                <VisualState x:Name="Expanded">
                                    <VisualState.Storyboard>
                                        <Storyboard>
                                            <PopInThemeAnimation x:Name="PopIn" TargetName="ExpanderContent" FromVerticalOffset="-50" FromHorizontalOffset="0"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpanderContent" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState.Storyboard>
                                </VisualState>
                                <VisualState x:Name="Collapsed">
                                    <VisualState.Storyboard>
                                        <Storyboard>
                                            <PopOutThemeAnimation TargetName="ExpanderContent" />
                                        </Storyboard>
                                    </VisualState.Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ExpandDirectionStates">
                                <VisualState x:Name="Down" />
                                <VisualState x:Name="Up">
                                    <VisualState.Setters>
                                        <Setter Target="ExpanderHeader.Style" Value="{StaticResource ExpanderHeaderUpStyle}"/>
                                        <Setter Target="ExpanderHeader.(Grid.Row)" Value="1" />
                                        <Setter Target="ExpanderContent.(Grid.Row)" Value="0" />
                                        <Setter Target="Row0.Height" Value="*" />
                                        <Setter Target="Row1.Height" Value="Auto" />
                                        <Setter Target="PopIn.FromVerticalOffset" Value="{ThemeResource ExpanderPopinVerticalOffset}"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="Row0" Height="Auto" />
                            <RowDefinition x:Name="Row1" Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="Column0" Width="*" />
                            <ColumnDefinition x:Name="Column1" Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <ToggleButton
                            x:Name="ExpanderHeader"
                            AutomationProperties.AutomationId="ExpanderToggleButton"
                            MinWidth="0"
                            MinHeight="0"
                            IsEnabled="{TemplateBinding IsEnabled}"
                            Style="{StaticResource ExpanderHeaderDownStyle}"
                            Content="{TemplateBinding Header}"
                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                            ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                            IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Padding="{TemplateBinding Padding}"
                          />

                        <ContentPresenter
                            x:Name="ExpanderContent"
                            Grid.Row="1"
                            Visibility="Collapsed"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderHeaderDownStyle" TargetType="ToggleButton">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Background" Value="{ThemeResource ExpanderHeaderBackground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                            Storyboard.TargetProperty="Angle"
                                            To="180.0" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="CheckedPointerOver" >
                                    <Storyboard >
                                        <DoubleAnimation
                                            Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                            Storyboard.TargetProperty="Angle"
                                            To="180.0" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="CheckedPressed">
                                    <Storyboard >
                                        <DoubleAnimation
                                            Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                            Storyboard.TargetProperty="Angle"
                                            To="180.0" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="CheckedDisabled">
                                    <Storyboard >
                                        <DoubleAnimation
                                            Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                            Storyboard.TargetProperty="Angle"
                                            To="180.0" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate" />
                                <VisualState x:Name="IndeterminatePointerOver" />
                                <VisualState x:Name="IndeterminatePressed" />
                                <VisualState x:Name="IndeterminateDisabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>


                        <ContentPresenter 
                            x:Name="ContentPresenter"
                            Background="{TemplateBinding Background}"
                            contract7Present:BackgroundSizing="{TemplateBinding BackgroundSizing}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTransitions="{TemplateBinding ContentTransitions}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            Padding="{TemplateBinding Padding}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            AutomationProperties.AccessibilityView="Raw">
                        </ContentPresenter>

                        <Grid
                            x:Name="ExpandCollapseChevron"
                            Grid.Column="1"
                            Width="{ThemeResource ExpanderChevronWidth}"
                            Margin="{ThemeResource ExpanderChevronMargin}"
                            Background="{ThemeResource ExpanderChevronBackground}">
                            <TextBlock
                                RenderTransformOrigin="0.5, 0.5"
                                Foreground="{ThemeResource ExpanderChevronForeground}"
                                Text="{StaticResource ExpanderChevronGlyph}"
                                FontFamily="{StaticResource SymbolThemeFontFamily}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                AutomationProperties.AccessibilityView="Raw"
                                IsTextScaleFactorEnabled="False">
                                <TextBlock.RenderTransform>
                                    <RotateTransform x:Name="ExpandCollapseChevronRotateTransform" Angle="0"/>
                                </TextBlock.RenderTransform>
                            </TextBlock>
                        </Grid>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderHeaderUpStyle" TargetType="ToggleButton">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Background" Value="{ThemeResource ExpanderHeaderBackground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                            Storyboard.TargetProperty="Angle"
                                            To="0.0" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="CheckedPointerOver" >
                                    <Storyboard >
                                        <DoubleAnimation
                                            Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                            Storyboard.TargetProperty="Angle"
                                            To="0.0" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="CheckedPressed">
                                    <Storyboard >
                                        <DoubleAnimation
                                            Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                            Storyboard.TargetProperty="Angle"
                                            To="0.0" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="CheckedDisabled">
                                    <Storyboard >
                                        <DoubleAnimation
                                            Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                            Storyboard.TargetProperty="Angle"
                                            To="0.0" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate" />
                                <VisualState x:Name="IndeterminatePointerOver" />
                                <VisualState x:Name="IndeterminatePressed" />
                                <VisualState x:Name="IndeterminateDisabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>


                        <ContentPresenter 
                            x:Name="ContentPresenter"
                            Background="{TemplateBinding Background}"
                            contract7Present:BackgroundSizing="{TemplateBinding BackgroundSizing}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTransitions="{TemplateBinding ContentTransitions}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            Padding="{TemplateBinding Padding}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            AutomationProperties.AccessibilityView="Raw">
                        </ContentPresenter>

                        <Grid
                            x:Name="ExpandCollapseChevron"
                            Grid.Column="1"
                            Width="{ThemeResource ExpanderChevronWidth}"
                            Margin="{ThemeResource ExpanderChevronMargin}"
                            Background="{ThemeResource ExpanderChevronBackground}">
                            <TextBlock
                                RenderTransformOrigin="0.5, 0.5"
                                Foreground="{ThemeResource ExpanderChevronForeground}"
                                Text="{StaticResource ExpanderChevronGlyph}"
                                FontFamily="{StaticResource SymbolThemeFontFamily}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                AutomationProperties.AccessibilityView="Raw"
                                IsTextScaleFactorEnabled="False">
                                <TextBlock.RenderTransform>
                                    <RotateTransform x:Name="ExpandCollapseChevronRotateTransform" Angle="180"/>
                                </TextBlock.RenderTransform>
                            </TextBlock>
                        </Grid>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
