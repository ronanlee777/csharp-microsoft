//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           7.0.0-build.57+g2cc4f0c931
//       
//       Command:
//           LottieGen -Language Cppwinrt -InputFile Controls_01_Checkmark.json
//       
//       Input file:
//           Controls_01_Checkmark.json (30311 bytes created 16:32-08:00 Nov 23 2020)
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// ____________________________________
// |       Object stats       | Count |
// |__________________________|_______|
// | All CompositionObjects   |   323 |
// |--------------------------+-------|
// | Expression animators     |    65 |
// | KeyFrame animators       |    50 |
// | Reference parameters     |    78 |
// | Expression operations    |    60 |
// |--------------------------+-------|
// | Animated brushes         |    15 |
// | Animated gradient stops  |     - |
// | ExpressionAnimations     |    16 |
// | PathKeyFrameAnimations   |     - |
// |--------------------------+-------|
// | ContainerVisuals         |     1 |
// | ShapeVisuals             |     1 |
// |--------------------------+-------|
// | ContainerShapes          |     8 |
// | CompositionSpriteShapes  |    20 |
// |--------------------------+-------|
// | Brushes                  |    15 |
// | Gradient stops           |     - |
// | CompositionVisualSurface |     - |
// ------------------------------------
#include "pch.h"
#include "Controls_01_Checkmark.h"
#include <winrt/Windows.Foundation.Metadata.h>
#include <winrt/Windows.UI.Composition.h>
#include "d2d1.h"
#include <d2d1_1.h>
#include <d2d1helper.h>
#include <Windows.Graphics.Interop.h>
#include <winrt/Windows.Graphics.Effects.h>

using namespace winrt::Windows::Foundation;
using namespace winrt::Windows::Foundation::Numerics;
using namespace winrt::Windows::Graphics;
using namespace winrt::Windows::UI;
using namespace winrt::Windows::UI::Composition;
using TimeSpan = winrt::Windows::Foundation::TimeSpan;

namespace winrt::Microsoft::UI::Xaml::Controls::AnimatedVisuals
{
    CppWinRTActivatableClassWithBasicFactory(Controls_01_Checkmark)
}

#include "AnimatedVisuals\Controls_01_Checkmark.g.cpp"

class CanvasGeometry : public winrt::implements<CanvasGeometry,
    IGeometrySource2D,
    Windows::Graphics::IGeometrySource2DInterop>
{
    winrt::com_ptr<ID2D1Geometry> _geometry{ nullptr };

public:
    CanvasGeometry(winrt::com_ptr<ID2D1Geometry> geometry)
        : _geometry{ geometry }
    { }

    // IGeometrySource2D.
    winrt::com_ptr<ID2D1Geometry> Geometry() { return _geometry; }

    // IGeometrySource2DInterop.
    IFACEMETHODIMP GetGeometry(ID2D1Geometry** value) override
    {
        _geometry.copy_to(value);
        return S_OK;
    }

    // IGeometrySource2DInterop.
    IFACEMETHODIMP TryGetGeometryUsingFactory(ID2D1Factory*, ID2D1Geometry**) override
    {
        return E_NOTIMPL;
    }
};

class Controls_01_Checkmark_AnimatedVisual : public winrt::implements<Controls_01_Checkmark_AnimatedVisual,
        winrt::Microsoft::UI::Xaml::Controls::IAnimatedVisual,
        IClosable>
{
    winrt::com_ptr<ID2D1Factory> _d2dFactory{ nullptr };
    static constexpr int64_t c_durationTicks{ 45000000L };
    Compositor const _c{ nullptr };
    ExpressionAnimation const _reusableExpressionAnimation{ nullptr };
    CompositionPropertySet const _themeProperties{ nullptr };
    CompositionColorBrush _themeColor_Foreground_00{ nullptr };
    CompositionColorBrush _themeColor_Foreground_01{ nullptr };
    CompositionColorBrush _themeColor_Foreground_02{ nullptr };
    CompositionColorBrush _themeColor_Foreground_03{ nullptr };
    CompositionColorBrush _themeColor_Foreground_04{ nullptr };
    CompositionColorBrush _themeColor_Foreground_05{ nullptr };
    CompositionColorBrush _themeColor_Foreground_06{ nullptr };
    CompositionColorBrush _themeColor_Foreground_08{ nullptr };
    CompositionColorBrush _themeColor_Foreground_09{ nullptr };
    CompositionColorBrush _themeColor_Foreground_10{ nullptr };
    CompositionColorBrush _themeColor_Foreground_11{ nullptr };
    CompositionColorBrush _themeColor_Foreground_12{ nullptr };
    CompositionColorBrush _themeColor_Foreground_13{ nullptr };
    CompositionColorBrush _themeColor_Foreground_14{ nullptr };
    CompositionPath _path{ nullptr };
    CompositionPathGeometry _pathGeometry_0{ nullptr };
    ContainerVisual _root{ nullptr };
    CubicBezierEasingFunction _cubicBezierEasingFunction_0{ nullptr };
    CubicBezierEasingFunction _cubicBezierEasingFunction_1{ nullptr };
    ExpressionAnimation _rootProgress{ nullptr };
    ScalarKeyFrameAnimation _scalarAnimation_0p8_to_1_0{ nullptr };
    ScalarKeyFrameAnimation _scalarAnimation_0p8_to_1_1{ nullptr };
    ScalarKeyFrameAnimation _scalarAnimation_0p8_to_1_2{ nullptr };
    ScalarKeyFrameAnimation _scalarAnimation_0p8_to_1_3{ nullptr };
    ScalarKeyFrameAnimation _scalarAnimation_1_to_0p8_0{ nullptr };
    ScalarKeyFrameAnimation _scalarAnimation_1_to_0p8_1{ nullptr };
    ScalarKeyFrameAnimation _scalarAnimation_1_to_0p8_2{ nullptr };
    ScalarKeyFrameAnimation _scalarAnimation_1_to_0p8_3{ nullptr };
    StepEasingFunction _holdThenStepEasingFunction{ nullptr };
    StepEasingFunction _stepThenHoldEasingFunction{ nullptr };

    static void StartProgressBoundAnimation(
        CompositionObject target,
        winrt::hstring animatedPropertyName,
        CompositionAnimation animation,
        ExpressionAnimation controllerProgressExpression)
    {
        target.StartAnimation(animatedPropertyName, animation);
        const auto controller = target.TryGetAnimationController(animatedPropertyName);
        controller.Pause();
        controller.StartAnimation(L"Progress", controllerProgressExpression);
    }

    void BindProperty(
        CompositionObject target,
        winrt::hstring animatedPropertyName,
        winrt::hstring expression,
        winrt::hstring referenceParameterName,
        CompositionObject referencedObject)
    {
        _reusableExpressionAnimation.ClearAllParameters();
        _reusableExpressionAnimation.Expression(expression);
        _reusableExpressionAnimation.SetReferenceParameter(referenceParameterName, referencedObject);
        target.StartAnimation(animatedPropertyName, _reusableExpressionAnimation);
    }

    void BindProperty2(
        CompositionObject target,
        winrt::hstring animatedPropertyName,
        winrt::hstring expression,
        winrt::hstring referenceParameterName0,
        CompositionObject referencedObject0,
        winrt::hstring referenceParameterName1,
        CompositionObject referencedObject1)
    {
        _reusableExpressionAnimation.ClearAllParameters();
        _reusableExpressionAnimation.Expression(expression);
        _reusableExpressionAnimation.SetReferenceParameter(referenceParameterName0, referencedObject0);
        _reusableExpressionAnimation.SetReferenceParameter(referenceParameterName1, referencedObject1);
        target.StartAnimation(animatedPropertyName, _reusableExpressionAnimation);
    }

    ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
    {
        const auto result = _c.CreateScalarKeyFrameAnimation();
        result.Duration(TimeSpan{ c_durationTicks });
        result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
        return result;
    }

    Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, winrt::float2 initialValue, CompositionEasingFunction initialEasingFunction)
    {
        const auto result = _c.CreateVector2KeyFrameAnimation();
        result.Duration(TimeSpan{ c_durationTicks });
        result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
        return result;
    }

    CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, winrt::float3x2 transformMatrix)
    {
        const auto result = _c.CreateSpriteShape(geometry);
        result.TransformMatrix(transformMatrix);
        return result;
    }

    winrt::com_ptr<CanvasGeometry> Geometry()
    {
        winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
        winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
        winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
        winrt::check_hresult(path->Open(sink.put()));
        sink->BeginFigure({ -12.375F, 0.0F }, D2D1_FIGURE_BEGIN_FILLED);
        sink->AddLine({ -4.45300007F, 8.17199993F });
        sink->AddLine({ 13.75F, -10.125F });
        sink->EndFigure(D2D1_FIGURE_END_OPEN);
        winrt::check_hresult(sink->Close());
        auto result = winrt::make_self<CanvasGeometry>(path);
        return result;
    }

    // - - Layer aggregator
    // - Layer: Check - PressedOffToNormalOn
    // Scale:0.8,0.8, Offset:<24, 24>
    // Color bound to theme property value: Foreground
    CompositionColorBrush ThemeColor_Foreground_00()
    {
        const auto result = _themeColor_Foreground_00 = _c.CreateColorBrush();
        const auto propertySet = result.Properties();
        propertySet.InsertScalar(L"Opacity0", 0.5F);
        BindProperty2(result, L"Color", L"ColorRGB(_theme.Foreground.W*my.Opacity0,_theme.Foreground.X,_theme.Foreground.Y,_theme.Foreground.Z)", L"_theme", _themeProperties, L"my", propertySet);
        StartProgressBoundAnimation(propertySet, L"Opacity0", Opacity0ScalarAnimation_0p5_to_1_0(), RootProgress());
        return result;
    }

    // Color bound to theme property value: Foreground
    CompositionColorBrush ThemeColor_Foreground_01()
    {
        const auto result = _themeColor_Foreground_01 = _c.CreateColorBrush();
        BindProperty(result, L"Color", L"ColorRGB(_theme.Foreground.W*1,_theme.Foreground.X,_theme.Foreground.Y,_theme.Foreground.Z)", L"_theme", _themeProperties);
        return result;
    }

    // - - Layer aggregator
    // - Layer: Check - PressedOffToNormalOn 2
    // Scale:0.8,0.8, Offset:<24, 24>
    // Color bound to theme property value: Foreground
    CompositionColorBrush ThemeColor_Foreground_02()
    {
        const auto result = _themeColor_Foreground_02 = _c.CreateColorBrush();
        const auto propertySet = result.Properties();
        propertySet.InsertScalar(L"Opacity0", 0.5F);
        BindProperty2(result, L"Color", L"ColorRGB(_theme.Foreground.W*my.Opacity0,_theme.Foreground.X,_theme.Foreground.Y,_theme.Foreground.Z)", L"_theme", _themeProperties, L"my", propertySet);
        StartProgressBoundAnimation(propertySet, L"Opacity0", Opacity0ScalarAnimation_0p5_to_1_1(), _rootProgress);
        return result;
    }

    // - Layer aggregator
    // Layer: Check - PressedOffToPressedOn
    // Color bound to theme property value: Foreground
    CompositionColorBrush ThemeColor_Foreground_03()
    {
        const auto result = _themeColor_Foreground_03 = _c.CreateColorBrush();
        const auto propertySet = result.Properties();
        propertySet.InsertScalar(L"Opacity0", 0.5F);
        BindProperty2(result, L"Color", L"ColorRGB(_theme.Foreground.W*my.Opacity0,_theme.Foreground.X,_theme.Foreground.Y,_theme.Foreground.Z)", L"_theme", _themeProperties, L"my", propertySet);
        StartProgressBoundAnimation(propertySet, L"Opacity0", Opacity0ScalarAnimation_0p5_to_1_2(), _rootProgress);
        return result;
    }

    // - - Layer aggregator
    // - Layer: Check - PressedOnToNormalOff
    // ShapeGroup: Shape 1
    // Color bound to theme property value: Foreground
    CompositionColorBrush ThemeColor_Foreground_04()
    {
        const auto result = _themeColor_Foreground_04 = _c.CreateColorBrush();
        const auto propertySet = result.Properties();
        propertySet.InsertScalar(L"Opacity0", 1.0F);
        BindProperty2(result, L"Color", L"ColorRGB(_theme.Foreground.W*my.Opacity0,_theme.Foreground.X,_theme.Foreground.Y,_theme.Foreground.Z)", L"_theme", _themeProperties, L"my", propertySet);
        StartProgressBoundAnimation(propertySet, L"Opacity0", Opacity0ScalarAnimation_1_to_0_0(), _rootProgress);
        return result;
    }

    // - - Layer aggregator
    // - Layer: Check - PressedOnToHoverOff
    // ShapeGroup: Shape 1
    // Color bound to theme property value: Foreground
    CompositionColorBrush ThemeColor_Foreground_05()
    {
        const auto result = _themeColor_Foreground_05 = _c.CreateColorBrush();
        const auto propertySet = result.Properties();
        propertySet.InsertScalar(L"Opacity0", 1.0F);
        BindProperty2(result, L"Color", L"ColorRGB(_theme.Foreground.W*my.Opacity0,_theme.Foreground.X,_theme.Foreground.Y,_theme.Foreground.Z)", L"_theme", _themeProperties, L"my", propertySet);
        StartProgressBoundAnimation(propertySet, L"Opacity0", Opacity0ScalarAnimation_1_to_0p5_0(), _rootProgress);
        return result;
    }

    // - Layer aggregator
    // Layer: Check - PressedOnToPressedOff
    // Color bound to theme property value: Foreground
    CompositionColorBrush ThemeColor_Foreground_06()
    {
        const auto result = _themeColor_Foreground_06 = _c.CreateColorBrush();
        const auto propertySet = result.Properties();
        propertySet.InsertScalar(L"Opacity0", 0.5F);
        BindProperty2(result, L"Color", L"ColorRGB(_theme.Foreground.W*my.Opacity0,_theme.Foreground.X,_theme.Foreground.Y,_theme.Foreground.Z)", L"_theme", _themeProperties, L"my", propertySet);
        StartProgressBoundAnimation(propertySet, L"Opacity0", Opacity0ScalarAnimation_0p5_to_1_3(), _rootProgress);
        return result;
    }

    // - - Layer aggregator
    // - Layer: Check - HoverOffToPressedOff
    // ShapeGroup: Shape 1
    // Color bound to theme property value: Foreground
    CompositionColorBrush ThemeColor_Foreground_07()
    {
        const auto result = _c.CreateColorBrush();
        BindProperty(result, L"Color", L"ColorRGB(_theme.Foreground.W*0.5,_theme.Foreground.X,_theme.Foreground.Y,_theme.Foreground.Z)", L"_theme", _themeProperties);
        return result;
    }

    // - Layer aggregator
    // Layer: Check - HoverOffToNormalOff
    // Color bound to theme property value: Foreground
    CompositionColorBrush ThemeColor_Foreground_08()
    {
        const auto result = _themeColor_Foreground_08 = _c.CreateColorBrush();
        const auto propertySet = result.Properties();
        propertySet.InsertScalar(L"Opacity0", 0.5F);
        BindProperty2(result, L"Color", L"ColorRGB(_theme.Foreground.W*my.Opacity0,_theme.Foreground.X,_theme.Foreground.Y,_theme.Foreground.Z)", L"_theme", _themeProperties, L"my", propertySet);
        StartProgressBoundAnimation(propertySet, L"Opacity0", Opacity0ScalarAnimation_0p5_to_0(), _rootProgress);
        return result;
    }

    // - Layer aggregator
    // Layer: Check - HoverOffToHoverOn
    // Color bound to theme property value: Foreground
    CompositionColorBrush ThemeColor_Foreground_09()
    {
        const auto result = _themeColor_Foreground_09 = _c.CreateColorBrush();
        const auto propertySet = result.Properties();
        propertySet.InsertScalar(L"Opacity0", 0.5F);
        BindProperty2(result, L"Color", L"ColorRGB(_theme.Foreground.W*my.Opacity0,_theme.Foreground.X,_theme.Foreground.Y,_theme.Foreground.Z)", L"_theme", _themeProperties, L"my", propertySet);
        StartProgressBoundAnimation(propertySet, L"Opacity0", Opacity0ScalarAnimation_0p5_to_1_4(), _rootProgress);
        return result;
    }

    // - Layer aggregator
    // Layer: Check - HoverOnToHoverOff
    // Color bound to theme property value: Foreground
    CompositionColorBrush ThemeColor_Foreground_10()
    {
        const auto result = _themeColor_Foreground_10 = _c.CreateColorBrush();
        const auto propertySet = result.Properties();
        propertySet.InsertScalar(L"Opacity0", 1.0F);
        BindProperty2(result, L"Color", L"ColorRGB(_theme.Foreground.W*my.Opacity0,_theme.Foreground.X,_theme.Foreground.Y,_theme.Foreground.Z)", L"_theme", _themeProperties, L"my", propertySet);
        StartProgressBoundAnimation(propertySet, L"Opacity0", Opacity0ScalarAnimation_1_to_0p5_1(), _rootProgress);
        return result;
    }

    // - - Layer aggregator
    // - Layer: Check - NormalOffToPressedOff
    // ShapeGroup: Shape 1
    // Color bound to theme property value: Foreground
    CompositionColorBrush ThemeColor_Foreground_11()
    {
        const auto result = _themeColor_Foreground_11 = _c.CreateColorBrush();
        const auto propertySet = result.Properties();
        propertySet.InsertScalar(L"Opacity0", 0.0F);
        BindProperty2(result, L"Color", L"ColorRGB(_theme.Foreground.W*my.Opacity0,_theme.Foreground.X,_theme.Foreground.Y,_theme.Foreground.Z)", L"_theme", _themeProperties, L"my", propertySet);
        StartProgressBoundAnimation(propertySet, L"Opacity0", Opacity0ScalarAnimation_0_to_0p5_0(), _rootProgress);
        return result;
    }

    // - Layer aggregator
    // Layer: Check - NormalOffToHoverOff
    // Color bound to theme property value: Foreground
    CompositionColorBrush ThemeColor_Foreground_12()
    {
        const auto result = _themeColor_Foreground_12 = _c.CreateColorBrush();
        const auto propertySet = result.Properties();
        propertySet.InsertScalar(L"Opacity0", 0.0F);
        BindProperty2(result, L"Color", L"ColorRGB(_theme.Foreground.W*my.Opacity0,_theme.Foreground.X,_theme.Foreground.Y,_theme.Foreground.Z)", L"_theme", _themeProperties, L"my", propertySet);
        StartProgressBoundAnimation(propertySet, L"Opacity0", Opacity0ScalarAnimation_0_to_0p5_1(), _rootProgress);
        return result;
    }

    // - Layer aggregator
    // Layer: Check - NormalOnToHoverOn
    // Color bound to theme property value: Foreground
    CompositionColorBrush ThemeColor_Foreground_13()
    {
        const auto result = _themeColor_Foreground_13 = _c.CreateColorBrush();
        const auto propertySet = result.Properties();
        propertySet.InsertScalar(L"Opacity0", 1.0F);
        BindProperty2(result, L"Color", L"ColorRGB(_theme.Foreground.W*my.Opacity0,_theme.Foreground.X,_theme.Foreground.Y,_theme.Foreground.Z)", L"_theme", _themeProperties, L"my", propertySet);
        StartProgressBoundAnimation(propertySet, L"Opacity0", Opacity0ScalarAnimation_1_to_0p5_2(), _rootProgress);
        return result;
    }

    // - Layer aggregator
    // Layer: Check - NormalOnToNormalOff 
    // Color bound to theme property value: Foreground
    CompositionColorBrush ThemeColor_Foreground_14()
    {
        const auto result = _themeColor_Foreground_14 = _c.CreateColorBrush();
        const auto propertySet = result.Properties();
        propertySet.InsertScalar(L"Opacity0", 1.0F);
        BindProperty2(result, L"Color", L"ColorRGB(_theme.Foreground.W*my.Opacity0,_theme.Foreground.X,_theme.Foreground.Y,_theme.Foreground.Z)", L"_theme", _themeProperties, L"my", propertySet);
        StartProgressBoundAnimation(propertySet, L"Opacity0", Opacity0ScalarAnimation_1_to_0_1(), _rootProgress);
        return result;
    }

    // Layer aggregator
    // Layer: Check - PressedOffToNormalOn
    CompositionContainerShape ContainerShape_0()
    {
        const auto result = _c.CreateContainerShape();
        result.Scale({ 0.0F, 0.0F });
        const auto shapes = result.Shapes();
        // Scale:0.8,0.8, Offset:<24, 24>
        shapes.Append(SpriteShape_00());
        // ShapeGroup: Shape 1
        shapes.Append(SpriteShape_01());
        StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_00(), _rootProgress);
        return result;
    }

    // Layer aggregator
    // Layer: Check - PressedOffToNormalOn 2
    CompositionContainerShape ContainerShape_1()
    {
        const auto result = _c.CreateContainerShape();
        result.Scale({ 0.0F, 0.0F });
        const auto shapes = result.Shapes();
        // Scale:0.8,0.8, Offset:<24, 24>
        shapes.Append(SpriteShape_02());
        // ShapeGroup: Shape 1
        shapes.Append(SpriteShape_03());
        StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_01(), _rootProgress);
        return result;
    }

    // Layer aggregator
    // Layer: Check - PressedOnToNormalOff
    CompositionContainerShape ContainerShape_2()
    {
        const auto result = _c.CreateContainerShape();
        result.Scale({ 0.0F, 0.0F });
        // ShapeGroup: Shape 1
        result.Shapes().Append(SpriteShape_05());
        StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_03(), _rootProgress);
        return result;
    }

    // Layer aggregator
    // Layer: Check - PressedOnToHoverOff
    CompositionContainerShape ContainerShape_3()
    {
        const auto result = _c.CreateContainerShape();
        result.Scale({ 0.0F, 0.0F });
        // ShapeGroup: Shape 1
        result.Shapes().Append(SpriteShape_06());
        StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_04(), _rootProgress);
        return result;
    }

    // Layer aggregator
    // Layer: Check - HoverOffToPressedOff
    CompositionContainerShape ContainerShape_4()
    {
        const auto result = _c.CreateContainerShape();
        result.Scale({ 0.0F, 0.0F });
        // ShapeGroup: Shape 1
        result.Shapes().Append(SpriteShape_08());
        StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_06(), _rootProgress);
        return result;
    }

    // Layer aggregator
    // Layer: Check - HoverOnToPressedOn
    CompositionContainerShape ContainerShape_5()
    {
        const auto result = _c.CreateContainerShape();
        result.Scale({ 0.0F, 0.0F });
        // ShapeGroup: Shape 1
        result.Shapes().Append(SpriteShape_11());
        StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_09(), _rootProgress);
        return result;
    }

    // Layer aggregator
    // Layer: Check - NormalOffToPressedOff
    CompositionContainerShape ContainerShape_6()
    {
        const auto result = _c.CreateContainerShape();
        result.Scale({ 0.0F, 0.0F });
        // ShapeGroup: Shape 1
        result.Shapes().Append(SpriteShape_14());
        StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_12(), _rootProgress);
        return result;
    }

    // Layer aggregator
    // Layer: Check - NormalOnToPressedOn
    CompositionContainerShape ContainerShape_7()
    {
        const auto result = _c.CreateContainerShape();
        result.Scale({ 0.0F, 0.0F });
        // ShapeGroup: Shape 1
        result.Shapes().Append(SpriteShape_17());
        StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_15(), _rootProgress);
        return result;
    }

    CompositionPath Path()
    {
        const auto result = _path = CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry()));
        return result;
    }

    CompositionPathGeometry PathGeometry_0()
    {
        return _pathGeometry_0 = _c.CreatePathGeometry(Path());
    }

    // - - Layer aggregator
    // - Layer: Check - PressedOffToNormalOn
    // ShapeGroup: Shape 1
    CompositionPathGeometry PathGeometry_1()
    {
        const auto result = _c.CreatePathGeometry(_path);
        StartProgressBoundAnimation(result, L"TrimEnd", TrimEndScalarAnimation_0_to_1_0(), _rootProgress);
        return result;
    }

    // - - Layer aggregator
    // - Layer: Check - PressedOffToNormalOn 2
    // ShapeGroup: Shape 1
    CompositionPathGeometry PathGeometry_2()
    {
        const auto result = _c.CreatePathGeometry(_path);
        StartProgressBoundAnimation(result, L"TrimEnd", TrimEndScalarAnimation_0_to_1_1(), _rootProgress);
        return result;
    }

    // - Layer aggregator
    // Layer: Check - NormalOffToNormalOn
    CompositionPathGeometry PathGeometry_3()
    {
        const auto result = _c.CreatePathGeometry(_path);
        StartProgressBoundAnimation(result, L"TrimEnd", TrimEndScalarAnimation_0_to_1_2(), _rootProgress);
        return result;
    }

    // - Layer aggregator
    // Layer: Check - PressedOffToNormalOn
    // Path 1
    CompositionSpriteShape SpriteShape_00()
    {
        // Offset:<24, 24>, Rotation:-0.011598425070025746 degrees, Scale:<0.8, 0.8>
        const auto result = CreateSpriteShape(PathGeometry_0(), { 0.800000012F, 0.0F, 0.0F, 0.800000012F, 24.0F, 24.0F });
        result.StrokeBrush(ThemeColor_Foreground_00());
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(5.5F);
        return result;
    }

    // - Layer aggregator
    // Layer: Check - PressedOffToNormalOn
    // Path 1
    CompositionSpriteShape SpriteShape_01()
    {
        const auto result = _c.CreateSpriteShape(PathGeometry_1());
        result.Offset({ 24.25F, 24.0F });
        result.StrokeBrush(ThemeColor_Foreground_01());
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(5.5F);
        StartProgressBoundAnimation(result, L"Scale.X", ScalarAnimation_0p8_to_1_0(), _rootProgress);
        StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_0p8_to_1_0, _rootProgress);
        return result;
    }

    // - Layer aggregator
    // Layer: Check - PressedOffToNormalOn 2
    // Path 1
    CompositionSpriteShape SpriteShape_02()
    {
        // Offset:<24, 24>, Rotation:-0.011598425070025746 degrees, Scale:<0.8, 0.8>
        const auto result = CreateSpriteShape(_pathGeometry_0, { 0.800000012F, 0.0F, 0.0F, 0.800000012F, 24.0F, 24.0F });
        result.StrokeBrush(ThemeColor_Foreground_02());
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(5.5F);
        return result;
    }

    // - Layer aggregator
    // Layer: Check - PressedOffToNormalOn 2
    // Path 1
    CompositionSpriteShape SpriteShape_03()
    {
        const auto result = _c.CreateSpriteShape(PathGeometry_2());
        result.Offset({ 24.25F, 24.0F });
        result.StrokeBrush(_themeColor_Foreground_01);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(5.5F);
        StartProgressBoundAnimation(result, L"Scale.X", ScalarAnimation_0p8_to_1_1(), _rootProgress);
        StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_0p8_to_1_1, _rootProgress);
        return result;
    }

    // Layer aggregator
    // Path 1
    CompositionSpriteShape SpriteShape_04()
    {
        // Offset:<24, 24>, Rotation:-0.011598425070025746 degrees, Scale:<0.8, 0.8>
        const auto result = CreateSpriteShape(_pathGeometry_0, { 0.800000012F, 0.0F, 0.0F, 0.800000012F, 24.0F, 24.0F });
        result.Scale({ 0.0F, 0.0F });
        result.StrokeBrush(ThemeColor_Foreground_03());
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(5.5F);
        StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_02(), _rootProgress);
        return result;
    }

    // - Layer aggregator
    // Layer: Check - PressedOnToNormalOff
    // Path 1
    CompositionSpriteShape SpriteShape_05()
    {
        const auto result = _c.CreateSpriteShape(_pathGeometry_0);
        result.Offset({ 24.0F, 24.0F });
        result.StrokeBrush(ThemeColor_Foreground_04());
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(5.5F);
        StartProgressBoundAnimation(result, L"Scale.X", ScalarAnimation_0p8_to_1_2(), _rootProgress);
        StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_0p8_to_1_2, _rootProgress);
        return result;
    }

    // - Layer aggregator
    // Layer: Check - PressedOnToHoverOff
    // Path 1
    CompositionSpriteShape SpriteShape_06()
    {
        const auto result = _c.CreateSpriteShape(_pathGeometry_0);
        result.Offset({ 24.0F, 24.0F });
        result.StrokeBrush(ThemeColor_Foreground_05());
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(5.5F);
        StartProgressBoundAnimation(result, L"Scale.X", ScalarAnimation_0p8_to_1_3(), _rootProgress);
        StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_0p8_to_1_3, _rootProgress);
        return result;
    }

    // Layer aggregator
    // Path 1
    CompositionSpriteShape SpriteShape_07()
    {
        // Offset:<24, 24>, Rotation:-0.011598425070025746 degrees, Scale:<0.8, 0.8>
        const auto result = CreateSpriteShape(_pathGeometry_0, { 0.800000012F, 0.0F, 0.0F, 0.800000012F, 24.0F, 24.0F });
        result.Scale({ 0.0F, 0.0F });
        result.StrokeBrush(ThemeColor_Foreground_06());
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(5.5F);
        StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_05(), _rootProgress);
        return result;
    }

    // - Layer aggregator
    // Layer: Check - HoverOffToPressedOff
    // Path 1
    CompositionSpriteShape SpriteShape_08()
    {
        const auto result = _c.CreateSpriteShape(_pathGeometry_0);
        result.Offset({ 24.0F, 24.0F });
        result.StrokeBrush(ThemeColor_Foreground_07());
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(5.5F);
        StartProgressBoundAnimation(result, L"Scale.X", ScalarAnimation_1_to_0p8_0(), _rootProgress);
        StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_1_to_0p8_0, _rootProgress);
        return result;
    }

    // Layer aggregator
    // Path 1
    CompositionSpriteShape SpriteShape_09()
    {
        // Offset:<24, 24>
        const auto result = CreateSpriteShape(_pathGeometry_0, { 1.0F, 0.0F, 0.0F, 1.0F, 24.0F, 24.0F });
        result.Scale({ 0.0F, 0.0F });
        result.StrokeBrush(ThemeColor_Foreground_08());
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(5.5F);
        StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_07(), _rootProgress);
        return result;
    }

    // Layer aggregator
    // Path 1
    CompositionSpriteShape SpriteShape_10()
    {
        // Offset:<24, 24>
        const auto result = CreateSpriteShape(_pathGeometry_0, { 1.0F, 0.0F, 0.0F, 1.0F, 24.0F, 24.0F });
        result.Scale({ 0.0F, 0.0F });
        result.StrokeBrush(ThemeColor_Foreground_09());
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(5.5F);
        StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_08(), _rootProgress);
        return result;
    }

    // - Layer aggregator
    // Layer: Check - HoverOnToPressedOn
    // Path 1
    CompositionSpriteShape SpriteShape_11()
    {
        const auto result = _c.CreateSpriteShape(_pathGeometry_0);
        result.Offset({ 24.0F, 24.0F });
        result.StrokeBrush(_themeColor_Foreground_01);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(5.5F);
        StartProgressBoundAnimation(result, L"Scale.X", ScalarAnimation_1_to_0p8_1(), _rootProgress);
        StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_1_to_0p8_1, _rootProgress);
        return result;
    }

    // Layer aggregator
    // Path 1
    CompositionSpriteShape SpriteShape_12()
    {
        // Offset:<24, 24>
        const auto result = CreateSpriteShape(_pathGeometry_0, { 1.0F, 0.0F, 0.0F, 1.0F, 24.0F, 24.0F });
        result.Scale({ 0.0F, 0.0F });
        result.StrokeBrush(_themeColor_Foreground_01);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(5.5F);
        StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_10(), _rootProgress);
        return result;
    }

    // Layer aggregator
    // Path 1
    CompositionSpriteShape SpriteShape_13()
    {
        // Offset:<24, 24>
        const auto result = CreateSpriteShape(_pathGeometry_0, { 1.0F, 0.0F, 0.0F, 1.0F, 24.0F, 24.0F });
        result.Scale({ 0.0F, 0.0F });
        result.StrokeBrush(ThemeColor_Foreground_10());
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(5.5F);
        StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_11(), _rootProgress);
        return result;
    }

    // - Layer aggregator
    // Layer: Check - NormalOffToPressedOff
    // Path 1
    CompositionSpriteShape SpriteShape_14()
    {
        const auto result = _c.CreateSpriteShape(_pathGeometry_0);
        result.Offset({ 24.0F, 24.0F });
        result.StrokeBrush(ThemeColor_Foreground_11());
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(5.5F);
        StartProgressBoundAnimation(result, L"Scale.X", ScalarAnimation_1_to_0p8_2(), _rootProgress);
        StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_1_to_0p8_2, _rootProgress);
        return result;
    }

    // Layer aggregator
    // Path 1
    CompositionSpriteShape SpriteShape_15()
    {
        // Offset:<24, 24>
        const auto result = CreateSpriteShape(_pathGeometry_0, { 1.0F, 0.0F, 0.0F, 1.0F, 24.0F, 24.0F });
        result.Scale({ 0.0F, 0.0F });
        result.StrokeBrush(ThemeColor_Foreground_12());
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(5.5F);
        StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_13(), _rootProgress);
        return result;
    }

    // Layer aggregator
    // Path 1
    CompositionSpriteShape SpriteShape_16()
    {
        // Offset:<24, 24>
        const auto result = CreateSpriteShape(PathGeometry_3(), { 1.0F, 0.0F, 0.0F, 1.0F, 24.0F, 24.0F });
        result.Scale({ 0.0F, 0.0F });
        result.StrokeBrush(_themeColor_Foreground_01);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(5.5F);
        StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_14(), _rootProgress);
        return result;
    }

    // - Layer aggregator
    // Layer: Check - NormalOnToPressedOn
    // Path 1
    CompositionSpriteShape SpriteShape_17()
    {
        const auto result = _c.CreateSpriteShape(_pathGeometry_0);
        result.Offset({ 24.0F, 24.0F });
        result.StrokeBrush(_themeColor_Foreground_01);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(5.5F);
        StartProgressBoundAnimation(result, L"Scale.X", ScalarAnimation_1_to_0p8_3(), _rootProgress);
        StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_1_to_0p8_3, _rootProgress);
        return result;
    }

    // Layer aggregator
    // Path 1
    CompositionSpriteShape SpriteShape_18()
    {
        // Offset:<24, 24>
        const auto result = CreateSpriteShape(_pathGeometry_0, { 1.0F, 0.0F, 0.0F, 1.0F, 24.0F, 24.0F });
        result.Scale({ 0.0F, 0.0F });
        result.StrokeBrush(ThemeColor_Foreground_13());
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(5.5F);
        StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_16(), _rootProgress);
        return result;
    }

    // Layer aggregator
    // Path 1
    CompositionSpriteShape SpriteShape_19()
    {
        // Offset:<24, 24>
        const auto result = CreateSpriteShape(_pathGeometry_0, { 1.0F, 0.0F, 0.0F, 1.0F, 24.0F, 24.0F });
        result.StrokeBrush(ThemeColor_Foreground_14());
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(5.5F);
        StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_17(), _rootProgress);
        return result;
    }

    // The root of the composition.
    ContainerVisual Root()
    {
        const auto result = _root = _c.CreateContainerVisual();
        const auto propertySet = result.Properties();
        propertySet.InsertScalar(L"Progress", 0.0F);
        // Layer aggregator
        result.Children().InsertAtTop(ShapeVisual_0());
        return result;
    }

    CubicBezierEasingFunction CubicBezierEasingFunction_0()
    {
        return _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.166999996F }, { 0.833000004F, 0.833000004F });
    }

    CubicBezierEasingFunction CubicBezierEasingFunction_1()
    {
        return _cubicBezierEasingFunction_1 = _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.166999996F }, { 0.0F, 1.0F });
    }

    ExpressionAnimation RootProgress()
    {
        const auto result = _rootProgress = _c.CreateExpressionAnimation(L"_.Progress");
        result.SetReferenceParameter(L"_", _root);
        return result;
    }

    // Opacity0
    ScalarKeyFrameAnimation Opacity0ScalarAnimation_0_to_0p5_0()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.0F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.259259254F, 0.0F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.292592585F, 0.5F, _cubicBezierEasingFunction_0);
        return result;
    }

    // Opacity0
    ScalarKeyFrameAnimation Opacity0ScalarAnimation_0_to_0p5_1()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.0F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.222222224F, 0.0F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.25555557F, 0.5F, _cubicBezierEasingFunction_0);
        return result;
    }

    // Opacity0
    ScalarKeyFrameAnimation Opacity0ScalarAnimation_0p5_to_0()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.5F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.481481493F, 0.5F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.514814794F, 0.0F, _cubicBezierEasingFunction_0);
        return result;
    }

    // Opacity0
    ScalarKeyFrameAnimation Opacity0ScalarAnimation_0p5_to_1_0()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.5F, StepThenHoldEasingFunction());
        result.InsertKeyFrame(0.888888896F, 0.5F, HoldThenStepEasingFunction());
        result.InsertKeyFrame(0.92592591F, 1.0F, CubicBezierEasingFunction_0());
        return result;
    }

    // Opacity0
    ScalarKeyFrameAnimation Opacity0ScalarAnimation_0p5_to_1_1()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.5F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.777777791F, 0.5F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.814814806F, 1.0F, _cubicBezierEasingFunction_0);
        return result;
    }

    // Opacity0
    ScalarKeyFrameAnimation Opacity0ScalarAnimation_0p5_to_1_2()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.5F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.740740716F, 0.5F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.774074078F, 1.0F, _cubicBezierEasingFunction_0);
        return result;
    }

    // Opacity0
    ScalarKeyFrameAnimation Opacity0ScalarAnimation_0p5_to_1_3()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.5F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.555555582F, 0.5F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.588888884F, 1.0F, _cubicBezierEasingFunction_0);
        return result;
    }

    // Opacity0
    ScalarKeyFrameAnimation Opacity0ScalarAnimation_0p5_to_1_4()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.5F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.444444448F, 0.5F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.477777779F, 1.0F, _cubicBezierEasingFunction_0);
        return result;
    }

    // Opacity0
    ScalarKeyFrameAnimation Opacity0ScalarAnimation_1_to_0_0()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 1.0F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.666666687F, 1.0F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.699999988F, 0.0F, _cubicBezierEasingFunction_0);
        return result;
    }

    // Opacity0
    ScalarKeyFrameAnimation Opacity0ScalarAnimation_1_to_0_1()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 1.0F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.0333333351F, 0.0F, _cubicBezierEasingFunction_0);
        return result;
    }

    // Opacity0
    ScalarKeyFrameAnimation Opacity0ScalarAnimation_1_to_0p5_0()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 1.0F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.592592597F, 1.0F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.625925899F, 0.5F, _cubicBezierEasingFunction_0);
        return result;
    }

    // Opacity0
    ScalarKeyFrameAnimation Opacity0ScalarAnimation_1_to_0p5_1()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 1.0F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.333333343F, 1.0F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.366666675F, 0.5F, _cubicBezierEasingFunction_0);
        return result;
    }

    // Opacity0
    ScalarKeyFrameAnimation Opacity0ScalarAnimation_1_to_0p5_2()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 1.0F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.0370370373F, 1.0F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.0703703687F, 0.5F, _cubicBezierEasingFunction_0);
        return result;
    }

    // Scale
    ScalarKeyFrameAnimation ScalarAnimation_0p8_to_1_0()
    {
        const auto result = _scalarAnimation_0p8_to_1_0 = CreateScalarKeyFrameAnimation(0.0F, 0.800000012F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.888888896F, 0.800000012F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.996296287F, 1.0F, _cubicBezierEasingFunction_1);
        return result;
    }

    // Scale
    ScalarKeyFrameAnimation ScalarAnimation_0p8_to_1_1()
    {
        const auto result = _scalarAnimation_0p8_to_1_1 = CreateScalarKeyFrameAnimation(0.0F, 0.800000012F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.777777791F, 0.800000012F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.885185182F, 1.0F, _cubicBezierEasingFunction_1);
        return result;
    }

    // Scale
    ScalarKeyFrameAnimation ScalarAnimation_0p8_to_1_2()
    {
        const auto result = _scalarAnimation_0p8_to_1_2 = CreateScalarKeyFrameAnimation(0.0F, 0.800000012F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.666666687F, 0.800000012F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.737037063F, 1.0F, _cubicBezierEasingFunction_1);
        return result;
    }

    // Scale
    ScalarKeyFrameAnimation ScalarAnimation_0p8_to_1_3()
    {
        const auto result = _scalarAnimation_0p8_to_1_3 = CreateScalarKeyFrameAnimation(0.0F, 0.800000012F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.592592597F, 0.800000012F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.662962973F, 1.0F, _cubicBezierEasingFunction_1);
        return result;
    }

    // Scale
    ScalarKeyFrameAnimation ScalarAnimation_1_to_0p8_0()
    {
        const auto result = _scalarAnimation_1_to_0p8_0 = CreateScalarKeyFrameAnimation(0.0F, 1.0F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.518518507F, 1.0F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.551851869F, 0.800000012F, _cubicBezierEasingFunction_1);
        return result;
    }

    // Scale
    ScalarKeyFrameAnimation ScalarAnimation_1_to_0p8_1()
    {
        const auto result = _scalarAnimation_1_to_0p8_1 = CreateScalarKeyFrameAnimation(0.0F, 1.0F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.407407403F, 1.0F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.440740734F, 0.800000012F, _cubicBezierEasingFunction_1);
        return result;
    }

    // Scale
    ScalarKeyFrameAnimation ScalarAnimation_1_to_0p8_2()
    {
        const auto result = _scalarAnimation_1_to_0p8_2 = CreateScalarKeyFrameAnimation(0.0F, 1.0F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.259259254F, 1.0F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.333333343F, 0.800000012F, _cubicBezierEasingFunction_1);
        return result;
    }

    // Scale
    ScalarKeyFrameAnimation ScalarAnimation_1_to_0p8_3()
    {
        const auto result = _scalarAnimation_1_to_0p8_3 = CreateScalarKeyFrameAnimation(0.0F, 1.0F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.0740740746F, 1.0F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.107407406F, 0.800000012F, _cubicBezierEasingFunction_1);
        return result;
    }

    // - - - Layer aggregator
    // - - Layer: Check - PressedOffToNormalOn
    // - ShapeGroup: Shape 1
    // TrimEnd
    ScalarKeyFrameAnimation TrimEndScalarAnimation_0_to_1_0()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.0F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.888888896F, 0.0F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.996296287F, 1.0F, CubicBezierEasingFunction_1());
        return result;
    }

    // - - - Layer aggregator
    // - - Layer: Check - PressedOffToNormalOn 2
    // - ShapeGroup: Shape 1
    // TrimEnd
    ScalarKeyFrameAnimation TrimEndScalarAnimation_0_to_1_1()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.0F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.777777791F, 0.0F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.885185182F, 1.0F, _cubicBezierEasingFunction_1);
        return result;
    }

    // - - Layer aggregator
    // - Layer: Check - NormalOffToNormalOn
    // TrimEnd
    ScalarKeyFrameAnimation TrimEndScalarAnimation_0_to_1_2()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.0F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.111111112F, 0.0F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.218518525F, 1.0F, _cubicBezierEasingFunction_1);
        return result;
    }

    // Layer aggregator
    ShapeVisual ShapeVisual_0()
    {
        const auto result = _c.CreateShapeVisual();
        result.Size({ 48.0F, 48.0F });
        const auto shapes = result.Shapes();
        // Layer: Check - PressedOffToNormalOn
        shapes.Append(ContainerShape_0());
        // Layer: Check - PressedOffToNormalOn 2
        shapes.Append(ContainerShape_1());
        // Layer: Check - PressedOffToPressedOn
        shapes.Append(SpriteShape_04());
        // Layer: Check - PressedOnToNormalOff
        shapes.Append(ContainerShape_2());
        // Layer: Check - PressedOnToHoverOff
        shapes.Append(ContainerShape_3());
        // Layer: Check - PressedOnToPressedOff
        shapes.Append(SpriteShape_07());
        // Layer: Check - HoverOffToPressedOff
        shapes.Append(ContainerShape_4());
        // Layer: Check - HoverOffToNormalOff
        shapes.Append(SpriteShape_09());
        // Layer: Check - HoverOffToHoverOn
        shapes.Append(SpriteShape_10());
        // Layer: Check - HoverOnToPressedOn
        shapes.Append(ContainerShape_5());
        // Layer: Check - HoverOnToNormalOn
        shapes.Append(SpriteShape_12());
        // Layer: Check - HoverOnToHoverOff
        shapes.Append(SpriteShape_13());
        // Layer: Check - NormalOffToPressedOff
        shapes.Append(ContainerShape_6());
        // Layer: Check - NormalOffToHoverOff
        shapes.Append(SpriteShape_15());
        // Layer: Check - NormalOffToNormalOn
        shapes.Append(SpriteShape_16());
        // Layer: Check - NormalOnToPressedOn
        shapes.Append(ContainerShape_7());
        // Layer: Check - NormalOnToHoverOn
        shapes.Append(SpriteShape_18());
        // Layer: Check - NormalOnToNormalOff
        shapes.Append(SpriteShape_19());
        return result;
    }

    StepEasingFunction HoldThenStepEasingFunction()
    {
        const auto result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
        result.IsFinalStepSingleFrame(true);
        return result;
    }

    StepEasingFunction StepThenHoldEasingFunction()
    {
        const auto result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
        result.IsInitialStepSingleFrame(true);
        return result;
    }

    // - Layer aggregator
    // Layer: Check - PressedOffToNormalOn
    Vector2KeyFrameAnimation ShapeVisibilityAnimation_00()
    {
        const auto result = CreateVector2KeyFrameAnimation(0.888888896F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
        return result;
    }

    // - Layer aggregator
    // Layer: Check - PressedOffToNormalOn 2
    Vector2KeyFrameAnimation ShapeVisibilityAnimation_01()
    {
        const auto result = CreateVector2KeyFrameAnimation(0.777777791F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.888888896F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
        return result;
    }

    // - Layer aggregator
    // Layer: Check - PressedOffToPressedOn
    Vector2KeyFrameAnimation ShapeVisibilityAnimation_02()
    {
        const auto result = CreateVector2KeyFrameAnimation(0.740740716F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.777777791F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
        return result;
    }

    // - Layer aggregator
    // Layer: Check - PressedOnToNormalOff
    Vector2KeyFrameAnimation ShapeVisibilityAnimation_03()
    {
        const auto result = CreateVector2KeyFrameAnimation(0.666666687F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.740740716F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
        return result;
    }

    // - Layer aggregator
    // Layer: Check - PressedOnToHoverOff
    Vector2KeyFrameAnimation ShapeVisibilityAnimation_04()
    {
        const auto result = CreateVector2KeyFrameAnimation(0.592592597F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.666666687F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
        return result;
    }

    // - Layer aggregator
    // Layer: Check - PressedOnToPressedOff
    Vector2KeyFrameAnimation ShapeVisibilityAnimation_05()
    {
        const auto result = CreateVector2KeyFrameAnimation(0.555555582F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.592592597F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
        return result;
    }

    // - Layer aggregator
    // Layer: Check - HoverOffToPressedOff
    Vector2KeyFrameAnimation ShapeVisibilityAnimation_06()
    {
        const auto result = CreateVector2KeyFrameAnimation(0.518518507F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.555555582F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
        return result;
    }

    // - Layer aggregator
    // Layer: Check - HoverOffToNormalOff
    Vector2KeyFrameAnimation ShapeVisibilityAnimation_07()
    {
        const auto result = CreateVector2KeyFrameAnimation(0.481481493F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.518518507F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
        return result;
    }

    // - Layer aggregator
    // Layer: Check - HoverOffToHoverOn
    Vector2KeyFrameAnimation ShapeVisibilityAnimation_08()
    {
        const auto result = CreateVector2KeyFrameAnimation(0.444444448F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.481481493F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
        return result;
    }

    // - Layer aggregator
    // Layer: Check - HoverOnToPressedOn
    Vector2KeyFrameAnimation ShapeVisibilityAnimation_09()
    {
        const auto result = CreateVector2KeyFrameAnimation(0.407407403F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.444444448F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
        return result;
    }

    // - Layer aggregator
    // Layer: Check - HoverOnToNormalOn
    Vector2KeyFrameAnimation ShapeVisibilityAnimation_10()
    {
        const auto result = CreateVector2KeyFrameAnimation(0.370370358F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.407407403F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
        return result;
    }

    // - Layer aggregator
    // Layer: Check - HoverOnToHoverOff
    Vector2KeyFrameAnimation ShapeVisibilityAnimation_11()
    {
        const auto result = CreateVector2KeyFrameAnimation(0.333333343F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.370370358F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
        return result;
    }

    // - Layer aggregator
    // Layer: Check - NormalOffToPressedOff
    Vector2KeyFrameAnimation ShapeVisibilityAnimation_12()
    {
        const auto result = CreateVector2KeyFrameAnimation(0.259259254F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.333333343F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
        return result;
    }

    // - Layer aggregator
    // Layer: Check - NormalOffToHoverOff
    Vector2KeyFrameAnimation ShapeVisibilityAnimation_13()
    {
        const auto result = CreateVector2KeyFrameAnimation(0.222222224F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.259259254F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
        return result;
    }

    // - Layer aggregator
    // Layer: Check - NormalOffToNormalOn
    Vector2KeyFrameAnimation ShapeVisibilityAnimation_14()
    {
        const auto result = CreateVector2KeyFrameAnimation(0.111111112F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.222222224F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
        return result;
    }

    // - Layer aggregator
    // Layer: Check - NormalOnToPressedOn
    Vector2KeyFrameAnimation ShapeVisibilityAnimation_15()
    {
        const auto result = CreateVector2KeyFrameAnimation(0.0740740746F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.111111112F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
        return result;
    }

    // - Layer aggregator
    // Layer: Check - NormalOnToHoverOn
    Vector2KeyFrameAnimation ShapeVisibilityAnimation_16()
    {
        const auto result = CreateVector2KeyFrameAnimation(0.0370370373F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.0740740746F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
        return result;
    }

    // - Layer aggregator
    // Layer: Check - NormalOnToNormalOff
    Vector2KeyFrameAnimation ShapeVisibilityAnimation_17()
    {
        const auto result = CreateVector2KeyFrameAnimation(0.0370370373F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
        return result;
    }

    static IGeometrySource2D CanvasGeometryToIGeometrySource2D(winrt::com_ptr<CanvasGeometry> geo)
    {
        return geo.as<IGeometrySource2D>();
    }

public:
    Controls_01_Checkmark_AnimatedVisual(
        Compositor compositor,
        CompositionPropertySet themeProperties)
        : _c{compositor}
        , _themeProperties{themeProperties}
        , _reusableExpressionAnimation(compositor.CreateExpressionAnimation())
    {
        winrt::check_hresult(D2D1CreateFactory(D2D1_FACTORY_TYPE_SINGLE_THREADED, _d2dFactory.put()));
        const auto _ = Root();
    }

    void Close()
    {
        if (_root)
        {
            _root.Close();
        }
    }

    TimeSpan Duration() const
    {
        return TimeSpan{ c_durationTicks };
    }

    Visual RootVisual() const
    {
        return _root;
    }

    winrt::float2 Size() const
    {
        return { 48.0F, 48.0F };
    }

    static bool IsRuntimeCompatible()
    {
        return winrt::Windows::Foundation::Metadata::ApiInformation::IsApiContractPresent(L"Windows.Foundation.UniversalApiContract", 7);
    }
};

winrt::float4 Controls_01_Checkmark::ColorAsVector4(Color color)
{
    return { static_cast<float>(color.R), static_cast<float>(color.G), static_cast<float>(color.B), static_cast<float>(color.A) };
}

CompositionPropertySet Controls_01_Checkmark::EnsureThemeProperties(Compositor compositor)
{
    if (_themeProperties == nullptr)
    {
        _themeProperties = compositor.CreatePropertySet();
        _themeProperties.InsertVector4(L"Foreground", ColorAsVector4((Color)_themeForeground));
    }

    return _themeProperties;
}

Color Controls_01_Checkmark::Foreground()
{
    return _themeForeground;
}

void Controls_01_Checkmark::Foreground(Color value)
{
    _themeForeground = value;
    if (_themeProperties != nullptr)
    {
        _themeProperties.InsertVector4(L"Foreground", ColorAsVector4((Color)_themeForeground));
    }
}

winrt::Microsoft::UI::Xaml::Controls::IAnimatedVisual Controls_01_Checkmark::TryCreateAnimatedVisual(
    Compositor const& compositor,
    IInspectable& diagnostics)
{
    const auto _ = EnsureThemeProperties(compositor);
    diagnostics = nullptr;

    if (Controls_01_Checkmark_AnimatedVisual::IsRuntimeCompatible())
    {
        return winrt::make<Controls_01_Checkmark_AnimatedVisual>(
            compositor,
            _themeProperties);
    }

    return nullptr;
}

winrt::Microsoft::UI::Xaml::Controls::IAnimatedVisual Controls_01_Checkmark::TryCreateAnimatedIconVisual(
    Compositor const& compositor)
{
    IInspectable diagnostics;
    return TryCreateAnimatedVisual(compositor, diagnostics);
}

double Controls_01_Checkmark::FrameToProgress(double frameNumber)
{
    return frameNumber / 270.0;
}

winrt::Windows::Foundation::Collections::IMapView<hstring, double> Controls_01_Checkmark::Markers()
{
    return winrt::single_threaded_map<winrt::hstring, double>(
        std::map<winrt::hstring, double>
        {
            { L"NormalOnToNormalOff_Start", 0.0 },
            { L"NormalOnToNormalOff_End", 0.0333333333333333 },
            { L"NormalOnToHoverOn_Start", 0.037037037037037 },
            { L"NormalOnToHoverOn_End", 0.0703703703703704 },
            { L"NormalOnToPressedOn_Start", 0.0740740740740741 },
            { L"NormalOnToPressedOn_End", 0.107407407407407 },
            { L"NormalOffToNormalOn_Start", 0.111111111111111 },
            { L"NormalOffToNormalOn_End", 0.218518518518519 },
            { L"NormalOffToHoverOff_Start", 0.222222222222222 },
            { L"NormalOffToHoverOff_End", 0.255555555555556 },
            { L"NormalOffToPressedOff_Start", 0.259259259259259 },
            { L"NormalOffToPressedOff_End", 0.32962962962963 },
            { L"HoverOnToHoverOff_Start", 0.333333333333333 },
            { L"HoverOnToHoverOff_End", 0.366666666666667 },
            { L"HoverOnToNormalOn_Start", 0.37037037037037 },
            { L"HoverOnToNormalOn_End", 0.403703703703704 },
            { L"HoverOnToPressedOn_Start", 0.407407407407407 },
            { L"HoverOnToPressedOn_End", 0.440740740740741 },
            { L"HoverOffToHoverOn_Start", 0.444444444444444 },
            { L"HoverOffToHoverOn_End", 0.477777777777778 },
            { L"HoverOffToNormalOff_Start", 0.481481481481481 },
            { L"HoverOffToNormalOff_End", 0.514814814814815 },
            { L"HoverOffToPressedOff_Start", 0.518518518518518 },
            { L"HoverOffToPressedOff_End", 0.551851851851852 },
            { L"PressedOnToPressedOff_Start", 0.555555555555556 },
            { L"PressedOnToPressedOff_End", 0.588888888888889 },
            { L"PressedOnToHoverOff_Start", 0.592592592592593 },
            { L"PressedOnToHoverOff_End", 0.662962962962963 },
            { L"PressedOnToNormalOff_Start", 0.666666666666667 },
            { L"PressedOnToNormalOff_End", 0.737037037037037 },
            { L"PressedOffToPressedOn_Start", 0.740740740740741 },
            { L"PressedOffToPressedOn_End", 0.774074074074074 },
            { L"PressedOffToHoverOn_Start", 0.777777777777778 },
            { L"PressedOffToHoverOn_End", 0.885185185185185 },
            { L"PressedOffToNormalOn_Start", 0.888888888888889 },
            { L"PressedOffToNormalOn_End", 0.996296296296296 },
        }
    ).GetView();
}

void Controls_01_Checkmark::SetColorProperty(hstring const& propertyName, Color value)
{
    if (propertyName == L"Foreground")
    {
        _themeForeground = value;
    }
    else
    {
        return;
    }

    if (_themeProperties != nullptr)
    {
        _themeProperties.InsertVector4(propertyName, ColorAsVector4(value));
    }
}

void Controls_01_Checkmark::SetScalarProperty(hstring const&, double)
{
}
