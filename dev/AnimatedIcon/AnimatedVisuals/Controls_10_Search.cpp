//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           7.0.0-build.57+g2cc4f0c931
//       
//       Command:
//           LottieGen -Language Cppwinrt -InputFile Controls_10_Search.json
//       
//       Input file:
//           Controls_10_Search.json (14321 bytes created 18:13-08:00 Nov 19 2020)
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// ___________________________________________________________________________
// |       Object stats       | UAP v12 count | UAP v11 count | UAP v7 count |
// |__________________________|_______________|_______________|______________|
// | All CompositionObjects   |           157 |           157 |          145 |
// |--------------------------+---------------+---------------+--------------|
// | Expression animators     |            23 |            23 |           20 |
// | KeyFrame animators       |            21 |            21 |           18 |
// | Reference parameters     |            24 |            24 |           21 |
// | Expression operations    |             4 |             4 |            4 |
// |--------------------------+---------------+---------------+--------------|
// | Animated brushes         |             1 |             1 |            1 |
// | Animated gradient stops  |             - |             - |            - |
// | ExpressionAnimations     |             2 |             2 |            2 |
// | PathKeyFrameAnimations   |             3 |             3 |            - |
// |--------------------------+---------------+---------------+--------------|
// | ContainerVisuals         |             5 |             5 |            5 |
// | ShapeVisuals             |             3 |             3 |            3 |
// |--------------------------+---------------+---------------+--------------|
// | ContainerShapes          |             7 |             7 |            7 |
// | CompositionSpriteShapes  |             8 |             8 |            8 |
// |--------------------------+---------------+---------------+--------------|
// | Brushes                  |             3 |             3 |            3 |
// | Gradient stops           |             - |             - |            - |
// | CompositionVisualSurface |             - |             - |            - |
// ---------------------------------------------------------------------------
#include "pch.h"
#include "Controls_10_Search.h"
#include <winrt/Windows.Foundation.Metadata.h>
#include <winrt/Windows.UI.Composition.h>
#include "d2d1.h"
#include <d2d1_1.h>
#include <d2d1helper.h>
#include <Windows.Graphics.Interop.h>
#include <winrt/Windows.Graphics.Effects.h>

using namespace winrt::Windows::Foundation;
using namespace winrt::Windows::Foundation::Numerics;
using namespace winrt::Windows::Graphics;
using namespace winrt::Windows::UI;
using namespace winrt::Windows::UI::Composition;
using TimeSpan = winrt::Windows::Foundation::TimeSpan;

namespace winrt::Microsoft::UI::Xaml::Controls::AnimatedVisuals
{
    CppWinRTActivatableClassWithBasicFactory(Controls_10_Search)
}
#include "AnimatedVisuals\Controls_10_Search.g.cpp"

class CanvasGeometry : public winrt::implements<CanvasGeometry,
    IGeometrySource2D,
    Windows::Graphics::IGeometrySource2DInterop>
{
    winrt::com_ptr<ID2D1Geometry> _geometry{ nullptr };

public:
    CanvasGeometry(winrt::com_ptr<ID2D1Geometry> geometry)
        : _geometry{ geometry }
    { }

    // IGeometrySource2D.
    winrt::com_ptr<ID2D1Geometry> Geometry() { return _geometry; }

    // IGeometrySource2DInterop.
    IFACEMETHODIMP GetGeometry(ID2D1Geometry** value) override
    {
        _geometry.copy_to(value);
        return S_OK;
    }

    // IGeometrySource2DInterop.
    IFACEMETHODIMP TryGetGeometryUsingFactory(ID2D1Factory*, ID2D1Geometry**) override
    {
        return E_NOTIMPL;
    }
};
class Controls_10_Search_AnimatedVisual_UAPv12 : public winrt::implements<Controls_10_Search_AnimatedVisual_UAPv12,
        winrt::Microsoft::UI::Xaml::Controls::IAnimatedVisual,
        IClosable>
{
    winrt::com_ptr<ID2D1Factory> _d2dFactory{ nullptr };
    static constexpr int64_t c_durationTicks{ 30000000L };
    Compositor const _c{ nullptr };
    ExpressionAnimation const _reusableExpressionAnimation{ nullptr };
    CompositionPropertySet const _themeProperties{ nullptr };
    CompositionColorBrush _colorBrush_Black{ nullptr };
    CompositionColorBrush _themeColor_Foreground{ nullptr };
    CompositionEllipseGeometry _ellipse_4p907{ nullptr };
    CompositionPath _path_0{ nullptr };
    CompositionPath _path_1{ nullptr };
    CompositionPath _path_2{ nullptr };
    ContainerVisual _root{ nullptr };
    CubicBezierEasingFunction _cubicBezierEasingFunction_0{ nullptr };
    CubicBezierEasingFunction _cubicBezierEasingFunction_1{ nullptr };
    ExpressionAnimation _rootProgress{ nullptr };
    InsetClip _insetClip_0{ nullptr };
    ScalarKeyFrameAnimation _scalarAnimation_0_to_0p85{ nullptr };
    ScalarKeyFrameAnimation _scalarAnimation_0p85_to_1p451{ nullptr };
    ScalarKeyFrameAnimation _scalarAnimation_1_to_1p2{ nullptr };
    ScalarKeyFrameAnimation _scalarAnimation_1p2_to_1p45{ nullptr };
    ScalarKeyFrameAnimation _scalarAnimation_1p35_to_1{ nullptr };
    StepEasingFunction _holdThenStepEasingFunction{ nullptr };
    StepEasingFunction _stepThenHoldEasingFunction{ nullptr };

    static void StartProgressBoundAnimation(
        CompositionObject target,
        winrt::hstring animatedPropertyName,
        CompositionAnimation animation,
        ExpressionAnimation controllerProgressExpression)
    {
        target.StartAnimation(animatedPropertyName, animation);
        const auto controller = target.TryGetAnimationController(animatedPropertyName);
        controller.Pause();
        controller.StartAnimation(L"Progress", controllerProgressExpression);
    }

    void BindProperty(
        CompositionObject target,
        winrt::hstring animatedPropertyName,
        winrt::hstring expression,
        winrt::hstring referenceParameterName,
        CompositionObject referencedObject)
    {
        _reusableExpressionAnimation.ClearAllParameters();
        _reusableExpressionAnimation.Expression(expression);
        _reusableExpressionAnimation.SetReferenceParameter(referenceParameterName, referencedObject);
        target.StartAnimation(animatedPropertyName, _reusableExpressionAnimation);
    }

    BooleanKeyFrameAnimation CreateBooleanKeyFrameAnimation(float initialProgress, bool initialValue)
    {
        const auto result = _c.CreateBooleanKeyFrameAnimation();
        result.Duration(TimeSpan{ c_durationTicks });
        result.InsertKeyFrame(initialProgress, initialValue);
        return result;
    }

    PathKeyFrameAnimation CreatePathKeyFrameAnimation(float initialProgress, CompositionPath initialValue, CompositionEasingFunction initialEasingFunction)
    {
        const auto result = _c.CreatePathKeyFrameAnimation();
        result.Duration(TimeSpan{ c_durationTicks });
        result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
        return result;
    }

    ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
    {
        const auto result = _c.CreateScalarKeyFrameAnimation();
        result.Duration(TimeSpan{ c_durationTicks });
        result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
        return result;
    }

    Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, winrt::float2 initialValue, CompositionEasingFunction initialEasingFunction)
    {
        const auto result = _c.CreateVector2KeyFrameAnimation();
        result.Duration(TimeSpan{ c_durationTicks });
        result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
        return result;
    }

    CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, winrt::float3x2 transformMatrix)
    {
        const auto result = _c.CreateSpriteShape(geometry);
        result.TransformMatrix(transformMatrix);
        return result;
    }

    // - PreComp layer: Controls_10_Search
    // PreComp layer: AnimIcon - Controls - Search - Off
    BooleanKeyFrameAnimation IsVisibleBooleanAnimation_0()
    {
        const auto result = CreateBooleanKeyFrameAnimation(0.277777791F, true);
        result.InsertKeyFrame(0.333333343F, false);
        return result;
    }

    // - PreComp layer: Controls_10_Search
    // PreComp layer: AnimIcon - Controls - Search - Hover to Tap
    BooleanKeyFrameAnimation IsVisibleBooleanAnimation_1()
    {
        const auto result = CreateBooleanKeyFrameAnimation(0.111111112F, true);
        result.InsertKeyFrame(0.277777791F, false);
        return result;
    }

    // - PreComp layer: Controls_10_Search
    // PreComp layer: AnimIcon - Controls - Search - Hover
    BooleanKeyFrameAnimation IsVisibleBooleanAnimation_2()
    {
        const auto result = CreateBooleanKeyFrameAnimation(0.111111112F, false);
        return result;
    }

    winrt::com_ptr<CanvasGeometry> Geometry_0()
    {
        winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
        winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
        winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
        winrt::check_hresult(path->Open(sink.put()));
        sink->BeginFigure({ -866.484009F, 522.859009F }, D2D1_FIGURE_BEGIN_FILLED);
        sink->AddBezier({ { -866.484009F, 522.859009F }, { -870.22699F, 526.60199F }, { -870.22699F, 526.60199F } });
        sink->EndFigure(D2D1_FIGURE_END_OPEN);
        winrt::check_hresult(sink->Close());
        auto result = winrt::make_self<CanvasGeometry>(path);
        return result;
    }

    winrt::com_ptr<CanvasGeometry> Geometry_1()
    {
        winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
        winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
        winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
        winrt::check_hresult(path->Open(sink.put()));
        sink->BeginFigure({ -865.25F, 521.625F }, D2D1_FIGURE_BEGIN_FILLED);
        sink->AddBezier({ { -865.25F, 521.625F }, { -870.22699F, 526.60199F }, { -870.22699F, 526.60199F } });
        sink->EndFigure(D2D1_FIGURE_END_OPEN);
        winrt::check_hresult(sink->Close());
        auto result = winrt::make_self<CanvasGeometry>(path);
        return result;
    }

    winrt::com_ptr<CanvasGeometry> Geometry_2()
    {
        winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
        winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
        winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
        winrt::check_hresult(path->Open(sink.put()));
        sink->BeginFigure({ -865.515991F, 521.890991F }, D2D1_FIGURE_BEGIN_FILLED);
        sink->AddBezier({ { -865.515991F, 521.890991F }, { -870.22699F, 526.60199F }, { -870.22699F, 526.60199F } });
        sink->EndFigure(D2D1_FIGURE_END_OPEN);
        winrt::check_hresult(sink->Close());
        auto result = winrt::make_self<CanvasGeometry>(path);
        return result;
    }

    // - - - - - - PreComp layer: Controls_10_Search
    // - - - - - PreComp layer: AnimIcon - Controls - Search - Hover
    // - - - - Transforms for AnimIcon - Controls - Search - Hover Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // - - - Layer: Shape Layer 4
    // - Path
    winrt::com_ptr<CanvasGeometry> Geometry_3()
    {
        winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
        winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
        winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
        winrt::check_hresult(path->Open(sink.put()));
        sink->BeginFigure({ -865.75F, 522.125F }, D2D1_FIGURE_BEGIN_FILLED);
        sink->AddBezier({ { -865.75F, 522.125F }, { -870.22699F, 526.60199F }, { -870.22699F, 526.60199F } });
        sink->EndFigure(D2D1_FIGURE_END_OPEN);
        winrt::check_hresult(sink->Close());
        auto result = winrt::make_self<CanvasGeometry>(path);
        return result;
    }

    // Transforms for Light Gray Solid 1 Scale(1.16667,1.16667,0), Offset(25,25,0)
    CompositionColorBrush ColorBrush_AlmostLightGray_FFCCCCCC()
    {
        return _c.CreateColorBrush({ 0xFF, 0xCC, 0xCC, 0xCC });
    }

    CompositionColorBrush ColorBrush_Black()
    {
        return _colorBrush_Black = _c.CreateColorBrush({ 0xFF, 0x00, 0x00, 0x00 });
    }

    // Color bound to theme property value: Foreground
    CompositionColorBrush ThemeColor_Foreground()
    {
        const auto result = _themeColor_Foreground = _c.CreateColorBrush();
        BindProperty(result, L"Color", L"ColorRGB(_theme.Foreground.W*1,_theme.Foreground.X,_theme.Foreground.Y,_theme.Foreground.Z)", L"_theme", _themeProperties);
        return result;
    }

    // - - PreComp layer: Controls_10_Search
    // - PreComp layer: AnimIcon - Controls - Search - Off
    // Transforms for AnimIcon - Controls - Search - Off Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Layer: Shape Layer 4
    CompositionContainerShape ContainerShape_0()
    {
        const auto result = _c.CreateContainerShape();
        result.CenterPoint({ -861.093994F, 518.093994F });
        result.Offset({ 879.375F, -504.125F });
        // ShapeGroup: Ellipse 1 Offset:<-861.094, 518.094>
        result.Shapes().Append(SpriteShape_1());
        StartProgressBoundAnimation(result, L"Scale.X", ScalarAnimation_1p35_to_1(), _rootProgress);
        StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_1p35_to_1, _rootProgress);
        return result;
    }

    // - - PreComp layer: Controls_10_Search
    // - PreComp layer: AnimIcon - Controls - Search - Hover to Tap
    // Transforms for AnimIcon - Controls - Search - Hover to Tap Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Layer: Shape Layer 5
    CompositionContainerShape ContainerShape_1()
    {
        const auto result = _c.CreateContainerShape();
        result.Scale({ 0.0F, 0.0F });
        const auto shapes = result.Shapes();
        // ShapeGroup: Shape 1
        shapes.Append(SpriteShape_2());
        shapes.Append(ContainerShape_2());
        StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_0(), _rootProgress);
        return result;
    }

    // - - - PreComp layer: Controls_10_Search
    // - - PreComp layer: AnimIcon - Controls - Search - Hover to Tap
    // - Transforms for AnimIcon - Controls - Search - Hover to Tap Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Layer: Shape Layer 5
    CompositionContainerShape ContainerShape_2()
    {
        const auto result = _c.CreateContainerShape();
        result.CenterPoint({ -861.093994F, 518.093994F });
        result.Offset({ 879.375F, -504.125F });
        // ShapeGroup: Ellipse 1 Offset:<-861.094, 518.094>
        result.Shapes().Append(SpriteShape_3());
        StartProgressBoundAnimation(result, L"Scale.X", ScalarAnimation_1p2_to_1p45(), _rootProgress);
        StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_1p2_to_1p45, _rootProgress);
        return result;
    }

    // - - PreComp layer: Controls_10_Search
    // - PreComp layer: AnimIcon - Controls - Search - Hover to Tap
    // Transforms for AnimIcon - Controls - Search - Hover to Tap Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Layer: Shape Layer 7
    CompositionContainerShape ContainerShape_3()
    {
        const auto result = _c.CreateContainerShape();
        result.Scale({ 0.0F, 0.0F });
        result.Shapes().Append(ContainerShape_4());
        StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_1(), _rootProgress);
        return result;
    }

    // - - - PreComp layer: Controls_10_Search
    // - - PreComp layer: AnimIcon - Controls - Search - Hover to Tap
    // - Transforms for AnimIcon - Controls - Search - Hover to Tap Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Layer: Shape Layer 7
    CompositionContainerShape ContainerShape_4()
    {
        const auto result = _c.CreateContainerShape();
        result.CenterPoint({ -861.093994F, 518.093994F });
        result.Offset({ 879.375F, -504.125F });
        // ShapeGroup: Ellipse 1 Offset:<-861.094, 518.094>
        result.Shapes().Append(SpriteShape_4());
        StartProgressBoundAnimation(result, L"Scale.X", ScalarAnimation_0p85_to_1p451(), _rootProgress);
        StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_0p85_to_1p451, _rootProgress);
        return result;
    }

    // - - PreComp layer: Controls_10_Search
    // - PreComp layer: AnimIcon - Controls - Search - Hover
    // Transforms for AnimIcon - Controls - Search - Hover Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Layer: Shape Layer 4
    CompositionContainerShape ContainerShape_5()
    {
        const auto result = _c.CreateContainerShape();
        result.CenterPoint({ -861.093994F, 518.093994F });
        result.Offset({ 879.375F, -504.125F });
        // ShapeGroup: Ellipse 1 Offset:<-861.094, 518.094>
        result.Shapes().Append(SpriteShape_6());
        StartProgressBoundAnimation(result, L"Scale.X", ScalarAnimation_1_to_1p2(), _rootProgress);
        StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_1_to_1p2, _rootProgress);
        return result;
    }

    // - - PreComp layer: Controls_10_Search
    // - PreComp layer: AnimIcon - Controls - Search - Hover
    // Transforms for AnimIcon - Controls - Search - Hover Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Layer: Shape Layer 4
    CompositionContainerShape ContainerShape_6()
    {
        const auto result = _c.CreateContainerShape();
        result.CenterPoint({ -861.093994F, 518.093994F });
        result.Offset({ 879.375F, -504.125F });
        // ShapeGroup: Ellipse 1 Offset:<-861.094, 518.094>
        result.Shapes().Append(SpriteShape_7());
        StartProgressBoundAnimation(result, L"Scale.X", ScalarAnimation_0_to_0p85(), _rootProgress);
        StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_0_to_0p85, _rootProgress);
        return result;
    }

    // Ellipse Path 1.EllipseGeometry
    CompositionEllipseGeometry Ellipse_4p907()
    {
        const auto result = _ellipse_4p907 = _c.CreateEllipseGeometry();
        result.Radius({ 4.90649986F, 4.90649986F });
        return result;
    }

    CompositionPath Path_0()
    {
        const auto result = _path_0 = CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_0()));
        return result;
    }

    CompositionPath Path_1()
    {
        const auto result = _path_1 = CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_1()));
        return result;
    }

    CompositionPath Path_2()
    {
        const auto result = _path_2 = CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_2()));
        return result;
    }

    // - - - PreComp layer: Controls_10_Search
    // - - PreComp layer: AnimIcon - Controls - Search - Off
    // - Transforms for AnimIcon - Controls - Search - Off Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Layer: Shape Layer 4
    CompositionPathGeometry PathGeometry_0()
    {
        const auto result = _c.CreatePathGeometry();
        StartProgressBoundAnimation(result, L"Path", PathKeyFrameAnimation_0(), RootProgress());
        return result;
    }

    // - - - - PreComp layer: Controls_10_Search
    // - - - PreComp layer: AnimIcon - Controls - Search - Hover to Tap
    // - - Transforms for AnimIcon - Controls - Search - Hover to Tap Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // - Layer: Shape Layer 5
    // ShapeGroup: Shape 1
    CompositionPathGeometry PathGeometry_1()
    {
        const auto result = _c.CreatePathGeometry();
        StartProgressBoundAnimation(result, L"Path", PathKeyFrameAnimation_1(), _rootProgress);
        return result;
    }

    // - - - PreComp layer: Controls_10_Search
    // - - PreComp layer: AnimIcon - Controls - Search - Hover
    // - Transforms for AnimIcon - Controls - Search - Hover Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Layer: Shape Layer 4
    CompositionPathGeometry PathGeometry_2()
    {
        const auto result = _c.CreatePathGeometry();
        StartProgressBoundAnimation(result, L"Path", PathKeyFrameAnimation_2(), _rootProgress);
        return result;
    }

    // - - PreComp layer: Controls_10_Search
    // - PreComp layer: AnimIcon - Controls - Search - Off
    // Transforms for AnimIcon - Controls - Search - Off Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Path 1
    CompositionSpriteShape SpriteShape_0()
    {
        const auto result = _c.CreateSpriteShape(PathGeometry_0());
        result.StrokeBrush(ThemeColor_Foreground());
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeMiterLimit(2.0F);
        StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_0(), _rootProgress);
        return result;
    }

    // - - - PreComp layer: Controls_10_Search
    // - - PreComp layer: AnimIcon - Controls - Search - Off
    // - Transforms for AnimIcon - Controls - Search - Off Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Layer: Shape Layer 4
    // Ellipse Path 1
    CompositionSpriteShape SpriteShape_1()
    {
        // Offset:<-861.094, 518.094>
        const auto result = CreateSpriteShape(Ellipse_4p907(), { 1.0F, 0.0F, 0.0F, 1.0F, -861.093994F, 518.093994F });
        result.StrokeBrush(ColorBrush_Black());
        return result;
    }

    // - - - PreComp layer: Controls_10_Search
    // - - PreComp layer: AnimIcon - Controls - Search - Hover to Tap
    // - Transforms for AnimIcon - Controls - Search - Hover to Tap Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Layer: Shape Layer 5
    // Path 1
    CompositionSpriteShape SpriteShape_2()
    {
        const auto result = _c.CreateSpriteShape(PathGeometry_1());
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeMiterLimit(2.0F);
        StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_1(), _rootProgress);
        return result;
    }

    // - - - - PreComp layer: Controls_10_Search
    // - - - PreComp layer: AnimIcon - Controls - Search - Hover to Tap
    // - - Transforms for AnimIcon - Controls - Search - Hover to Tap Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // - Layer: Shape Layer 5
    // Ellipse Path 1
    CompositionSpriteShape SpriteShape_3()
    {
        // Offset:<-861.094, 518.094>
        const auto result = CreateSpriteShape(_ellipse_4p907, { 1.0F, 0.0F, 0.0F, 1.0F, -861.093994F, 518.093994F });
        result.StrokeBrush(_colorBrush_Black);
        return result;
    }

    // - - - - PreComp layer: Controls_10_Search
    // - - - PreComp layer: AnimIcon - Controls - Search - Hover to Tap
    // - - Transforms for AnimIcon - Controls - Search - Hover to Tap Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // - Layer: Shape Layer 7
    // Ellipse Path 1
    CompositionSpriteShape SpriteShape_4()
    {
        // Offset:<-861.094, 518.094>
        const auto result = CreateSpriteShape(_ellipse_4p907, { 1.0F, 0.0F, 0.0F, 1.0F, -861.093994F, 518.093994F });
        result.StrokeBrush(_colorBrush_Black);
        return result;
    }

    // - - PreComp layer: Controls_10_Search
    // - PreComp layer: AnimIcon - Controls - Search - Hover
    // Transforms for AnimIcon - Controls - Search - Hover Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Path 1
    CompositionSpriteShape SpriteShape_5()
    {
        // Offset:<879.375, -504.12497>
        const auto result = CreateSpriteShape(PathGeometry_2(), { 1.0F, 0.0F, 0.0F, 1.0F, 879.375F, -504.124969F });
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeMiterLimit(2.0F);
        return result;
    }

    // - - - PreComp layer: Controls_10_Search
    // - - PreComp layer: AnimIcon - Controls - Search - Hover
    // - Transforms for AnimIcon - Controls - Search - Hover Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Layer: Shape Layer 4
    // Ellipse Path 1
    CompositionSpriteShape SpriteShape_6()
    {
        // Offset:<-861.094, 518.094>
        const auto result = CreateSpriteShape(_ellipse_4p907, { 1.0F, 0.0F, 0.0F, 1.0F, -861.093994F, 518.093994F });
        result.StrokeBrush(_colorBrush_Black);
        return result;
    }

    // - - - PreComp layer: Controls_10_Search
    // - - PreComp layer: AnimIcon - Controls - Search - Hover
    // - Transforms for AnimIcon - Controls - Search - Hover Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Layer: Shape Layer 4
    // Ellipse Path 1
    CompositionSpriteShape SpriteShape_7()
    {
        // Offset:<-861.094, 518.094>
        const auto result = CreateSpriteShape(_ellipse_4p907, { 1.0F, 0.0F, 0.0F, 1.0F, -861.093994F, 518.093994F });
        result.StrokeBrush(_colorBrush_Black);
        return result;
    }

    // Transforms for Controls_10_Search Scale(4.75,4.75,0), Offset(140,140,0)
    ContainerVisual ContainerVisual_0()
    {
        const auto result = _c.CreateContainerVisual();
        result.Clip(InsetClip_0());
        result.Size({ 70.0F, 70.0F });
        // Offset:<8.75, 8.75>, Scale:<4.75, 4.75>
        result.TransformMatrix({ 4.75F, 0.0F, 0.0F, 0.0F, 0.0F, 4.75F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 8.75F, 8.75F, 0.0F, 1.0F });
        const auto children = result.Children();
        // PreComp layer: AnimIcon - Controls - Search - Off
        children.InsertAtTop(ContainerVisual_1());
        // PreComp layer: AnimIcon - Controls - Search - Hover to Tap
        children.InsertAtTop(ContainerVisual_2());
        // PreComp layer: AnimIcon - Controls - Search - Hover
        children.InsertAtTop(ContainerVisual_3());
        return result;
    }

    // PreComp layer: Controls_10_Search
    // PreComp layer: AnimIcon - Controls - Search - Off
    ContainerVisual ContainerVisual_1()
    {
        const auto result = _c.CreateContainerVisual();
        result.Clip(_insetClip_0);
        result.IsVisible(false);
        result.Size({ 32.0F, 32.0F });
        // Offset:<-22.75, -19.25>, Scale:<3.5, 3.5>
        result.TransformMatrix({ 3.5F, 0.0F, 0.0F, 0.0F, 0.0F, 3.5F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, -22.75F, -19.25F, 0.0F, 1.0F });
        // Transforms for AnimIcon - Controls - Search - Off Scale(3.5,3.5,0),
        // Offset(17.25,20.75,0)
        result.Children().InsertAtTop(ShapeVisual_0());
        StartProgressBoundAnimation(result, L"IsVisible", IsVisibleBooleanAnimation_0(), _rootProgress);
        return result;
    }

    // PreComp layer: Controls_10_Search
    // PreComp layer: AnimIcon - Controls - Search - Hover to Tap
    ContainerVisual ContainerVisual_2()
    {
        const auto result = _c.CreateContainerVisual();
        result.Clip(_insetClip_0);
        result.IsVisible(false);
        result.Size({ 32.0F, 32.0F });
        // Offset:<-22.75, -19.25>, Scale:<3.5, 3.5>
        result.TransformMatrix({ 3.5F, 0.0F, 0.0F, 0.0F, 0.0F, 3.5F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, -22.75F, -19.25F, 0.0F, 1.0F });
        // Transforms for AnimIcon - Controls - Search - Hover to Tap Scale(3.5,3.5,0),
        // Offset(17.25,20.75,0)
        result.Children().InsertAtTop(ShapeVisual_1());
        StartProgressBoundAnimation(result, L"IsVisible", IsVisibleBooleanAnimation_1(), _rootProgress);
        return result;
    }

    // PreComp layer: Controls_10_Search
    // PreComp layer: AnimIcon - Controls - Search - Hover
    ContainerVisual ContainerVisual_3()
    {
        const auto result = _c.CreateContainerVisual();
        result.Clip(_insetClip_0);
        result.Size({ 32.0F, 32.0F });
        // Offset:<-22.75, -19.25>, Scale:<3.5, 3.5>
        result.TransformMatrix({ 3.5F, 0.0F, 0.0F, 0.0F, 0.0F, 3.5F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, -22.75F, -19.25F, 0.0F, 1.0F });
        // Transforms for AnimIcon - Controls - Search - Hover Scale(3.5,3.5,0),
        // Offset(17.25,20.75,0)
        result.Children().InsertAtTop(ShapeVisual_2());
        StartProgressBoundAnimation(result, L"IsVisible", IsVisibleBooleanAnimation_2(), _rootProgress);
        return result;
    }

    // The root of the composition.
    ContainerVisual Root()
    {
        const auto result = _root = _c.CreateContainerVisual();
        const auto propertySet = result.Properties();
        propertySet.InsertScalar(L"Progress", 0.0F);
        propertySet.InsertScalar(L"t0", 0.0F);
        const auto children = result.Children();
        // Transforms for Light Gray Solid 1 Scale(1.16667,1.16667,0), Offset(25,25,0)
        children.InsertAtTop(SpriteVisual_0());
        // PreComp layer: Controls_10_Search
        children.InsertAtTop(ContainerVisual_0());
        StartProgressBoundAnimation(propertySet, L"t0", t0ScalarAnimation_0_to_1(), _rootProgress);
        return result;
    }

    CubicBezierEasingFunction CubicBezierEasingFunction_0()
    {
        return _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.166999996F }, { 0.0F, 1.0F });
    }

    CubicBezierEasingFunction CubicBezierEasingFunction_1()
    {
        return _cubicBezierEasingFunction_1 = _c.CreateCubicBezierEasingFunction({ 0.850000024F, 0.0F }, { 0.75F, 1.0F });
    }

    ExpressionAnimation RootProgress()
    {
        const auto result = _rootProgress = _c.CreateExpressionAnimation(L"_.Progress");
        result.SetReferenceParameter(L"_", _root);
        return result;
    }

    InsetClip InsetClip_0()
    {
        const auto result = _insetClip_0 = _c.CreateInsetClip();
        return result;
    }

    // - - - - PreComp layer: Controls_10_Search
    // - - - PreComp layer: AnimIcon - Controls - Search - Off
    // - - Transforms for AnimIcon - Controls - Search - Off Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // - Layer: Shape Layer 4
    // Path
    PathKeyFrameAnimation PathKeyFrameAnimation_0()
    {
        const auto result = CreatePathKeyFrameAnimation(0.0F, Path_0(), StepThenHoldEasingFunction());
        result.InsertKeyFrame(0.277777791F, _path_0, HoldThenStepEasingFunction());
        result.InsertKeyFrame(0.333333343F, Path_1(), CubicBezierEasingFunction_0());
        return result;
    }

    // - - - - - PreComp layer: Controls_10_Search
    // - - - - PreComp layer: AnimIcon - Controls - Search - Hover to Tap
    // - - - Transforms for AnimIcon - Controls - Search - Hover to Tap Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // - - Layer: Shape Layer 5
    // - ShapeGroup: Shape 1
    // Path
    PathKeyFrameAnimation PathKeyFrameAnimation_1()
    {
        const auto result = CreatePathKeyFrameAnimation(0.0F, Path_2(), _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.111111112F, _path_2, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.166666672F, _path_0, CubicBezierEasingFunction_1());
        return result;
    }

    // - - - - PreComp layer: Controls_10_Search
    // - - - PreComp layer: AnimIcon - Controls - Search - Hover
    // - - Transforms for AnimIcon - Controls - Search - Hover Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // - Layer: Shape Layer 4
    // Path
    PathKeyFrameAnimation PathKeyFrameAnimation_2()
    {
        const auto result = CreatePathKeyFrameAnimation(0.0F, _path_1, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.105555557F, CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_3())), _cubicBezierEasingFunction_0);
        return result;
    }

    // Scale
    ScalarKeyFrameAnimation ScalarAnimation_0_to_0p85()
    {
        const auto result = _scalarAnimation_0_to_0p85 = CreateScalarKeyFrameAnimation(0.0F, 0.0F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.105555557F, 0.850000024F, _cubicBezierEasingFunction_0);
        return result;
    }

    // Scale
    ScalarKeyFrameAnimation ScalarAnimation_0p85_to_1p451()
    {
        const auto result = _scalarAnimation_0p85_to_1p451 = CreateScalarKeyFrameAnimation(0.0F, 0.850000024F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.111111112F, 0.850000024F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.166666672F, 1.45099998F, _cubicBezierEasingFunction_1);
        return result;
    }

    // Scale
    ScalarKeyFrameAnimation ScalarAnimation_1_to_1p2()
    {
        const auto result = _scalarAnimation_1_to_1p2 = CreateScalarKeyFrameAnimation(0.0F, 1.0F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.105555557F, 1.20000005F, _cubicBezierEasingFunction_0);
        return result;
    }

    // Scale
    ScalarKeyFrameAnimation ScalarAnimation_1p2_to_1p45()
    {
        const auto result = _scalarAnimation_1p2_to_1p45 = CreateScalarKeyFrameAnimation(0.0F, 1.20000005F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.111111112F, 1.20000005F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.166666672F, 1.5F, _cubicBezierEasingFunction_1);
        result.InsertKeyFrame(0.272222221F, 1.45000005F, _c.CreateCubicBezierEasingFunction({ 0.349999994F, 0.0F }, { 0.0F, 1.0F }));
        return result;
    }

    // Scale
    ScalarKeyFrameAnimation ScalarAnimation_1p35_to_1()
    {
        const auto result = _scalarAnimation_1p35_to_1 = CreateScalarKeyFrameAnimation(0.0F, 1.35000002F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.277777791F, 1.35000002F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.333333343F, 1.0F, _cubicBezierEasingFunction_0);
        return result;
    }

    ScalarKeyFrameAnimation t0ScalarAnimation_0_to_1()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.277777821F, 0.0F, _stepThenHoldEasingFunction);
        result.SetReferenceParameter(L"_", _root);
        result.InsertKeyFrame(0.333333313F, 1.0F, _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.165999994F }, { 0.0F, 1.0F }));
        return result;
    }

    // - PreComp layer: Controls_10_Search
    // PreComp layer: AnimIcon - Controls - Search - Off
    // Layer aggregator
    ShapeVisual ShapeVisual_0()
    {
        const auto result = _c.CreateShapeVisual();
        result.Size({ 32.0F, 32.0F });
        const auto shapes = result.Shapes();
        // Layer: Shape Layer 4
        shapes.Append(SpriteShape_0());
        // Layer: Shape Layer 4
        shapes.Append(ContainerShape_0());
        return result;
    }

    // - PreComp layer: Controls_10_Search
    // PreComp layer: AnimIcon - Controls - Search - Hover to Tap
    // Layer aggregator
    ShapeVisual ShapeVisual_1()
    {
        const auto result = _c.CreateShapeVisual();
        result.Size({ 32.0F, 32.0F });
        const auto shapes = result.Shapes();
        // Layer: Shape Layer 5
        shapes.Append(ContainerShape_1());
        // Layer: Shape Layer 7
        shapes.Append(ContainerShape_3());
        return result;
    }

    // - PreComp layer: Controls_10_Search
    // PreComp layer: AnimIcon - Controls - Search - Hover
    // Layer aggregator
    ShapeVisual ShapeVisual_2()
    {
        const auto result = _c.CreateShapeVisual();
        result.Size({ 32.0F, 32.0F });
        const auto shapes = result.Shapes();
        // Layer: Shape Layer 4
        shapes.Append(SpriteShape_5());
        // Layer: Shape Layer 4
        shapes.Append(ContainerShape_5());
        // Layer: Shape Layer 4
        shapes.Append(ContainerShape_6());
        return result;
    }

    // SolidLayerRectangle
    SpriteVisual SpriteVisual_0()
    {
        const auto result = _c.CreateSpriteVisual();
        result.Size({ 300.0F, 300.0F });
        // Offset:<-0.0004940033, -0.0004940033>, Scale:<1.16667, 1.16667>
        result.TransformMatrix({ 1.16666996F, 0.0F, 0.0F, 0.0F, 0.0F, 1.16666996F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, -0.000494003296F, -0.000494003296F, 0.0F, 1.0F });
        result.Brush(ColorBrush_AlmostLightGray_FFCCCCCC());
        return result;
    }

    StepEasingFunction HoldThenStepEasingFunction()
    {
        const auto result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
        result.IsFinalStepSingleFrame(true);
        return result;
    }

    StepEasingFunction StepThenHoldEasingFunction()
    {
        const auto result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
        result.IsInitialStepSingleFrame(true);
        return result;
    }

    // - - - PreComp layer: Controls_10_Search
    // - - PreComp layer: AnimIcon - Controls - Search - Off
    // - Transforms for AnimIcon - Controls - Search - Off Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Layer: Shape Layer 4
    // Offset
    Vector2KeyFrameAnimation OffsetVector2Animation_0()
    {
        const auto result = CreateVector2KeyFrameAnimation(0.0F, { 879.375F, -504.125F }, _stepThenHoldEasingFunction);
        result.SetReferenceParameter(L"_", _root);
        result.InsertKeyFrame(0.277777791F, { 879.375F, -504.125F }, _holdThenStepEasingFunction);
        result.InsertExpressionKeyFrame(0.333333313F, L"(Pow(1-_.t0,3)*Vector2(879.375,-504.125))+(3*Square(1-_.t0)*_.t0*Vector2(879.375,-504.125))+(3*(1-_.t0)*Square(_.t0)*Vector2(879.305,-504.055))+(Pow(_.t0,3)*Vector2(879.375,-504.125))", _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.333333343F, { 879.375F, -504.125F }, _stepThenHoldEasingFunction);
        return result;
    }

    // - - - - PreComp layer: Controls_10_Search
    // - - - PreComp layer: AnimIcon - Controls - Search - Hover to Tap
    // - - Transforms for AnimIcon - Controls - Search - Hover to Tap Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // - Layer: Shape Layer 5
    // ShapeGroup: Shape 1
    // Offset
    Vector2KeyFrameAnimation OffsetVector2Animation_1()
    {
        const auto result = CreateVector2KeyFrameAnimation(0.0F, { 879.375F, -504.125F }, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.111111112F, { 879.375F, -504.125F }, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.166666672F, { 878.75F, -503.5F }, _c.CreateCubicBezierEasingFunction({ 0.850000024F, 0.0F }, { 1.0F, 1.0F }));
        return result;
    }

    // - - - PreComp layer: Controls_10_Search
    // - - PreComp layer: AnimIcon - Controls - Search - Hover to Tap
    // - Transforms for AnimIcon - Controls - Search - Hover to Tap Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Layer: Shape Layer 5
    Vector2KeyFrameAnimation ShapeVisibilityAnimation_0()
    {
        const auto result = CreateVector2KeyFrameAnimation(0.111111112F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.277777791F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
        return result;
    }

    // - - - PreComp layer: Controls_10_Search
    // - - PreComp layer: AnimIcon - Controls - Search - Hover to Tap
    // - Transforms for AnimIcon - Controls - Search - Hover to Tap Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Layer: Shape Layer 7
    Vector2KeyFrameAnimation ShapeVisibilityAnimation_1()
    {
        const auto result = CreateVector2KeyFrameAnimation(0.111111112F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.166666672F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
        return result;
    }

    static IGeometrySource2D CanvasGeometryToIGeometrySource2D(winrt::com_ptr<CanvasGeometry> geo)
    {
        return geo.as<IGeometrySource2D>();
    }

public:
    Controls_10_Search_AnimatedVisual_UAPv12(
        Compositor compositor,
        CompositionPropertySet themeProperties)
        : _c{compositor}
        , _themeProperties{themeProperties}
        , _reusableExpressionAnimation(compositor.CreateExpressionAnimation())
    {
        winrt::check_hresult(D2D1CreateFactory(D2D1_FACTORY_TYPE_SINGLE_THREADED, _d2dFactory.put()));
        const auto _ = Root();
    }

    void Close()
    {
        if (_root)
        {
            _root.Close();
        }
    }

    TimeSpan Duration() const
    {
        return TimeSpan{ c_durationTicks };
    }

    Visual RootVisual() const
    {
        return _root;
    }

    winrt::float2 Size() const
    {
        return { 350.0F, 350.0F };
    }

    static bool IsRuntimeCompatible()
    {
        return winrt::Windows::Foundation::Metadata::ApiInformation::IsApiContractPresent(L"Windows.Foundation.UniversalApiContract", 12);
    }
};

class Controls_10_Search_AnimatedVisual_UAPv11 : public winrt::implements<Controls_10_Search_AnimatedVisual_UAPv11,
        winrt::Microsoft::UI::Xaml::Controls::IAnimatedVisual,
        IClosable>
{
    winrt::com_ptr<ID2D1Factory> _d2dFactory{ nullptr };
    static constexpr int64_t c_durationTicks{ 30000000L };
    Compositor const _c{ nullptr };
    ExpressionAnimation const _reusableExpressionAnimation{ nullptr };
    CompositionPropertySet const _themeProperties{ nullptr };
    CompositionColorBrush _colorBrush_Black{ nullptr };
    CompositionColorBrush _themeColor_Foreground{ nullptr };
    CompositionEllipseGeometry _ellipse_4p907{ nullptr };
    CompositionPath _path_0{ nullptr };
    CompositionPath _path_1{ nullptr };
    CompositionPath _path_2{ nullptr };
    ContainerVisual _root{ nullptr };
    CubicBezierEasingFunction _cubicBezierEasingFunction_0{ nullptr };
    CubicBezierEasingFunction _cubicBezierEasingFunction_1{ nullptr };
    ExpressionAnimation _rootProgress{ nullptr };
    InsetClip _insetClip_0{ nullptr };
    ScalarKeyFrameAnimation _scalarAnimation_0_to_0p85{ nullptr };
    ScalarKeyFrameAnimation _scalarAnimation_0p85_to_1p451{ nullptr };
    ScalarKeyFrameAnimation _scalarAnimation_1_to_1p2{ nullptr };
    ScalarKeyFrameAnimation _scalarAnimation_1p2_to_1p45{ nullptr };
    ScalarKeyFrameAnimation _scalarAnimation_1p35_to_1{ nullptr };
    StepEasingFunction _holdThenStepEasingFunction{ nullptr };
    StepEasingFunction _stepThenHoldEasingFunction{ nullptr };

    static void StartProgressBoundAnimation(
        CompositionObject target,
        winrt::hstring animatedPropertyName,
        CompositionAnimation animation,
        ExpressionAnimation controllerProgressExpression)
    {
        target.StartAnimation(animatedPropertyName, animation);
        const auto controller = target.TryGetAnimationController(animatedPropertyName);
        controller.Pause();
        controller.StartAnimation(L"Progress", controllerProgressExpression);
    }

    void BindProperty(
        CompositionObject target,
        winrt::hstring animatedPropertyName,
        winrt::hstring expression,
        winrt::hstring referenceParameterName,
        CompositionObject referencedObject)
    {
        _reusableExpressionAnimation.ClearAllParameters();
        _reusableExpressionAnimation.Expression(expression);
        _reusableExpressionAnimation.SetReferenceParameter(referenceParameterName, referencedObject);
        target.StartAnimation(animatedPropertyName, _reusableExpressionAnimation);
    }

    BooleanKeyFrameAnimation CreateBooleanKeyFrameAnimation(float initialProgress, bool initialValue)
    {
        const auto result = _c.CreateBooleanKeyFrameAnimation();
        result.Duration(TimeSpan{ c_durationTicks });
        result.InsertKeyFrame(initialProgress, initialValue);
        return result;
    }

    PathKeyFrameAnimation CreatePathKeyFrameAnimation(float initialProgress, CompositionPath initialValue, CompositionEasingFunction initialEasingFunction)
    {
        const auto result = _c.CreatePathKeyFrameAnimation();
        result.Duration(TimeSpan{ c_durationTicks });
        result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
        return result;
    }

    ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
    {
        const auto result = _c.CreateScalarKeyFrameAnimation();
        result.Duration(TimeSpan{ c_durationTicks });
        result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
        return result;
    }

    Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, winrt::float2 initialValue, CompositionEasingFunction initialEasingFunction)
    {
        const auto result = _c.CreateVector2KeyFrameAnimation();
        result.Duration(TimeSpan{ c_durationTicks });
        result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
        return result;
    }

    CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, winrt::float3x2 transformMatrix)
    {
        const auto result = _c.CreateSpriteShape(geometry);
        result.TransformMatrix(transformMatrix);
        return result;
    }

    // - PreComp layer: Controls_10_Search
    // PreComp layer: AnimIcon - Controls - Search - Off
    BooleanKeyFrameAnimation IsVisibleBooleanAnimation_0()
    {
        const auto result = CreateBooleanKeyFrameAnimation(0.277777791F, true);
        result.InsertKeyFrame(0.333333343F, false);
        return result;
    }

    // - PreComp layer: Controls_10_Search
    // PreComp layer: AnimIcon - Controls - Search - Hover to Tap
    BooleanKeyFrameAnimation IsVisibleBooleanAnimation_1()
    {
        const auto result = CreateBooleanKeyFrameAnimation(0.111111112F, true);
        result.InsertKeyFrame(0.277777791F, false);
        return result;
    }

    // - PreComp layer: Controls_10_Search
    // PreComp layer: AnimIcon - Controls - Search - Hover
    BooleanKeyFrameAnimation IsVisibleBooleanAnimation_2()
    {
        const auto result = CreateBooleanKeyFrameAnimation(0.111111112F, false);
        return result;
    }

    winrt::com_ptr<CanvasGeometry> Geometry_0()
    {
        winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
        winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
        winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
        winrt::check_hresult(path->Open(sink.put()));
        sink->BeginFigure({ -866.484009F, 522.859009F }, D2D1_FIGURE_BEGIN_FILLED);
        sink->AddBezier({ { -866.484009F, 522.859009F }, { -870.22699F, 526.60199F }, { -870.22699F, 526.60199F } });
        sink->EndFigure(D2D1_FIGURE_END_OPEN);
        winrt::check_hresult(sink->Close());
        auto result = winrt::make_self<CanvasGeometry>(path);
        return result;
    }

    winrt::com_ptr<CanvasGeometry> Geometry_1()
    {
        winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
        winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
        winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
        winrt::check_hresult(path->Open(sink.put()));
        sink->BeginFigure({ -865.25F, 521.625F }, D2D1_FIGURE_BEGIN_FILLED);
        sink->AddBezier({ { -865.25F, 521.625F }, { -870.22699F, 526.60199F }, { -870.22699F, 526.60199F } });
        sink->EndFigure(D2D1_FIGURE_END_OPEN);
        winrt::check_hresult(sink->Close());
        auto result = winrt::make_self<CanvasGeometry>(path);
        return result;
    }

    winrt::com_ptr<CanvasGeometry> Geometry_2()
    {
        winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
        winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
        winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
        winrt::check_hresult(path->Open(sink.put()));
        sink->BeginFigure({ -865.515991F, 521.890991F }, D2D1_FIGURE_BEGIN_FILLED);
        sink->AddBezier({ { -865.515991F, 521.890991F }, { -870.22699F, 526.60199F }, { -870.22699F, 526.60199F } });
        sink->EndFigure(D2D1_FIGURE_END_OPEN);
        winrt::check_hresult(sink->Close());
        auto result = winrt::make_self<CanvasGeometry>(path);
        return result;
    }

    // - - - - - - PreComp layer: Controls_10_Search
    // - - - - - PreComp layer: AnimIcon - Controls - Search - Hover
    // - - - - Transforms for AnimIcon - Controls - Search - Hover Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // - - - Layer: Shape Layer 4
    // - Path
    winrt::com_ptr<CanvasGeometry> Geometry_3()
    {
        winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
        winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
        winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
        winrt::check_hresult(path->Open(sink.put()));
        sink->BeginFigure({ -865.75F, 522.125F }, D2D1_FIGURE_BEGIN_FILLED);
        sink->AddBezier({ { -865.75F, 522.125F }, { -870.22699F, 526.60199F }, { -870.22699F, 526.60199F } });
        sink->EndFigure(D2D1_FIGURE_END_OPEN);
        winrt::check_hresult(sink->Close());
        auto result = winrt::make_self<CanvasGeometry>(path);
        return result;
    }

    // Transforms for Light Gray Solid 1 Scale(1.16667,1.16667,0), Offset(25,25,0)
    CompositionColorBrush ColorBrush_AlmostLightGray_FFCCCCCC()
    {
        return _c.CreateColorBrush({ 0xFF, 0xCC, 0xCC, 0xCC });
    }

    CompositionColorBrush ColorBrush_Black()
    {
        return _colorBrush_Black = _c.CreateColorBrush({ 0xFF, 0x00, 0x00, 0x00 });
    }

    // Color bound to theme property value: Foreground
    CompositionColorBrush ThemeColor_Foreground()
    {
        const auto result = _themeColor_Foreground = _c.CreateColorBrush();
        BindProperty(result, L"Color", L"ColorRGB(_theme.Foreground.W*1,_theme.Foreground.X,_theme.Foreground.Y,_theme.Foreground.Z)", L"_theme", _themeProperties);
        return result;
    }

    // - - PreComp layer: Controls_10_Search
    // - PreComp layer: AnimIcon - Controls - Search - Off
    // Transforms for AnimIcon - Controls - Search - Off Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Layer: Shape Layer 4
    CompositionContainerShape ContainerShape_0()
    {
        const auto result = _c.CreateContainerShape();
        result.CenterPoint({ -861.093994F, 518.093994F });
        result.Offset({ 879.375F, -504.125F });
        // ShapeGroup: Ellipse 1 Offset:<-861.094, 518.094>
        result.Shapes().Append(SpriteShape_1());
        StartProgressBoundAnimation(result, L"Scale.X", ScalarAnimation_1p35_to_1(), _rootProgress);
        StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_1p35_to_1, _rootProgress);
        return result;
    }

    // - - PreComp layer: Controls_10_Search
    // - PreComp layer: AnimIcon - Controls - Search - Hover to Tap
    // Transforms for AnimIcon - Controls - Search - Hover to Tap Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Layer: Shape Layer 5
    CompositionContainerShape ContainerShape_1()
    {
        const auto result = _c.CreateContainerShape();
        result.Scale({ 0.0F, 0.0F });
        const auto shapes = result.Shapes();
        // ShapeGroup: Shape 1
        shapes.Append(SpriteShape_2());
        shapes.Append(ContainerShape_2());
        StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_0(), _rootProgress);
        return result;
    }

    // - - - PreComp layer: Controls_10_Search
    // - - PreComp layer: AnimIcon - Controls - Search - Hover to Tap
    // - Transforms for AnimIcon - Controls - Search - Hover to Tap Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Layer: Shape Layer 5
    CompositionContainerShape ContainerShape_2()
    {
        const auto result = _c.CreateContainerShape();
        result.CenterPoint({ -861.093994F, 518.093994F });
        result.Offset({ 879.375F, -504.125F });
        // ShapeGroup: Ellipse 1 Offset:<-861.094, 518.094>
        result.Shapes().Append(SpriteShape_3());
        StartProgressBoundAnimation(result, L"Scale.X", ScalarAnimation_1p2_to_1p45(), _rootProgress);
        StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_1p2_to_1p45, _rootProgress);
        return result;
    }

    // - - PreComp layer: Controls_10_Search
    // - PreComp layer: AnimIcon - Controls - Search - Hover to Tap
    // Transforms for AnimIcon - Controls - Search - Hover to Tap Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Layer: Shape Layer 7
    CompositionContainerShape ContainerShape_3()
    {
        const auto result = _c.CreateContainerShape();
        result.Scale({ 0.0F, 0.0F });
        result.Shapes().Append(ContainerShape_4());
        StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_1(), _rootProgress);
        return result;
    }

    // - - - PreComp layer: Controls_10_Search
    // - - PreComp layer: AnimIcon - Controls - Search - Hover to Tap
    // - Transforms for AnimIcon - Controls - Search - Hover to Tap Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Layer: Shape Layer 7
    CompositionContainerShape ContainerShape_4()
    {
        const auto result = _c.CreateContainerShape();
        result.CenterPoint({ -861.093994F, 518.093994F });
        result.Offset({ 879.375F, -504.125F });
        // ShapeGroup: Ellipse 1 Offset:<-861.094, 518.094>
        result.Shapes().Append(SpriteShape_4());
        StartProgressBoundAnimation(result, L"Scale.X", ScalarAnimation_0p85_to_1p451(), _rootProgress);
        StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_0p85_to_1p451, _rootProgress);
        return result;
    }

    // - - PreComp layer: Controls_10_Search
    // - PreComp layer: AnimIcon - Controls - Search - Hover
    // Transforms for AnimIcon - Controls - Search - Hover Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Layer: Shape Layer 4
    CompositionContainerShape ContainerShape_5()
    {
        const auto result = _c.CreateContainerShape();
        result.CenterPoint({ -861.093994F, 518.093994F });
        result.Offset({ 879.375F, -504.125F });
        // ShapeGroup: Ellipse 1 Offset:<-861.094, 518.094>
        result.Shapes().Append(SpriteShape_6());
        StartProgressBoundAnimation(result, L"Scale.X", ScalarAnimation_1_to_1p2(), _rootProgress);
        StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_1_to_1p2, _rootProgress);
        return result;
    }

    // - - PreComp layer: Controls_10_Search
    // - PreComp layer: AnimIcon - Controls - Search - Hover
    // Transforms for AnimIcon - Controls - Search - Hover Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Layer: Shape Layer 4
    CompositionContainerShape ContainerShape_6()
    {
        const auto result = _c.CreateContainerShape();
        result.CenterPoint({ -861.093994F, 518.093994F });
        result.Offset({ 879.375F, -504.125F });
        // ShapeGroup: Ellipse 1 Offset:<-861.094, 518.094>
        result.Shapes().Append(SpriteShape_7());
        StartProgressBoundAnimation(result, L"Scale.X", ScalarAnimation_0_to_0p85(), _rootProgress);
        StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_0_to_0p85, _rootProgress);
        return result;
    }

    // Ellipse Path 1.EllipseGeometry
    CompositionEllipseGeometry Ellipse_4p907()
    {
        const auto result = _ellipse_4p907 = _c.CreateEllipseGeometry();
        result.Radius({ 4.90649986F, 4.90649986F });
        return result;
    }

    CompositionPath Path_0()
    {
        const auto result = _path_0 = CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_0()));
        return result;
    }

    CompositionPath Path_1()
    {
        const auto result = _path_1 = CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_1()));
        return result;
    }

    CompositionPath Path_2()
    {
        const auto result = _path_2 = CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_2()));
        return result;
    }

    // - - - PreComp layer: Controls_10_Search
    // - - PreComp layer: AnimIcon - Controls - Search - Off
    // - Transforms for AnimIcon - Controls - Search - Off Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Layer: Shape Layer 4
    CompositionPathGeometry PathGeometry_0()
    {
        const auto result = _c.CreatePathGeometry();
        StartProgressBoundAnimation(result, L"Path", PathKeyFrameAnimation_0(), RootProgress());
        return result;
    }

    // - - - - PreComp layer: Controls_10_Search
    // - - - PreComp layer: AnimIcon - Controls - Search - Hover to Tap
    // - - Transforms for AnimIcon - Controls - Search - Hover to Tap Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // - Layer: Shape Layer 5
    // ShapeGroup: Shape 1
    CompositionPathGeometry PathGeometry_1()
    {
        const auto result = _c.CreatePathGeometry();
        StartProgressBoundAnimation(result, L"Path", PathKeyFrameAnimation_1(), _rootProgress);
        return result;
    }

    // - - - PreComp layer: Controls_10_Search
    // - - PreComp layer: AnimIcon - Controls - Search - Hover
    // - Transforms for AnimIcon - Controls - Search - Hover Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Layer: Shape Layer 4
    CompositionPathGeometry PathGeometry_2()
    {
        const auto result = _c.CreatePathGeometry();
        StartProgressBoundAnimation(result, L"Path", PathKeyFrameAnimation_2(), _rootProgress);
        return result;
    }

    // - - PreComp layer: Controls_10_Search
    // - PreComp layer: AnimIcon - Controls - Search - Off
    // Transforms for AnimIcon - Controls - Search - Off Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Path 1
    CompositionSpriteShape SpriteShape_0()
    {
        const auto result = _c.CreateSpriteShape(PathGeometry_0());
        result.StrokeBrush(ThemeColor_Foreground());
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeMiterLimit(2.0F);
        StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_0(), _rootProgress);
        return result;
    }

    // - - - PreComp layer: Controls_10_Search
    // - - PreComp layer: AnimIcon - Controls - Search - Off
    // - Transforms for AnimIcon - Controls - Search - Off Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Layer: Shape Layer 4
    // Ellipse Path 1
    CompositionSpriteShape SpriteShape_1()
    {
        // Offset:<-861.094, 518.094>
        const auto result = CreateSpriteShape(Ellipse_4p907(), { 1.0F, 0.0F, 0.0F, 1.0F, -861.093994F, 518.093994F });
        result.StrokeBrush(ColorBrush_Black());
        return result;
    }

    // - - - PreComp layer: Controls_10_Search
    // - - PreComp layer: AnimIcon - Controls - Search - Hover to Tap
    // - Transforms for AnimIcon - Controls - Search - Hover to Tap Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Layer: Shape Layer 5
    // Path 1
    CompositionSpriteShape SpriteShape_2()
    {
        const auto result = _c.CreateSpriteShape(PathGeometry_1());
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeMiterLimit(2.0F);
        StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_1(), _rootProgress);
        return result;
    }

    // - - - - PreComp layer: Controls_10_Search
    // - - - PreComp layer: AnimIcon - Controls - Search - Hover to Tap
    // - - Transforms for AnimIcon - Controls - Search - Hover to Tap Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // - Layer: Shape Layer 5
    // Ellipse Path 1
    CompositionSpriteShape SpriteShape_3()
    {
        // Offset:<-861.094, 518.094>
        const auto result = CreateSpriteShape(_ellipse_4p907, { 1.0F, 0.0F, 0.0F, 1.0F, -861.093994F, 518.093994F });
        result.StrokeBrush(_colorBrush_Black);
        return result;
    }

    // - - - - PreComp layer: Controls_10_Search
    // - - - PreComp layer: AnimIcon - Controls - Search - Hover to Tap
    // - - Transforms for AnimIcon - Controls - Search - Hover to Tap Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // - Layer: Shape Layer 7
    // Ellipse Path 1
    CompositionSpriteShape SpriteShape_4()
    {
        // Offset:<-861.094, 518.094>
        const auto result = CreateSpriteShape(_ellipse_4p907, { 1.0F, 0.0F, 0.0F, 1.0F, -861.093994F, 518.093994F });
        result.StrokeBrush(_colorBrush_Black);
        return result;
    }

    // - - PreComp layer: Controls_10_Search
    // - PreComp layer: AnimIcon - Controls - Search - Hover
    // Transforms for AnimIcon - Controls - Search - Hover Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Path 1
    CompositionSpriteShape SpriteShape_5()
    {
        // Offset:<879.375, -504.12497>
        const auto result = CreateSpriteShape(PathGeometry_2(), { 1.0F, 0.0F, 0.0F, 1.0F, 879.375F, -504.124969F });
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeMiterLimit(2.0F);
        return result;
    }

    // - - - PreComp layer: Controls_10_Search
    // - - PreComp layer: AnimIcon - Controls - Search - Hover
    // - Transforms for AnimIcon - Controls - Search - Hover Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Layer: Shape Layer 4
    // Ellipse Path 1
    CompositionSpriteShape SpriteShape_6()
    {
        // Offset:<-861.094, 518.094>
        const auto result = CreateSpriteShape(_ellipse_4p907, { 1.0F, 0.0F, 0.0F, 1.0F, -861.093994F, 518.093994F });
        result.StrokeBrush(_colorBrush_Black);
        return result;
    }

    // - - - PreComp layer: Controls_10_Search
    // - - PreComp layer: AnimIcon - Controls - Search - Hover
    // - Transforms for AnimIcon - Controls - Search - Hover Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Layer: Shape Layer 4
    // Ellipse Path 1
    CompositionSpriteShape SpriteShape_7()
    {
        // Offset:<-861.094, 518.094>
        const auto result = CreateSpriteShape(_ellipse_4p907, { 1.0F, 0.0F, 0.0F, 1.0F, -861.093994F, 518.093994F });
        result.StrokeBrush(_colorBrush_Black);
        return result;
    }

    // Transforms for Controls_10_Search Scale(4.75,4.75,0), Offset(140,140,0)
    ContainerVisual ContainerVisual_0()
    {
        const auto result = _c.CreateContainerVisual();
        result.Clip(InsetClip_0());
        result.Size({ 70.0F, 70.0F });
        // Offset:<8.75, 8.75>, Scale:<4.75, 4.75>
        result.TransformMatrix({ 4.75F, 0.0F, 0.0F, 0.0F, 0.0F, 4.75F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 8.75F, 8.75F, 0.0F, 1.0F });
        const auto children = result.Children();
        // PreComp layer: AnimIcon - Controls - Search - Off
        children.InsertAtTop(ContainerVisual_1());
        // PreComp layer: AnimIcon - Controls - Search - Hover to Tap
        children.InsertAtTop(ContainerVisual_2());
        // PreComp layer: AnimIcon - Controls - Search - Hover
        children.InsertAtTop(ContainerVisual_3());
        return result;
    }

    // PreComp layer: Controls_10_Search
    // PreComp layer: AnimIcon - Controls - Search - Off
    ContainerVisual ContainerVisual_1()
    {
        const auto result = _c.CreateContainerVisual();
        result.Clip(_insetClip_0);
        result.IsVisible(false);
        result.Size({ 32.0F, 32.0F });
        // Offset:<-22.75, -19.25>, Scale:<3.5, 3.5>
        result.TransformMatrix({ 3.5F, 0.0F, 0.0F, 0.0F, 0.0F, 3.5F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, -22.75F, -19.25F, 0.0F, 1.0F });
        // Transforms for AnimIcon - Controls - Search - Off Scale(3.5,3.5,0),
        // Offset(17.25,20.75,0)
        result.Children().InsertAtTop(ShapeVisual_0());
        StartProgressBoundAnimation(result, L"IsVisible", IsVisibleBooleanAnimation_0(), _rootProgress);
        return result;
    }

    // PreComp layer: Controls_10_Search
    // PreComp layer: AnimIcon - Controls - Search - Hover to Tap
    ContainerVisual ContainerVisual_2()
    {
        const auto result = _c.CreateContainerVisual();
        result.Clip(_insetClip_0);
        result.IsVisible(false);
        result.Size({ 32.0F, 32.0F });
        // Offset:<-22.75, -19.25>, Scale:<3.5, 3.5>
        result.TransformMatrix({ 3.5F, 0.0F, 0.0F, 0.0F, 0.0F, 3.5F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, -22.75F, -19.25F, 0.0F, 1.0F });
        // Transforms for AnimIcon - Controls - Search - Hover to Tap Scale(3.5,3.5,0),
        // Offset(17.25,20.75,0)
        result.Children().InsertAtTop(ShapeVisual_1());
        StartProgressBoundAnimation(result, L"IsVisible", IsVisibleBooleanAnimation_1(), _rootProgress);
        return result;
    }

    // PreComp layer: Controls_10_Search
    // PreComp layer: AnimIcon - Controls - Search - Hover
    ContainerVisual ContainerVisual_3()
    {
        const auto result = _c.CreateContainerVisual();
        result.Clip(_insetClip_0);
        result.Size({ 32.0F, 32.0F });
        // Offset:<-22.75, -19.25>, Scale:<3.5, 3.5>
        result.TransformMatrix({ 3.5F, 0.0F, 0.0F, 0.0F, 0.0F, 3.5F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, -22.75F, -19.25F, 0.0F, 1.0F });
        // Transforms for AnimIcon - Controls - Search - Hover Scale(3.5,3.5,0),
        // Offset(17.25,20.75,0)
        result.Children().InsertAtTop(ShapeVisual_2());
        StartProgressBoundAnimation(result, L"IsVisible", IsVisibleBooleanAnimation_2(), _rootProgress);
        return result;
    }

    // The root of the composition.
    ContainerVisual Root()
    {
        const auto result = _root = _c.CreateContainerVisual();
        const auto propertySet = result.Properties();
        propertySet.InsertScalar(L"Progress", 0.0F);
        propertySet.InsertScalar(L"t0", 0.0F);
        const auto children = result.Children();
        // Transforms for Light Gray Solid 1 Scale(1.16667,1.16667,0), Offset(25,25,0)
        children.InsertAtTop(SpriteVisual_0());
        // PreComp layer: Controls_10_Search
        children.InsertAtTop(ContainerVisual_0());
        StartProgressBoundAnimation(propertySet, L"t0", t0ScalarAnimation_0_to_1(), _rootProgress);
        return result;
    }

    CubicBezierEasingFunction CubicBezierEasingFunction_0()
    {
        return _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.166999996F }, { 0.0F, 1.0F });
    }

    CubicBezierEasingFunction CubicBezierEasingFunction_1()
    {
        return _cubicBezierEasingFunction_1 = _c.CreateCubicBezierEasingFunction({ 0.850000024F, 0.0F }, { 0.75F, 1.0F });
    }

    ExpressionAnimation RootProgress()
    {
        const auto result = _rootProgress = _c.CreateExpressionAnimation(L"_.Progress");
        result.SetReferenceParameter(L"_", _root);
        return result;
    }

    InsetClip InsetClip_0()
    {
        const auto result = _insetClip_0 = _c.CreateInsetClip();
        return result;
    }

    // - - - - PreComp layer: Controls_10_Search
    // - - - PreComp layer: AnimIcon - Controls - Search - Off
    // - - Transforms for AnimIcon - Controls - Search - Off Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // - Layer: Shape Layer 4
    // Path
    PathKeyFrameAnimation PathKeyFrameAnimation_0()
    {
        const auto result = CreatePathKeyFrameAnimation(0.0F, Path_0(), StepThenHoldEasingFunction());
        result.InsertKeyFrame(0.277777791F, _path_0, HoldThenStepEasingFunction());
        result.InsertKeyFrame(0.333333343F, Path_1(), CubicBezierEasingFunction_0());
        return result;
    }

    // - - - - - PreComp layer: Controls_10_Search
    // - - - - PreComp layer: AnimIcon - Controls - Search - Hover to Tap
    // - - - Transforms for AnimIcon - Controls - Search - Hover to Tap Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // - - Layer: Shape Layer 5
    // - ShapeGroup: Shape 1
    // Path
    PathKeyFrameAnimation PathKeyFrameAnimation_1()
    {
        const auto result = CreatePathKeyFrameAnimation(0.0F, Path_2(), _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.111111112F, _path_2, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.166666672F, _path_0, CubicBezierEasingFunction_1());
        return result;
    }

    // - - - - PreComp layer: Controls_10_Search
    // - - - PreComp layer: AnimIcon - Controls - Search - Hover
    // - - Transforms for AnimIcon - Controls - Search - Hover Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // - Layer: Shape Layer 4
    // Path
    PathKeyFrameAnimation PathKeyFrameAnimation_2()
    {
        const auto result = CreatePathKeyFrameAnimation(0.0F, _path_1, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.105555557F, CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_3())), _cubicBezierEasingFunction_0);
        return result;
    }

    // Scale
    ScalarKeyFrameAnimation ScalarAnimation_0_to_0p85()
    {
        const auto result = _scalarAnimation_0_to_0p85 = CreateScalarKeyFrameAnimation(0.0F, 0.0F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.105555557F, 0.850000024F, _cubicBezierEasingFunction_0);
        return result;
    }

    // Scale
    ScalarKeyFrameAnimation ScalarAnimation_0p85_to_1p451()
    {
        const auto result = _scalarAnimation_0p85_to_1p451 = CreateScalarKeyFrameAnimation(0.0F, 0.850000024F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.111111112F, 0.850000024F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.166666672F, 1.45099998F, _cubicBezierEasingFunction_1);
        return result;
    }

    // Scale
    ScalarKeyFrameAnimation ScalarAnimation_1_to_1p2()
    {
        const auto result = _scalarAnimation_1_to_1p2 = CreateScalarKeyFrameAnimation(0.0F, 1.0F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.105555557F, 1.20000005F, _cubicBezierEasingFunction_0);
        return result;
    }

    // Scale
    ScalarKeyFrameAnimation ScalarAnimation_1p2_to_1p45()
    {
        const auto result = _scalarAnimation_1p2_to_1p45 = CreateScalarKeyFrameAnimation(0.0F, 1.20000005F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.111111112F, 1.20000005F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.166666672F, 1.5F, _cubicBezierEasingFunction_1);
        result.InsertKeyFrame(0.272222221F, 1.45000005F, _c.CreateCubicBezierEasingFunction({ 0.349999994F, 0.0F }, { 0.0F, 1.0F }));
        return result;
    }

    // Scale
    ScalarKeyFrameAnimation ScalarAnimation_1p35_to_1()
    {
        const auto result = _scalarAnimation_1p35_to_1 = CreateScalarKeyFrameAnimation(0.0F, 1.35000002F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.277777791F, 1.35000002F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.333333343F, 1.0F, _cubicBezierEasingFunction_0);
        return result;
    }

    ScalarKeyFrameAnimation t0ScalarAnimation_0_to_1()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.277777821F, 0.0F, _stepThenHoldEasingFunction);
        result.SetReferenceParameter(L"_", _root);
        result.InsertKeyFrame(0.333333313F, 1.0F, _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.165999994F }, { 0.0F, 1.0F }));
        return result;
    }

    // - PreComp layer: Controls_10_Search
    // PreComp layer: AnimIcon - Controls - Search - Off
    // Layer aggregator
    ShapeVisual ShapeVisual_0()
    {
        const auto result = _c.CreateShapeVisual();
        result.Size({ 32.0F, 32.0F });
        const auto shapes = result.Shapes();
        // Layer: Shape Layer 4
        shapes.Append(SpriteShape_0());
        // Layer: Shape Layer 4
        shapes.Append(ContainerShape_0());
        return result;
    }

    // - PreComp layer: Controls_10_Search
    // PreComp layer: AnimIcon - Controls - Search - Hover to Tap
    // Layer aggregator
    ShapeVisual ShapeVisual_1()
    {
        const auto result = _c.CreateShapeVisual();
        result.Size({ 32.0F, 32.0F });
        const auto shapes = result.Shapes();
        // Layer: Shape Layer 5
        shapes.Append(ContainerShape_1());
        // Layer: Shape Layer 7
        shapes.Append(ContainerShape_3());
        return result;
    }

    // - PreComp layer: Controls_10_Search
    // PreComp layer: AnimIcon - Controls - Search - Hover
    // Layer aggregator
    ShapeVisual ShapeVisual_2()
    {
        const auto result = _c.CreateShapeVisual();
        result.Size({ 32.0F, 32.0F });
        const auto shapes = result.Shapes();
        // Layer: Shape Layer 4
        shapes.Append(SpriteShape_5());
        // Layer: Shape Layer 4
        shapes.Append(ContainerShape_5());
        // Layer: Shape Layer 4
        shapes.Append(ContainerShape_6());
        return result;
    }

    // SolidLayerRectangle
    SpriteVisual SpriteVisual_0()
    {
        const auto result = _c.CreateSpriteVisual();
        result.Size({ 300.0F, 300.0F });
        // Offset:<-0.0004940033, -0.0004940033>, Scale:<1.16667, 1.16667>
        result.TransformMatrix({ 1.16666996F, 0.0F, 0.0F, 0.0F, 0.0F, 1.16666996F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, -0.000494003296F, -0.000494003296F, 0.0F, 1.0F });
        result.Brush(ColorBrush_AlmostLightGray_FFCCCCCC());
        return result;
    }

    StepEasingFunction HoldThenStepEasingFunction()
    {
        const auto result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
        result.IsFinalStepSingleFrame(true);
        return result;
    }

    StepEasingFunction StepThenHoldEasingFunction()
    {
        const auto result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
        result.IsInitialStepSingleFrame(true);
        return result;
    }

    // - - - PreComp layer: Controls_10_Search
    // - - PreComp layer: AnimIcon - Controls - Search - Off
    // - Transforms for AnimIcon - Controls - Search - Off Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Layer: Shape Layer 4
    // Offset
    Vector2KeyFrameAnimation OffsetVector2Animation_0()
    {
        const auto result = CreateVector2KeyFrameAnimation(0.0F, { 879.375F, -504.125F }, _stepThenHoldEasingFunction);
        result.SetReferenceParameter(L"_", _root);
        result.InsertKeyFrame(0.277777791F, { 879.375F, -504.125F }, _holdThenStepEasingFunction);
        result.InsertExpressionKeyFrame(0.333333313F, L"(Pow(1-_.t0,3)*Vector2(879.375,-504.125))+(3*Square(1-_.t0)*_.t0*Vector2(879.375,-504.125))+(3*(1-_.t0)*Square(_.t0)*Vector2(879.305,-504.055))+(Pow(_.t0,3)*Vector2(879.375,-504.125))", _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.333333343F, { 879.375F, -504.125F }, _stepThenHoldEasingFunction);
        return result;
    }

    // - - - - PreComp layer: Controls_10_Search
    // - - - PreComp layer: AnimIcon - Controls - Search - Hover to Tap
    // - - Transforms for AnimIcon - Controls - Search - Hover to Tap Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // - Layer: Shape Layer 5
    // ShapeGroup: Shape 1
    // Offset
    Vector2KeyFrameAnimation OffsetVector2Animation_1()
    {
        const auto result = CreateVector2KeyFrameAnimation(0.0F, { 879.375F, -504.125F }, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.111111112F, { 879.375F, -504.125F }, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.166666672F, { 878.75F, -503.5F }, _c.CreateCubicBezierEasingFunction({ 0.850000024F, 0.0F }, { 1.0F, 1.0F }));
        return result;
    }

    // - - - PreComp layer: Controls_10_Search
    // - - PreComp layer: AnimIcon - Controls - Search - Hover to Tap
    // - Transforms for AnimIcon - Controls - Search - Hover to Tap Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Layer: Shape Layer 5
    Vector2KeyFrameAnimation ShapeVisibilityAnimation_0()
    {
        const auto result = CreateVector2KeyFrameAnimation(0.111111112F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.277777791F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
        return result;
    }

    // - - - PreComp layer: Controls_10_Search
    // - - PreComp layer: AnimIcon - Controls - Search - Hover to Tap
    // - Transforms for AnimIcon - Controls - Search - Hover to Tap Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Layer: Shape Layer 7
    Vector2KeyFrameAnimation ShapeVisibilityAnimation_1()
    {
        const auto result = CreateVector2KeyFrameAnimation(0.111111112F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.166666672F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
        return result;
    }

    static IGeometrySource2D CanvasGeometryToIGeometrySource2D(winrt::com_ptr<CanvasGeometry> geo)
    {
        return geo.as<IGeometrySource2D>();
    }

public:
    Controls_10_Search_AnimatedVisual_UAPv11(
        Compositor compositor,
        CompositionPropertySet themeProperties)
        : _c{compositor}
        , _themeProperties{themeProperties}
        , _reusableExpressionAnimation(compositor.CreateExpressionAnimation())
    {
        winrt::check_hresult(D2D1CreateFactory(D2D1_FACTORY_TYPE_SINGLE_THREADED, _d2dFactory.put()));
        const auto _ = Root();
    }

    void Close()
    {
        if (_root)
        {
            _root.Close();
        }
    }

    TimeSpan Duration() const
    {
        return TimeSpan{ c_durationTicks };
    }

    Visual RootVisual() const
    {
        return _root;
    }

    winrt::float2 Size() const
    {
        return { 350.0F, 350.0F };
    }

    static bool IsRuntimeCompatible()
    {
        return winrt::Windows::Foundation::Metadata::ApiInformation::IsApiContractPresent(L"Windows.Foundation.UniversalApiContract", 11);
    }
};

class Controls_10_Search_AnimatedVisual_UAPv7 : public winrt::implements<Controls_10_Search_AnimatedVisual_UAPv7,
        winrt::Microsoft::UI::Xaml::Controls::IAnimatedVisual,
        IClosable>
{
    winrt::com_ptr<ID2D1Factory> _d2dFactory{ nullptr };
    static constexpr int64_t c_durationTicks{ 30000000L };
    Compositor const _c{ nullptr };
    ExpressionAnimation const _reusableExpressionAnimation{ nullptr };
    CompositionPropertySet const _themeProperties{ nullptr };
    CompositionColorBrush _colorBrush_Black{ nullptr };
    CompositionColorBrush _themeColor_Foreground{ nullptr };
    CompositionEllipseGeometry _ellipse_4p907{ nullptr };
    ContainerVisual _root{ nullptr };
    CubicBezierEasingFunction _cubicBezierEasingFunction_0{ nullptr };
    CubicBezierEasingFunction _cubicBezierEasingFunction_1{ nullptr };
    ExpressionAnimation _rootProgress{ nullptr };
    InsetClip _insetClip_0{ nullptr };
    ScalarKeyFrameAnimation _scalarAnimation_0_to_0p85{ nullptr };
    ScalarKeyFrameAnimation _scalarAnimation_0p85_to_1p451{ nullptr };
    ScalarKeyFrameAnimation _scalarAnimation_1_to_1p2{ nullptr };
    ScalarKeyFrameAnimation _scalarAnimation_1p2_to_1p45{ nullptr };
    ScalarKeyFrameAnimation _scalarAnimation_1p35_to_1{ nullptr };
    StepEasingFunction _holdThenStepEasingFunction{ nullptr };
    StepEasingFunction _stepThenHoldEasingFunction{ nullptr };

    static void StartProgressBoundAnimation(
        CompositionObject target,
        winrt::hstring animatedPropertyName,
        CompositionAnimation animation,
        ExpressionAnimation controllerProgressExpression)
    {
        target.StartAnimation(animatedPropertyName, animation);
        const auto controller = target.TryGetAnimationController(animatedPropertyName);
        controller.Pause();
        controller.StartAnimation(L"Progress", controllerProgressExpression);
    }

    void BindProperty(
        CompositionObject target,
        winrt::hstring animatedPropertyName,
        winrt::hstring expression,
        winrt::hstring referenceParameterName,
        CompositionObject referencedObject)
    {
        _reusableExpressionAnimation.ClearAllParameters();
        _reusableExpressionAnimation.Expression(expression);
        _reusableExpressionAnimation.SetReferenceParameter(referenceParameterName, referencedObject);
        target.StartAnimation(animatedPropertyName, _reusableExpressionAnimation);
    }

    BooleanKeyFrameAnimation CreateBooleanKeyFrameAnimation(float initialProgress, bool initialValue)
    {
        const auto result = _c.CreateBooleanKeyFrameAnimation();
        result.Duration(TimeSpan{ c_durationTicks });
        result.InsertKeyFrame(initialProgress, initialValue);
        return result;
    }

    ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
    {
        const auto result = _c.CreateScalarKeyFrameAnimation();
        result.Duration(TimeSpan{ c_durationTicks });
        result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
        return result;
    }

    Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, winrt::float2 initialValue, CompositionEasingFunction initialEasingFunction)
    {
        const auto result = _c.CreateVector2KeyFrameAnimation();
        result.Duration(TimeSpan{ c_durationTicks });
        result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
        return result;
    }

    CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, winrt::float3x2 transformMatrix)
    {
        const auto result = _c.CreateSpriteShape(geometry);
        result.TransformMatrix(transformMatrix);
        return result;
    }

    // - PreComp layer: Controls_10_Search
    // PreComp layer: AnimIcon - Controls - Search - Off
    BooleanKeyFrameAnimation IsVisibleBooleanAnimation_0()
    {
        const auto result = CreateBooleanKeyFrameAnimation(0.277777791F, true);
        result.InsertKeyFrame(0.333333343F, false);
        return result;
    }

    // - PreComp layer: Controls_10_Search
    // PreComp layer: AnimIcon - Controls - Search - Hover to Tap
    BooleanKeyFrameAnimation IsVisibleBooleanAnimation_1()
    {
        const auto result = CreateBooleanKeyFrameAnimation(0.111111112F, true);
        result.InsertKeyFrame(0.277777791F, false);
        return result;
    }

    // - PreComp layer: Controls_10_Search
    // PreComp layer: AnimIcon - Controls - Search - Hover
    BooleanKeyFrameAnimation IsVisibleBooleanAnimation_2()
    {
        const auto result = CreateBooleanKeyFrameAnimation(0.111111112F, false);
        return result;
    }

    // - - - - - PreComp layer: Controls_10_Search
    // - - - - PreComp layer: AnimIcon - Controls - Search - Off
    // - - - Transforms for AnimIcon - Controls - Search - Off Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // - - Layer: Shape Layer 4
    winrt::com_ptr<CanvasGeometry> Geometry_0()
    {
        winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
        winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
        winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
        winrt::check_hresult(path->Open(sink.put()));
        sink->BeginFigure({ -866.484009F, 522.859009F }, D2D1_FIGURE_BEGIN_FILLED);
        sink->AddLine({ -870.22699F, 526.60199F });
        sink->EndFigure(D2D1_FIGURE_END_OPEN);
        winrt::check_hresult(sink->Close());
        auto result = winrt::make_self<CanvasGeometry>(path);
        return result;
    }

    // - - - - - - PreComp layer: Controls_10_Search
    // - - - - - PreComp layer: AnimIcon - Controls - Search - Hover to Tap
    // - - - - Transforms for AnimIcon - Controls - Search - Hover to Tap
    // Scale(3.5,3.5,0), Offset(17.25,20.75,0)
    // - - - Layer: Shape Layer 5
    // - - ShapeGroup: Shape 1
    winrt::com_ptr<CanvasGeometry> Geometry_1()
    {
        winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
        winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
        winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
        winrt::check_hresult(path->Open(sink.put()));
        sink->BeginFigure({ -865.515991F, 521.890991F }, D2D1_FIGURE_BEGIN_FILLED);
        sink->AddLine({ -870.22699F, 526.60199F });
        sink->EndFigure(D2D1_FIGURE_END_OPEN);
        winrt::check_hresult(sink->Close());
        auto result = winrt::make_self<CanvasGeometry>(path);
        return result;
    }

    // - - - - - PreComp layer: Controls_10_Search
    // - - - - PreComp layer: AnimIcon - Controls - Search - Hover
    // - - - Transforms for AnimIcon - Controls - Search - Hover Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // - - Layer: Shape Layer 4
    winrt::com_ptr<CanvasGeometry> Geometry_2()
    {
        winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
        winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
        winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
        winrt::check_hresult(path->Open(sink.put()));
        sink->BeginFigure({ -865.25F, 521.625F }, D2D1_FIGURE_BEGIN_FILLED);
        sink->AddLine({ -870.22699F, 526.60199F });
        sink->EndFigure(D2D1_FIGURE_END_OPEN);
        winrt::check_hresult(sink->Close());
        auto result = winrt::make_self<CanvasGeometry>(path);
        return result;
    }

    // Transforms for Light Gray Solid 1 Scale(1.16667,1.16667,0), Offset(25,25,0)
    CompositionColorBrush ColorBrush_AlmostLightGray_FFCCCCCC()
    {
        return _c.CreateColorBrush({ 0xFF, 0xCC, 0xCC, 0xCC });
    }

    CompositionColorBrush ColorBrush_Black()
    {
        return _colorBrush_Black = _c.CreateColorBrush({ 0xFF, 0x00, 0x00, 0x00 });
    }

    // Color bound to theme property value: Foreground
    CompositionColorBrush ThemeColor_Foreground()
    {
        const auto result = _themeColor_Foreground = _c.CreateColorBrush();
        BindProperty(result, L"Color", L"ColorRGB(_theme.Foreground.W*1,_theme.Foreground.X,_theme.Foreground.Y,_theme.Foreground.Z)", L"_theme", _themeProperties);
        return result;
    }

    // - - PreComp layer: Controls_10_Search
    // - PreComp layer: AnimIcon - Controls - Search - Off
    // Transforms for AnimIcon - Controls - Search - Off Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Layer: Shape Layer 4
    CompositionContainerShape ContainerShape_0()
    {
        const auto result = _c.CreateContainerShape();
        result.CenterPoint({ -861.093994F, 518.093994F });
        result.Offset({ 879.375F, -504.125F });
        // ShapeGroup: Ellipse 1 Offset:<-861.094, 518.094>
        result.Shapes().Append(SpriteShape_1());
        StartProgressBoundAnimation(result, L"Scale.X", ScalarAnimation_1p35_to_1(), _rootProgress);
        StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_1p35_to_1, _rootProgress);
        return result;
    }

    // - - PreComp layer: Controls_10_Search
    // - PreComp layer: AnimIcon - Controls - Search - Hover to Tap
    // Transforms for AnimIcon - Controls - Search - Hover to Tap Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Layer: Shape Layer 5
    CompositionContainerShape ContainerShape_1()
    {
        const auto result = _c.CreateContainerShape();
        result.Scale({ 0.0F, 0.0F });
        const auto shapes = result.Shapes();
        // ShapeGroup: Shape 1
        shapes.Append(SpriteShape_2());
        shapes.Append(ContainerShape_2());
        StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_0(), _rootProgress);
        return result;
    }

    // - - - PreComp layer: Controls_10_Search
    // - - PreComp layer: AnimIcon - Controls - Search - Hover to Tap
    // - Transforms for AnimIcon - Controls - Search - Hover to Tap Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Layer: Shape Layer 5
    CompositionContainerShape ContainerShape_2()
    {
        const auto result = _c.CreateContainerShape();
        result.CenterPoint({ -861.093994F, 518.093994F });
        result.Offset({ 879.375F, -504.125F });
        // ShapeGroup: Ellipse 1 Offset:<-861.094, 518.094>
        result.Shapes().Append(SpriteShape_3());
        StartProgressBoundAnimation(result, L"Scale.X", ScalarAnimation_1p2_to_1p45(), _rootProgress);
        StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_1p2_to_1p45, _rootProgress);
        return result;
    }

    // - - PreComp layer: Controls_10_Search
    // - PreComp layer: AnimIcon - Controls - Search - Hover to Tap
    // Transforms for AnimIcon - Controls - Search - Hover to Tap Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Layer: Shape Layer 7
    CompositionContainerShape ContainerShape_3()
    {
        const auto result = _c.CreateContainerShape();
        result.Scale({ 0.0F, 0.0F });
        result.Shapes().Append(ContainerShape_4());
        StartProgressBoundAnimation(result, L"Scale", ShapeVisibilityAnimation_1(), _rootProgress);
        return result;
    }

    // - - - PreComp layer: Controls_10_Search
    // - - PreComp layer: AnimIcon - Controls - Search - Hover to Tap
    // - Transforms for AnimIcon - Controls - Search - Hover to Tap Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Layer: Shape Layer 7
    CompositionContainerShape ContainerShape_4()
    {
        const auto result = _c.CreateContainerShape();
        result.CenterPoint({ -861.093994F, 518.093994F });
        result.Offset({ 879.375F, -504.125F });
        // ShapeGroup: Ellipse 1 Offset:<-861.094, 518.094>
        result.Shapes().Append(SpriteShape_4());
        StartProgressBoundAnimation(result, L"Scale.X", ScalarAnimation_0p85_to_1p451(), _rootProgress);
        StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_0p85_to_1p451, _rootProgress);
        return result;
    }

    // - - PreComp layer: Controls_10_Search
    // - PreComp layer: AnimIcon - Controls - Search - Hover
    // Transforms for AnimIcon - Controls - Search - Hover Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Layer: Shape Layer 4
    CompositionContainerShape ContainerShape_5()
    {
        const auto result = _c.CreateContainerShape();
        result.CenterPoint({ -861.093994F, 518.093994F });
        result.Offset({ 879.375F, -504.125F });
        // ShapeGroup: Ellipse 1 Offset:<-861.094, 518.094>
        result.Shapes().Append(SpriteShape_6());
        StartProgressBoundAnimation(result, L"Scale.X", ScalarAnimation_1_to_1p2(), _rootProgress);
        StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_1_to_1p2, _rootProgress);
        return result;
    }

    // - - PreComp layer: Controls_10_Search
    // - PreComp layer: AnimIcon - Controls - Search - Hover
    // Transforms for AnimIcon - Controls - Search - Hover Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Layer: Shape Layer 4
    CompositionContainerShape ContainerShape_6()
    {
        const auto result = _c.CreateContainerShape();
        result.CenterPoint({ -861.093994F, 518.093994F });
        result.Offset({ 879.375F, -504.125F });
        // ShapeGroup: Ellipse 1 Offset:<-861.094, 518.094>
        result.Shapes().Append(SpriteShape_7());
        StartProgressBoundAnimation(result, L"Scale.X", ScalarAnimation_0_to_0p85(), _rootProgress);
        StartProgressBoundAnimation(result, L"Scale.Y", _scalarAnimation_0_to_0p85, _rootProgress);
        return result;
    }

    // Ellipse Path 1.EllipseGeometry
    CompositionEllipseGeometry Ellipse_4p907()
    {
        const auto result = _ellipse_4p907 = _c.CreateEllipseGeometry();
        result.Radius({ 4.90649986F, 4.90649986F });
        return result;
    }

    // - - - PreComp layer: Controls_10_Search
    // - - PreComp layer: AnimIcon - Controls - Search - Off
    // - Transforms for AnimIcon - Controls - Search - Off Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Layer: Shape Layer 4
    CompositionPathGeometry PathGeometry_0()
    {
        return _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_0())));
    }

    // - - - - PreComp layer: Controls_10_Search
    // - - - PreComp layer: AnimIcon - Controls - Search - Hover to Tap
    // - - Transforms for AnimIcon - Controls - Search - Hover to Tap Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // - Layer: Shape Layer 5
    // ShapeGroup: Shape 1
    CompositionPathGeometry PathGeometry_1()
    {
        return _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_1())));
    }

    // - - - PreComp layer: Controls_10_Search
    // - - PreComp layer: AnimIcon - Controls - Search - Hover
    // - Transforms for AnimIcon - Controls - Search - Hover Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Layer: Shape Layer 4
    CompositionPathGeometry PathGeometry_2()
    {
        return _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_2())));
    }

    // - - PreComp layer: Controls_10_Search
    // - PreComp layer: AnimIcon - Controls - Search - Off
    // Transforms for AnimIcon - Controls - Search - Off Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Path 1
    CompositionSpriteShape SpriteShape_0()
    {
        const auto result = _c.CreateSpriteShape(PathGeometry_0());
        result.StrokeBrush(ThemeColor_Foreground());
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeMiterLimit(2.0F);
        StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_0(), RootProgress());
        return result;
    }

    // - - - PreComp layer: Controls_10_Search
    // - - PreComp layer: AnimIcon - Controls - Search - Off
    // - Transforms for AnimIcon - Controls - Search - Off Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Layer: Shape Layer 4
    // Ellipse Path 1
    CompositionSpriteShape SpriteShape_1()
    {
        // Offset:<-861.094, 518.094>
        const auto result = CreateSpriteShape(Ellipse_4p907(), { 1.0F, 0.0F, 0.0F, 1.0F, -861.093994F, 518.093994F });
        result.StrokeBrush(ColorBrush_Black());
        return result;
    }

    // - - - PreComp layer: Controls_10_Search
    // - - PreComp layer: AnimIcon - Controls - Search - Hover to Tap
    // - Transforms for AnimIcon - Controls - Search - Hover to Tap Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Layer: Shape Layer 5
    // Path 1
    CompositionSpriteShape SpriteShape_2()
    {
        const auto result = _c.CreateSpriteShape(PathGeometry_1());
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeMiterLimit(2.0F);
        StartProgressBoundAnimation(result, L"Offset", OffsetVector2Animation_1(), _rootProgress);
        return result;
    }

    // - - - - PreComp layer: Controls_10_Search
    // - - - PreComp layer: AnimIcon - Controls - Search - Hover to Tap
    // - - Transforms for AnimIcon - Controls - Search - Hover to Tap Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // - Layer: Shape Layer 5
    // Ellipse Path 1
    CompositionSpriteShape SpriteShape_3()
    {
        // Offset:<-861.094, 518.094>
        const auto result = CreateSpriteShape(_ellipse_4p907, { 1.0F, 0.0F, 0.0F, 1.0F, -861.093994F, 518.093994F });
        result.StrokeBrush(_colorBrush_Black);
        return result;
    }

    // - - - - PreComp layer: Controls_10_Search
    // - - - PreComp layer: AnimIcon - Controls - Search - Hover to Tap
    // - - Transforms for AnimIcon - Controls - Search - Hover to Tap Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // - Layer: Shape Layer 7
    // Ellipse Path 1
    CompositionSpriteShape SpriteShape_4()
    {
        // Offset:<-861.094, 518.094>
        const auto result = CreateSpriteShape(_ellipse_4p907, { 1.0F, 0.0F, 0.0F, 1.0F, -861.093994F, 518.093994F });
        result.StrokeBrush(_colorBrush_Black);
        return result;
    }

    // - - PreComp layer: Controls_10_Search
    // - PreComp layer: AnimIcon - Controls - Search - Hover
    // Transforms for AnimIcon - Controls - Search - Hover Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Path 1
    CompositionSpriteShape SpriteShape_5()
    {
        // Offset:<879.375, -504.12497>
        const auto result = CreateSpriteShape(PathGeometry_2(), { 1.0F, 0.0F, 0.0F, 1.0F, 879.375F, -504.124969F });
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeMiterLimit(2.0F);
        return result;
    }

    // - - - PreComp layer: Controls_10_Search
    // - - PreComp layer: AnimIcon - Controls - Search - Hover
    // - Transforms for AnimIcon - Controls - Search - Hover Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Layer: Shape Layer 4
    // Ellipse Path 1
    CompositionSpriteShape SpriteShape_6()
    {
        // Offset:<-861.094, 518.094>
        const auto result = CreateSpriteShape(_ellipse_4p907, { 1.0F, 0.0F, 0.0F, 1.0F, -861.093994F, 518.093994F });
        result.StrokeBrush(_colorBrush_Black);
        return result;
    }

    // - - - PreComp layer: Controls_10_Search
    // - - PreComp layer: AnimIcon - Controls - Search - Hover
    // - Transforms for AnimIcon - Controls - Search - Hover Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Layer: Shape Layer 4
    // Ellipse Path 1
    CompositionSpriteShape SpriteShape_7()
    {
        // Offset:<-861.094, 518.094>
        const auto result = CreateSpriteShape(_ellipse_4p907, { 1.0F, 0.0F, 0.0F, 1.0F, -861.093994F, 518.093994F });
        result.StrokeBrush(_colorBrush_Black);
        return result;
    }

    // Transforms for Controls_10_Search Scale(4.75,4.75,0), Offset(140,140,0)
    ContainerVisual ContainerVisual_0()
    {
        const auto result = _c.CreateContainerVisual();
        result.Clip(InsetClip_0());
        result.Size({ 70.0F, 70.0F });
        // Offset:<8.75, 8.75>, Scale:<4.75, 4.75>
        result.TransformMatrix({ 4.75F, 0.0F, 0.0F, 0.0F, 0.0F, 4.75F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 8.75F, 8.75F, 0.0F, 1.0F });
        const auto children = result.Children();
        // PreComp layer: AnimIcon - Controls - Search - Off
        children.InsertAtTop(ContainerVisual_1());
        // PreComp layer: AnimIcon - Controls - Search - Hover to Tap
        children.InsertAtTop(ContainerVisual_2());
        // PreComp layer: AnimIcon - Controls - Search - Hover
        children.InsertAtTop(ContainerVisual_3());
        return result;
    }

    // PreComp layer: Controls_10_Search
    // PreComp layer: AnimIcon - Controls - Search - Off
    ContainerVisual ContainerVisual_1()
    {
        const auto result = _c.CreateContainerVisual();
        result.Clip(_insetClip_0);
        result.IsVisible(false);
        result.Size({ 32.0F, 32.0F });
        // Offset:<-22.75, -19.25>, Scale:<3.5, 3.5>
        result.TransformMatrix({ 3.5F, 0.0F, 0.0F, 0.0F, 0.0F, 3.5F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, -22.75F, -19.25F, 0.0F, 1.0F });
        // Transforms for AnimIcon - Controls - Search - Off Scale(3.5,3.5,0),
        // Offset(17.25,20.75,0)
        result.Children().InsertAtTop(ShapeVisual_0());
        StartProgressBoundAnimation(result, L"IsVisible", IsVisibleBooleanAnimation_0(), _rootProgress);
        return result;
    }

    // PreComp layer: Controls_10_Search
    // PreComp layer: AnimIcon - Controls - Search - Hover to Tap
    ContainerVisual ContainerVisual_2()
    {
        const auto result = _c.CreateContainerVisual();
        result.Clip(_insetClip_0);
        result.IsVisible(false);
        result.Size({ 32.0F, 32.0F });
        // Offset:<-22.75, -19.25>, Scale:<3.5, 3.5>
        result.TransformMatrix({ 3.5F, 0.0F, 0.0F, 0.0F, 0.0F, 3.5F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, -22.75F, -19.25F, 0.0F, 1.0F });
        // Transforms for AnimIcon - Controls - Search - Hover to Tap Scale(3.5,3.5,0),
        // Offset(17.25,20.75,0)
        result.Children().InsertAtTop(ShapeVisual_1());
        StartProgressBoundAnimation(result, L"IsVisible", IsVisibleBooleanAnimation_1(), _rootProgress);
        return result;
    }

    // PreComp layer: Controls_10_Search
    // PreComp layer: AnimIcon - Controls - Search - Hover
    ContainerVisual ContainerVisual_3()
    {
        const auto result = _c.CreateContainerVisual();
        result.Clip(_insetClip_0);
        result.Size({ 32.0F, 32.0F });
        // Offset:<-22.75, -19.25>, Scale:<3.5, 3.5>
        result.TransformMatrix({ 3.5F, 0.0F, 0.0F, 0.0F, 0.0F, 3.5F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, -22.75F, -19.25F, 0.0F, 1.0F });
        // Transforms for AnimIcon - Controls - Search - Hover Scale(3.5,3.5,0),
        // Offset(17.25,20.75,0)
        result.Children().InsertAtTop(ShapeVisual_2());
        StartProgressBoundAnimation(result, L"IsVisible", IsVisibleBooleanAnimation_2(), _rootProgress);
        return result;
    }

    // The root of the composition.
    ContainerVisual Root()
    {
        const auto result = _root = _c.CreateContainerVisual();
        const auto propertySet = result.Properties();
        propertySet.InsertScalar(L"Progress", 0.0F);
        propertySet.InsertScalar(L"t0", 0.0F);
        const auto children = result.Children();
        // Transforms for Light Gray Solid 1 Scale(1.16667,1.16667,0), Offset(25,25,0)
        children.InsertAtTop(SpriteVisual_0());
        // PreComp layer: Controls_10_Search
        children.InsertAtTop(ContainerVisual_0());
        StartProgressBoundAnimation(propertySet, L"t0", t0ScalarAnimation_0_to_1(), _rootProgress);
        return result;
    }

    CubicBezierEasingFunction CubicBezierEasingFunction_0()
    {
        return _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.166999996F }, { 0.0F, 1.0F });
    }

    CubicBezierEasingFunction CubicBezierEasingFunction_1()
    {
        return _cubicBezierEasingFunction_1 = _c.CreateCubicBezierEasingFunction({ 0.850000024F, 0.0F }, { 0.75F, 1.0F });
    }

    ExpressionAnimation RootProgress()
    {
        const auto result = _rootProgress = _c.CreateExpressionAnimation(L"_.Progress");
        result.SetReferenceParameter(L"_", _root);
        return result;
    }

    InsetClip InsetClip_0()
    {
        const auto result = _insetClip_0 = _c.CreateInsetClip();
        return result;
    }

    // Scale
    ScalarKeyFrameAnimation ScalarAnimation_0_to_0p85()
    {
        const auto result = _scalarAnimation_0_to_0p85 = CreateScalarKeyFrameAnimation(0.0F, 0.0F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.105555557F, 0.850000024F, _cubicBezierEasingFunction_0);
        return result;
    }

    // Scale
    ScalarKeyFrameAnimation ScalarAnimation_0p85_to_1p451()
    {
        const auto result = _scalarAnimation_0p85_to_1p451 = CreateScalarKeyFrameAnimation(0.0F, 0.850000024F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.111111112F, 0.850000024F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.166666672F, 1.45099998F, _cubicBezierEasingFunction_1);
        return result;
    }

    // Scale
    ScalarKeyFrameAnimation ScalarAnimation_1_to_1p2()
    {
        const auto result = _scalarAnimation_1_to_1p2 = CreateScalarKeyFrameAnimation(0.0F, 1.0F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.105555557F, 1.20000005F, _cubicBezierEasingFunction_0);
        return result;
    }

    // Scale
    ScalarKeyFrameAnimation ScalarAnimation_1p2_to_1p45()
    {
        const auto result = _scalarAnimation_1p2_to_1p45 = CreateScalarKeyFrameAnimation(0.0F, 1.20000005F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.111111112F, 1.20000005F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.166666672F, 1.5F, CubicBezierEasingFunction_1());
        result.InsertKeyFrame(0.272222221F, 1.45000005F, _c.CreateCubicBezierEasingFunction({ 0.349999994F, 0.0F }, { 0.0F, 1.0F }));
        return result;
    }

    // Scale
    ScalarKeyFrameAnimation ScalarAnimation_1p35_to_1()
    {
        const auto result = _scalarAnimation_1p35_to_1 = CreateScalarKeyFrameAnimation(0.0F, 1.35000002F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.277777791F, 1.35000002F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.333333343F, 1.0F, CubicBezierEasingFunction_0());
        return result;
    }

    ScalarKeyFrameAnimation t0ScalarAnimation_0_to_1()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.277777821F, 0.0F, _stepThenHoldEasingFunction);
        result.SetReferenceParameter(L"_", _root);
        result.InsertKeyFrame(0.333333313F, 1.0F, _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.165999994F }, { 0.0F, 1.0F }));
        return result;
    }

    // - PreComp layer: Controls_10_Search
    // PreComp layer: AnimIcon - Controls - Search - Off
    // Layer aggregator
    ShapeVisual ShapeVisual_0()
    {
        const auto result = _c.CreateShapeVisual();
        result.Size({ 32.0F, 32.0F });
        const auto shapes = result.Shapes();
        // Layer: Shape Layer 4
        shapes.Append(SpriteShape_0());
        // Layer: Shape Layer 4
        shapes.Append(ContainerShape_0());
        return result;
    }

    // - PreComp layer: Controls_10_Search
    // PreComp layer: AnimIcon - Controls - Search - Hover to Tap
    // Layer aggregator
    ShapeVisual ShapeVisual_1()
    {
        const auto result = _c.CreateShapeVisual();
        result.Size({ 32.0F, 32.0F });
        const auto shapes = result.Shapes();
        // Layer: Shape Layer 5
        shapes.Append(ContainerShape_1());
        // Layer: Shape Layer 7
        shapes.Append(ContainerShape_3());
        return result;
    }

    // - PreComp layer: Controls_10_Search
    // PreComp layer: AnimIcon - Controls - Search - Hover
    // Layer aggregator
    ShapeVisual ShapeVisual_2()
    {
        const auto result = _c.CreateShapeVisual();
        result.Size({ 32.0F, 32.0F });
        const auto shapes = result.Shapes();
        // Layer: Shape Layer 4
        shapes.Append(SpriteShape_5());
        // Layer: Shape Layer 4
        shapes.Append(ContainerShape_5());
        // Layer: Shape Layer 4
        shapes.Append(ContainerShape_6());
        return result;
    }

    // SolidLayerRectangle
    SpriteVisual SpriteVisual_0()
    {
        const auto result = _c.CreateSpriteVisual();
        result.Size({ 300.0F, 300.0F });
        // Offset:<-0.0004940033, -0.0004940033>, Scale:<1.16667, 1.16667>
        result.TransformMatrix({ 1.16666996F, 0.0F, 0.0F, 0.0F, 0.0F, 1.16666996F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, -0.000494003296F, -0.000494003296F, 0.0F, 1.0F });
        result.Brush(ColorBrush_AlmostLightGray_FFCCCCCC());
        return result;
    }

    StepEasingFunction HoldThenStepEasingFunction()
    {
        const auto result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
        result.IsFinalStepSingleFrame(true);
        return result;
    }

    StepEasingFunction StepThenHoldEasingFunction()
    {
        const auto result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
        result.IsInitialStepSingleFrame(true);
        return result;
    }

    // - - - PreComp layer: Controls_10_Search
    // - - PreComp layer: AnimIcon - Controls - Search - Off
    // - Transforms for AnimIcon - Controls - Search - Off Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Layer: Shape Layer 4
    // Offset
    Vector2KeyFrameAnimation OffsetVector2Animation_0()
    {
        const auto result = CreateVector2KeyFrameAnimation(0.0F, { 879.375F, -504.125F }, StepThenHoldEasingFunction());
        result.SetReferenceParameter(L"_", _root);
        result.InsertKeyFrame(0.277777791F, { 879.375F, -504.125F }, HoldThenStepEasingFunction());
        result.InsertExpressionKeyFrame(0.333333313F, L"(Pow(1-_.t0,3)*Vector2(879.375,-504.125))+(3*Square(1-_.t0)*_.t0*Vector2(879.375,-504.125))+(3*(1-_.t0)*Square(_.t0)*Vector2(879.305,-504.055))+(Pow(_.t0,3)*Vector2(879.375,-504.125))", _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.333333343F, { 879.375F, -504.125F }, _stepThenHoldEasingFunction);
        return result;
    }

    // - - - - PreComp layer: Controls_10_Search
    // - - - PreComp layer: AnimIcon - Controls - Search - Hover to Tap
    // - - Transforms for AnimIcon - Controls - Search - Hover to Tap Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // - Layer: Shape Layer 5
    // ShapeGroup: Shape 1
    // Offset
    Vector2KeyFrameAnimation OffsetVector2Animation_1()
    {
        const auto result = CreateVector2KeyFrameAnimation(0.0F, { 879.375F, -504.125F }, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.111111112F, { 879.375F, -504.125F }, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.166666672F, { 878.75F, -503.5F }, _c.CreateCubicBezierEasingFunction({ 0.850000024F, 0.0F }, { 1.0F, 1.0F }));
        return result;
    }

    // - - - PreComp layer: Controls_10_Search
    // - - PreComp layer: AnimIcon - Controls - Search - Hover to Tap
    // - Transforms for AnimIcon - Controls - Search - Hover to Tap Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Layer: Shape Layer 5
    Vector2KeyFrameAnimation ShapeVisibilityAnimation_0()
    {
        const auto result = CreateVector2KeyFrameAnimation(0.111111112F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.277777791F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
        return result;
    }

    // - - - PreComp layer: Controls_10_Search
    // - - PreComp layer: AnimIcon - Controls - Search - Hover to Tap
    // - Transforms for AnimIcon - Controls - Search - Hover to Tap Scale(3.5,3.5,0),
    // Offset(17.25,20.75,0)
    // Layer: Shape Layer 7
    Vector2KeyFrameAnimation ShapeVisibilityAnimation_1()
    {
        const auto result = CreateVector2KeyFrameAnimation(0.111111112F, { 1.0F, 1.0F }, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.166666672F, { 0.0F, 0.0F }, _holdThenStepEasingFunction);
        return result;
    }

    static IGeometrySource2D CanvasGeometryToIGeometrySource2D(winrt::com_ptr<CanvasGeometry> geo)
    {
        return geo.as<IGeometrySource2D>();
    }

public:
    Controls_10_Search_AnimatedVisual_UAPv7(
        Compositor compositor,
        CompositionPropertySet themeProperties)
        : _c{compositor}
        , _themeProperties{themeProperties}
        , _reusableExpressionAnimation(compositor.CreateExpressionAnimation())
    {
        winrt::check_hresult(D2D1CreateFactory(D2D1_FACTORY_TYPE_SINGLE_THREADED, _d2dFactory.put()));
        const auto _ = Root();
    }

    void Close()
    {
        if (_root)
        {
            _root.Close();
        }
    }

    TimeSpan Duration() const
    {
        return TimeSpan{ c_durationTicks };
    }

    Visual RootVisual() const
    {
        return _root;
    }

    winrt::float2 Size() const
    {
        return { 350.0F, 350.0F };
    }

    static bool IsRuntimeCompatible()
    {
        return winrt::Windows::Foundation::Metadata::ApiInformation::IsApiContractPresent(L"Windows.Foundation.UniversalApiContract", 7);
    }
};

winrt::float4 Controls_10_Search::ColorAsVector4(Color color)
{
    return { static_cast<float>(color.R), static_cast<float>(color.G), static_cast<float>(color.B), static_cast<float>(color.A) };
}

CompositionPropertySet Controls_10_Search::EnsureThemeProperties(Compositor compositor)
{
    if (_themeProperties == nullptr)
    {
        _themeProperties = compositor.CreatePropertySet();
        _themeProperties.InsertVector4(L"Foreground", ColorAsVector4((Color)_themeForeground));
    }

    return _themeProperties;
}

Color Controls_10_Search::Foreground()
{
    return _themeForeground;
}

void Controls_10_Search::Foreground(Color value)
{
    _themeForeground = value;
    if (_themeProperties != nullptr)
    {
        _themeProperties.InsertVector4(L"Foreground", ColorAsVector4((Color)_themeForeground));
    }
}

winrt::Microsoft::UI::Xaml::Controls::IAnimatedVisual Controls_10_Search::TryCreateAnimatedVisual(
    Compositor const& compositor,
    IInspectable& diagnostics)
{
    const auto _ = EnsureThemeProperties(compositor);
    diagnostics = nullptr;

    if (Controls_10_Search_AnimatedVisual_UAPv12::IsRuntimeCompatible())
    {
        return winrt::make<Controls_10_Search_AnimatedVisual_UAPv12>(
            compositor,
            _themeProperties);
    }

    if (Controls_10_Search_AnimatedVisual_UAPv11::IsRuntimeCompatible())
    {
        return winrt::make<Controls_10_Search_AnimatedVisual_UAPv11>(
            compositor,
            _themeProperties);
    }

    if (Controls_10_Search_AnimatedVisual_UAPv7::IsRuntimeCompatible())
    {
        return winrt::make<Controls_10_Search_AnimatedVisual_UAPv7>(
            compositor,
            _themeProperties);
    }

    return nullptr;
}

winrt::Microsoft::UI::Xaml::Controls::IAnimatedVisual Controls_10_Search::TryCreateAnimatedIconVisual(
    Compositor const& compositor)
{
    IInspectable diagnostics;
    return TryCreateAnimatedVisual(compositor, diagnostics);
}

double Controls_10_Search::FrameToProgress(double frameNumber)
{
    return frameNumber / 180.0;
}

winrt::Windows::Foundation::Collections::IMapView<hstring, double> Controls_10_Search::Markers()
{
    return winrt::single_threaded_map<winrt::hstring, double>(
        std::map<winrt::hstring, double>
        {
            { L"NormalToHover_Start", 0.0 },
            { L"NormalToHover_End", 0.107 },
            { L"NormalToPressed_Start", 0.0 },
            { L"NormalToPressed_End", 0.270 },
            { L"HoverToNormal_Start", 0.107 },
            { L"HoverToNormal_End", 0.0 },
            { L"HoverToPressed_Start", 0.110 },
            { L"HoverToPressed_End", 0.270 },
            { L"PressedToNormal_Start", 0.270 },
            { L"PressedToNormal_End", 0.0 },
            { L"PressedToHover_Start", 0.270 },
            { L"PressedToHover_End", 0.110 },
        }
    ).GetView();
}

void Controls_10_Search::SetColorProperty(hstring const& propertyName, Color value)
{
    if (propertyName == L"Foreground")
    {
        _themeForeground = value;
    }
    else
    {
        return;
    }

    if (_themeProperties != nullptr)
    {
        _themeProperties.InsertVector4(propertyName, ColorAsVector4(value));
    }
}

void Controls_10_Search::SetScalarProperty(hstring const&, double)
{
}
