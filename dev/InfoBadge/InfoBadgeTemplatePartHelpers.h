// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
// Generated by microsoft-ui-xaml/tools/GenerateTemplateHelpers.ps1
#include "pch.h"
#include "common.h"

enum class InfoBadgeNamedTemplatePart
{
    RootGrid,
    ValueTextBlock,
    IconPresenter
};

enum class InfoBadgeDisplayKindStates
{
    Dot,
    Icon,
    FontIcon,
    Value
};

class InfoBadgeTemplateHelpers
{
public:
    // Abstract Class
    virtual ~InfoBadgeTemplateHelpers() = 0;

#pragma region InfoBadgeDisplayKindStates
public:
    static bool GoToState(const winrt::Control& control, InfoBadgeDisplayKindStates state, bool useTransitions = true)
    {
        return winrt::VisualStateManager::GoToState(control, ToString(state), useTransitions);
    }

private:
    static winrt::hstring ToString(InfoBadgeDisplayKindStates state)
    {
        switch (state)
        {
        case InfoBadgeDisplayKindStates::Dot:
            return c_DotInfoBadgeDisplayKindStates.data();
        case InfoBadgeDisplayKindStates::Icon:
            return c_IconInfoBadgeDisplayKindStates.data();
        case InfoBadgeDisplayKindStates::FontIcon:
            return c_FontIconInfoBadgeDisplayKindStates.data();
        case InfoBadgeDisplayKindStates::Value:
            return c_ValueInfoBadgeDisplayKindStates.data();
        }
    }

    static constexpr wstring_view c_DotInfoBadgeDisplayKindStates{ L"Dot"sv };
    static constexpr wstring_view c_IconInfoBadgeDisplayKindStates{ L"Icon"sv };
    static constexpr wstring_view c_FontIconInfoBadgeDisplayKindStates{ L"FontIcon"sv };
    static constexpr wstring_view c_ValueInfoBadgeDisplayKindStates{ L"Value"sv };
#pragma endregion

#pragma region NamedTemplateParts
public:
    static winrt::hstring ToString(InfoBadgeNamedTemplatePart part)
    {
        switch (part)
        {
        case InfoBadgeNamedTemplatePart::RootGrid:
            return c_RootGridName.data();
        case InfoBadgeNamedTemplatePart::ValueTextBlock:
            return c_ValueTextBlockName.data();
        case InfoBadgeNamedTemplatePart::IconPresenter:
            return c_IconPresenterName.data();
        }
    }

private:
    static constexpr wstring_view c_RootGridName{ L"RootGrid"sv };
    static constexpr wstring_view c_ValueTextBlockName{ L"ValueTextBlock"sv };
    static constexpr wstring_view c_IconPresenterName{ L"IconPresenter"sv };
#pragma endregion
};
