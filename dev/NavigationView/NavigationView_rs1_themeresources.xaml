<!-- Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT License. See LICENSE in the project root for license information. -->
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Microsoft.UI.Xaml.Controls"
    xmlns:primitives="using:Microsoft.UI.Xaml.Controls.Primitives"
    xmlns:animatedvisuals="using:Microsoft.UI.Xaml.Controls.AnimatedVisuals"
    xmlns:contract4Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,4)"
    xmlns:contract7Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,7)"
    xmlns:contract7NotPresent="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractNotPresent(Windows.Foundation.UniversalApiContract,7)"
    xmlns:primitiveContract7Present="using:Microsoft.UI.Xaml.Controls.Primitives?IsApiContractPresent(Windows.Foundation.UniversalApiContract,7)">

    <ResourceDictionary.ThemeDictionaries>
        <ResourceDictionary x:Key="Dark">
            <StaticResource x:Key="NavigationViewDefaultPaneBackground" ResourceKey="SolidBackgroundFillColorBaseBrush" />
            <StaticResource x:Key="NavigationViewExpandedPaneBackground" ResourceKey="SolidBackgroundFillColorBaseBrush" />
            <StaticResource x:Key="NavigationViewTopPaneBackground" ResourceKey="SolidBackgroundFillColorBaseBrush" />

            <StaticResource x:Key="NavigationViewItemBackground" ResourceKey="SubtleFillColorTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundPointerOver" ResourceKey="SubtleFillColorSecondaryBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundPressed" ResourceKey="SubtleFillColorTertiaryBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundDisabled" ResourceKey="SubtleFillColorTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundChecked" ResourceKey="SubtleFillColorTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundCheckedPointerOver" ResourceKey="SubtleFillColorSecondaryBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundCheckedPressed" ResourceKey="SubtleFillColorTertiaryBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundCheckedDisabled" ResourceKey="SubtleFillColorTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundSelected" ResourceKey="SubtleFillColorSecondaryBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundSelectedPointerOver" ResourceKey="SubtleFillColorTertiaryBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundSelectedPressed" ResourceKey="SubtleFillColorSecondaryBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundSelectedDisabled" ResourceKey="SubtleFillColorSecondaryBrush" />

            <StaticResource x:Key="NavigationViewItemForeground" ResourceKey="TextFillColorPrimaryBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundPointerOver" ResourceKey="TextFillColorPrimaryBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundPressed" ResourceKey="TextFillColorSecondaryBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundDisabled" ResourceKey="TextFillColorDisabledBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundChecked" ResourceKey="TextFillColorPrimaryBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundCheckedPointerOver" ResourceKey="TextFillColorPrimaryBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundCheckedPressed" ResourceKey="TextFillColorSecondaryBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundCheckedDisabled" ResourceKey="TextFillColorDisabledBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundSelected" ResourceKey="TextFillColorPrimaryBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundSelectedPointerOver" ResourceKey="TextFillColorPrimaryBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundSelectedPressed" ResourceKey="TextFillColorSecondaryBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundSelectedDisabled" ResourceKey="TextFillColorDisabledBrush" />

            <StaticResource x:Key="NavigationViewItemBorderBrush" ResourceKey="SubtleFillColorTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushPointerOver" ResourceKey="SubtleFillColorSecondaryBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushPressed" ResourceKey="SubtleFillColorTertiaryBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushDisabled" ResourceKey="SubtleFillColorDisabledBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushChecked" ResourceKey="SubtleFillColorTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushCheckedPointerOver" ResourceKey="SubtleFillColorSecondaryBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushCheckedPressed" ResourceKey="SubtleFillColorTertiaryBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushCheckedDisabled" ResourceKey="SubtleFillColorDisabledBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushSelected" ResourceKey="SubtleFillColorSecondaryBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushSelectedPointerOver" ResourceKey="SubtleFillColorTertiaryBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushSelectedPressed" ResourceKey="SubtleFillColorSecondaryBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushSelectedDisabled" ResourceKey="SubtleFillColorSecondaryBrush" />

            <StaticResource x:Key="NavigationViewItemSeparatorForeground" ResourceKey="DividerStrokeColorDefaultBrush" />

            <StaticResource x:Key="NavigationViewSelectionIndicatorForeground" ResourceKey="AccentAAFillColorDefaultBrush" />

            <StaticResource x:Key="TopNavigationViewItemForeground" ResourceKey="TextFillColorSecondaryBrush" />
            <StaticResource x:Key="TopNavigationViewItemForegroundPointerOver" ResourceKey="TextFillColorPrimaryBrush" />
            <StaticResource x:Key="TopNavigationViewItemForegroundPressed" ResourceKey="TextFillColorPrimaryBrush" />
            <StaticResource x:Key="TopNavigationViewItemForegroundDisabled" ResourceKey="TextFillColorDisabledBrush" />
            <StaticResource x:Key="TopNavigationViewItemBackgroundPointerOver" ResourceKey="SubtleFillColorTransparentBrush" />
            <StaticResource x:Key="TopNavigationViewItemBackgroundPressed" ResourceKey="SubtleFillColorTransparentBrush" />
            <StaticResource x:Key="TopNavigationViewItemBackgroundSelected" ResourceKey="SubtleFillColorTransparentBrush" />
            <StaticResource x:Key="TopNavigationViewItemForegroundSelected" ResourceKey="TextFillColorPrimaryBrush" />
            <StaticResource x:Key="TopNavigationViewItemForegroundSelectedPointerOver" ResourceKey="TextFillColorSecondaryBrush" />
            <StaticResource x:Key="TopNavigationViewItemForegroundSelectedPressed" ResourceKey="TextFillColorTertiaryBrush" />
            <StaticResource x:Key="TopNavigationViewItemBackgroundPointerOver" ResourceKey="SubtleFillColorTransparentBrush" />
            <StaticResource x:Key="TopNavigationViewItemBackgroundPressed" ResourceKey="SubtleFillColorTransparentBrush" />
            <StaticResource x:Key="TopNavigationViewItemBackgroundSelected" ResourceKey="SubtleFillColorTransparentBrush" />

            <StaticResource x:Key="TopNavigationViewItemSeparatorForeground" ResourceKey="DividerStrokeColorDefaultBrush" />

            <StaticResource x:Key="NavigationViewButtonBackgroundPointerOver" ResourceKey="SubtleFillColorSecondaryBrush" />
            <StaticResource x:Key="NavigationViewButtonBackgroundPressed" ResourceKey="SubtleFillColorTertiaryBrush" />
            <StaticResource x:Key="NavigationViewButtonBackgroundDisabled" ResourceKey="ControlFillColorDisabledBrush" />
            <StaticResource x:Key="NavigationViewButtonForegroundPointerOver" ResourceKey="TextFillColorPrimaryBrush" />
            <StaticResource x:Key="NavigationViewButtonForegroundPressed" ResourceKey="TextFillColorSecondaryBrush" />
            <StaticResource x:Key="NavigationViewButtonForegroundDisabled" ResourceKey="TextFillColorDisabledBrush" />
        </ResourceDictionary>

        <ResourceDictionary x:Key="Light">
            <StaticResource x:Key="NavigationViewDefaultPaneBackground" ResourceKey="SolidBackgroundFillColorBaseBrush" />
            <StaticResource x:Key="NavigationViewExpandedPaneBackground" ResourceKey="SolidBackgroundFillColorBaseBrush" />
            <StaticResource x:Key="NavigationViewTopPaneBackground" ResourceKey="SolidBackgroundFillColorBaseBrush" />

            <StaticResource x:Key="NavigationViewItemBackground" ResourceKey="SubtleFillColorTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundPointerOver" ResourceKey="SubtleFillColorSecondaryBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundPressed" ResourceKey="SubtleFillColorTertiaryBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundDisabled" ResourceKey="SubtleFillColorTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundChecked" ResourceKey="SubtleFillColorTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundCheckedPointerOver" ResourceKey="SubtleFillColorSecondaryBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundCheckedPressed" ResourceKey="SubtleFillColorTertiaryBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundCheckedDisabled" ResourceKey="SubtleFillColorTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundSelected" ResourceKey="SubtleFillColorSecondaryBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundSelectedPointerOver" ResourceKey="SubtleFillColorTertiaryBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundSelectedPressed" ResourceKey="SubtleFillColorSecondaryBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundSelectedDisabled" ResourceKey="SubtleFillColorSecondaryBrush" />

            <StaticResource x:Key="NavigationViewItemForeground" ResourceKey="TextFillColorPrimaryBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundPointerOver" ResourceKey="TextFillColorPrimaryBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundPressed" ResourceKey="TextFillColorSecondaryBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundDisabled" ResourceKey="TextFillColorDisabledBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundChecked" ResourceKey="TextFillColorPrimaryBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundCheckedPointerOver" ResourceKey="TextFillColorPrimaryBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundCheckedPressed" ResourceKey="TextFillColorSecondaryBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundCheckedDisabled" ResourceKey="TextFillColorDisabledBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundSelected" ResourceKey="TextFillColorPrimaryBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundSelectedPointerOver" ResourceKey="TextFillColorPrimaryBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundSelectedPressed" ResourceKey="TextFillColorSecondaryBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundSelectedDisabled" ResourceKey="TextFillColorDisabledBrush" />

            <StaticResource x:Key="NavigationViewItemBorderBrush" ResourceKey="SubtleFillColorTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushPointerOver" ResourceKey="SubtleFillColorSecondaryBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushPressed" ResourceKey="SubtleFillColorTertiaryBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushDisabled" ResourceKey="SubtleFillColorDisabledBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushChecked" ResourceKey="SubtleFillColorTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushCheckedPointerOver" ResourceKey="SubtleFillColorSecondaryBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushCheckedPressed" ResourceKey="SubtleFillColorTertiaryBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushCheckedDisabled" ResourceKey="SubtleFillColorDisabledBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushSelected" ResourceKey="SubtleFillColorSecondaryBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushSelectedPointerOver" ResourceKey="SubtleFillColorTertiaryBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushSelectedPressed" ResourceKey="SubtleFillColorSecondaryBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushSelectedDisabled" ResourceKey="SubtleFillColorSecondaryBrush" />

            <StaticResource x:Key="NavigationViewItemSeparatorForeground" ResourceKey="DividerStrokeColorDefaultBrush" />

            <StaticResource x:Key="NavigationViewSelectionIndicatorForeground" ResourceKey="AccentAAFillColorDefaultBrush" />

            <StaticResource x:Key="TopNavigationViewItemForeground" ResourceKey="TextFillColorSecondaryBrush" />
            <StaticResource x:Key="TopNavigationViewItemForegroundPointerOver" ResourceKey="TextFillColorPrimaryBrush" />
            <StaticResource x:Key="TopNavigationViewItemForegroundPressed" ResourceKey="TextFillColorPrimaryBrush" />
            <StaticResource x:Key="TopNavigationViewItemForegroundDisabled" ResourceKey="TextFillColorDisabledBrush" />
            <StaticResource x:Key="TopNavigationViewItemBackgroundPointerOver" ResourceKey="SubtleFillColorSecondaryBrush" />
            <StaticResource x:Key="TopNavigationViewItemBackgroundPressed" ResourceKey="SubtleFillColorTertiaryBrush" />
            <StaticResource x:Key="TopNavigationViewItemBackgroundSelected" ResourceKey="SubtleFillColorSecondaryBrush" />
            <StaticResource x:Key="TopNavigationViewItemForegroundSelected" ResourceKey="TextFillColorPrimaryBrush" />
            <StaticResource x:Key="TopNavigationViewItemForegroundSelectedPointerOver" ResourceKey="TextFillColorSecondaryBrush" />
            <StaticResource x:Key="TopNavigationViewItemForegroundSelectedPressed" ResourceKey="TextFillColorTertiaryBrush" />
            <StaticResource x:Key="TopNavigationViewItemBackgroundPointerOver" ResourceKey="SubtleFillColorTransparentBrush" />
            <StaticResource x:Key="TopNavigationViewItemBackgroundPressed" ResourceKey="SubtleFillColorTransparentBrush" />
            <StaticResource x:Key="TopNavigationViewItemBackgroundSelected" ResourceKey="SubtleFillColorTransparentBrush" />

            <StaticResource x:Key="TopNavigationViewItemSeparatorForeground" ResourceKey="DividerStrokeColorDefaultBrush" />

            <StaticResource x:Key="NavigationViewButtonBackgroundPointerOver" ResourceKey="SubtleFillColorSecondaryBrush" />
            <StaticResource x:Key="NavigationViewButtonBackgroundPressed" ResourceKey="SubtleFillColorTertiaryBrush" />
            <StaticResource x:Key="NavigationViewButtonBackgroundDisabled" ResourceKey="ControlFillColorDisabledBrush" />
            <StaticResource x:Key="NavigationViewButtonForegroundPointerOver" ResourceKey="TextFillColorPrimaryBrush" />
            <StaticResource x:Key="NavigationViewButtonForegroundPressed" ResourceKey="TextFillColorSecondaryBrush" />
            <StaticResource x:Key="NavigationViewButtonForegroundDisabled" ResourceKey="TextFillColorDisabledBrush" />
        </ResourceDictionary>

        <ResourceDictionary x:Key="HighContrast">
            <StaticResource x:Key="NavigationViewDefaultPaneBackground" ResourceKey="SystemChromeMediumColor" />
            <StaticResource x:Key="NavigationViewExpandedPaneBackground" ResourceKey="SystemColorWindowColor" />
            <StaticResource x:Key="NavigationViewTopPaneBackground" ResourceKey="SystemChromeMediumHighColor" />

            <StaticResource x:Key="NavigationViewItemBackground" ResourceKey="SystemControlBackgroundBaseLowBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundPointerOver" ResourceKey="SystemControlHighlightListLowBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundPressed" ResourceKey="SystemControlHighlightListMediumBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundDisabled" ResourceKey="SystemControlBackgroundBaseLowBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundChecked" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundCheckedPointerOver" ResourceKey="SystemControlHighlightListLowBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundCheckedPressed" ResourceKey="SystemControlHighlightListMediumBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundCheckedDisabled" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundSelected" ResourceKey="SystemControlHighlightListLowBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundSelectedPointerOver" ResourceKey="SystemControlHighlightListLowBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundSelectedPressed" ResourceKey="SystemControlHighlightListMediumBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundSelectedDisabled" ResourceKey="SystemControlTransparentBrush" />

            <StaticResource x:Key="NavigationViewItemForeground" ResourceKey="SystemControlForegroundBaseHighBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundPointerOver" ResourceKey="SystemControlHighlightAltBaseHighBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundPressed" ResourceKey="SystemControlHighlightAltBaseHighBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundDisabled" ResourceKey="SystemControlDisabledBaseMediumLowBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundChecked" ResourceKey="SystemControlHighlightAltBaseHighBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundCheckedPointerOver" ResourceKey="SystemControlHighlightAltBaseHighBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundCheckedPressed" ResourceKey="SystemControlHighlightAltBaseHighBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundCheckedDisabled" ResourceKey="SystemControlDisabledBaseMediumLowBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundSelected" ResourceKey="SystemControlHighlightAltBaseHighBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundSelectedPointerOver" ResourceKey="SystemControlHighlightAltBaseHighBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundSelectedPressed" ResourceKey="SystemControlHighlightAltBaseHighBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundSelectedDisabled" ResourceKey="SystemControlDisabledBaseMediumLowBrush" />

            <StaticResource x:Key="NavigationViewItemBorderBrush" ResourceKey="SubtleFillColorTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushPointerOver" ResourceKey="SubtleFillColorTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushPressed" ResourceKey="SubtleFillColorTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushDisabled" ResourceKey="SubtleFillColorTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushChecked" ResourceKey="SubtleFillColorTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushCheckedPointerOver" ResourceKey="SubtleFillColorTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushCheckedPressed" ResourceKey="SubtleFillColorTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushCheckedDisabled" ResourceKey="SubtleFillColorTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushSelected" ResourceKey="SubtleFillColorTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushSelectedPointerOver" ResourceKey="SubtleFillColorTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushSelectedPressed" ResourceKey="SubtleFillColorTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushSelectedDisabled" ResourceKey="SubtleFillColorTransparentBrush" />

            <StaticResource x:Key="NavigationViewItemSeparatorForeground" ResourceKey="SystemControlForegroundBaseLowBrush" />

            <StaticResource x:Key="NavigationViewSelectionIndicatorForeground" ResourceKey="SystemColorHighlightTextColor" />
            
            <StaticResource x:Key="TopNavigationViewItemForeground" ResourceKey="NavigationViewItemForeground" />
            <StaticResource x:Key="TopNavigationViewItemForegroundPointerOver" ResourceKey="SystemControlHighlightAltBaseHighBrush" />
            <StaticResource x:Key="TopNavigationViewItemForegroundPressed" ResourceKey="SystemControlHighlightAltBaseHighBrush" />
            <StaticResource x:Key="TopNavigationViewItemForegroundDisabled" ResourceKey="SystemControlDisabledBaseMediumLowBrush" />
            <StaticResource x:Key="TopNavigationViewItemForegroundSelected" ResourceKey="SystemControlHighlightAltBaseHighBrush" />
            <StaticResource x:Key="TopNavigationViewItemForegroundSelectedPointerOver" ResourceKey="NavigationViewItemForeground" />
            <StaticResource x:Key="TopNavigationViewItemForegroundSelectedPressed" ResourceKey="NavigationViewItemForeground" />
            <StaticResource x:Key="TopNavigationViewItemBackgroundPointerOver" ResourceKey="SystemControlHighlightAccentBrush" />
            <StaticResource x:Key="TopNavigationViewItemBackgroundPressed" ResourceKey="SystemControlHighlightAccentBrush" />
            <StaticResource x:Key="TopNavigationViewItemBackgroundSelected" ResourceKey="SystemControlHighlightAccentBrush" />

            <StaticResource x:Key="TopNavigationViewItemSeparatorForeground" ResourceKey="SystemControlForegroundBaseLowBrush" />

            <StaticResource x:Key="NavigationViewButtonBackgroundPointerOver" ResourceKey="SystemControlHighlightListLowBrush" />
            <StaticResource x:Key="NavigationViewButtonBackgroundPressed" ResourceKey="SystemControlHighlightListMediumBrush" />
            <StaticResource x:Key="NavigationViewButtonBackgroundDisabled" ResourceKey="SystemControlBackgroundBaseLowBrush" />
            <StaticResource x:Key="NavigationViewButtonForegroundPointerOver" ResourceKey="SystemControlHighlightAltBaseHighBrush" />
            <StaticResource x:Key="NavigationViewButtonForegroundPressed" ResourceKey="SystemControlHighlightAltBaseHighBrush" />
            <StaticResource x:Key="NavigationViewButtonForegroundDisabled" ResourceKey="SystemControlDisabledBaseMediumLowBrush" />
        </ResourceDictionary>
    </ResourceDictionary.ThemeDictionaries>

    <Thickness x:Key="NavigationViewAutoSuggestBoxMargin">10,0,16,0</Thickness>
    <Thickness x:Key="TopNavigationViewAutoSuggestBoxMargin">12,0,12,0</Thickness>
    <x:Double x:Key="PaneToggleButtonHeight">34</x:Double>
    <x:Double x:Key="PaneToggleButtonWidth">46</x:Double>
    <x:Double x:Key="NavigationViewCompactPaneLength">46</x:Double>
    <x:Double x:Key="NavigationViewIconBoxWidth">38</x:Double>
    <x:Double x:Key="NavigationViewTopPaneHeight">48</x:Double>
    <x:Double x:Key="TopNavigationViewPaneCustomContentMinWidth">48</x:Double>
    <x:Double x:Key="TopNavigationViewOverflowButtonWidth">40</x:Double>
    <x:Double x:Key="TopNavigationViewOverflowButtonHeight">40</x:Double>

    <x:Double x:Key="NavigationViewItemOnLeftMinHeight">36</x:Double>
    <x:Double x:Key="NavigationViewPaneHeaderRowMinHeight">44</x:Double>

    <x:Double x:Key="NavigationViewItemSeparatorHeight">1</x:Double>
    <x:Double x:Key="TopNavigationViewItemSeparatorWidth">1</x:Double>

    <Thickness x:Key="NavigationViewToggleBorderThickness">1</Thickness>
    <Thickness x:Key="NavigationViewItemBorderThickness">1</Thickness>
    <Thickness x:Key="NavigationViewItemOnLeftIconBoxMargin">11,0,11,0</Thickness>
    <Thickness x:Key="NavigationViewItemInnerHeaderMargin">12,0</Thickness>
    <Thickness x:Key="NavigationViewMinimalHeaderMargin">8,5,0,0</Thickness>
    <Thickness x:Key="NavigationViewHeaderMargin">12,5,0,11</Thickness>
    <Thickness x:Key="NavigationViewPaneTitlePresenterMargin">8,4,0,0</Thickness>
    <Thickness x:Key="NavigationViewItemMargin">0</Thickness>
    <Thickness x:Key="TopNavigationViewItemMargin">0</Thickness>
    <Thickness x:Key="NavigationViewItemSeparatorMargin">0,2</Thickness>
    <Thickness x:Key="NavigationViewCompactItemSeparatorMargin">0,2</Thickness>
    <Thickness x:Key="TopNavigationViewItemSeparatorMargin">4,0</Thickness>
    <Thickness x:Key="TopNavigationViewOverflowButtonMargin">0</Thickness>
    <Thickness x:Key="NavigationViewItemContentPresenterMargin">4,0,20,0</Thickness>
    <Thickness x:Key="NavigationViewCompactItemContentPresenterMargin">0,0,0,0</Thickness>
    <Thickness x:Key="TopNavigationViewItemContentPresenterMargin">8,0,12,0</Thickness>
    <Thickness x:Key="TopNavigationViewItemContentOnlyContentPresenterMargin">12,0</Thickness>
    <Thickness x:Key="NavigationViewItemExpandChevronMargin">-20,0,6,0</Thickness>
    <Thickness x:Key="TopNavigationViewItemExpandChevronMargin">-16,0,0,0</Thickness>
    <Thickness x:Key="TopNavigationViewItemIconOnlyExpandChevronMargin">0,0,0,0</Thickness>
    <Thickness x:Key="TopNavigationViewItemContentOnlyExpandChevronMargin">-12,0,0,0</Thickness>
    <Thickness x:Key="TopNavigationViewItemOnOverflowContentPresenterMargin">12,0,20,0</Thickness>
    <Thickness x:Key="TopNavigationViewItemOnOverflowNoIconContentPresenterMargin">16,0,20,0</Thickness>
    <Thickness x:Key="TopNavigationViewItemOnOverflowExpandChevronMargin">-4,0,6,0</Thickness>
    <Thickness x:Key="TopNavigationViewItemOnOverflowExpandChevronPadding">12,0,12,0</Thickness>

    <!-- The two resources below must be defined at the app level in order to take effect. -->
    <Thickness x:Key="TopNavigationViewOverflowMenuPadding">0,8</Thickness>
    <Thickness x:Key="NavigationViewItemChildrenMenuFlyoutPadding">0,8</Thickness>

    <!-- The resource below must be defined at the app level in order to affect the expand/collapse chevron font size
         used in the Top NavigationView's Overflow menu. -->
    <x:Double x:Key="NavigationViewItemExpandedGlyphFontSize">8</x:Double>
    <x:String x:Key="NavigationViewItemExpandedGlyph">&#xE70D;</x:String>

    <Style x:Key="DefaultNavigationViewStyle"  TargetType="local:NavigationView">
        <Setter Property="PaneToggleButtonStyle" Value="{StaticResource PaneToggleButtonStyle}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="CompactPaneLength" Value="{ThemeResource NavigationViewCompactPaneLength}" />
        <contract7Present:Setter Property="CornerRadius" Value="{ThemeResource OverlayCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:NavigationView">
                    <Grid x:Name="RootGrid">
                        <Grid.Resources>
                            <Storyboard x:Name="ShadowCasterEaseInStoryboard">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ShadowCasterTransform" Storyboard.TargetProperty="TranslateX">
                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="{Binding ElementName=RootSplitView, Path=TemplateSettings.NegativeOpenPaneLengthMinusCompactLength}" />
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.35" KeySpline="0.1,0.9 0.2,1.0" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ShadowCaster" Storyboard.TargetProperty="Opacity">
                                    <LinearDoubleKeyFrame KeyTime="0:0:0.35" Value="1" />
                                </DoubleAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ShadowCaster" Storyboard.TargetProperty="HorizontalAlignment">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="Left"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Name="ShadowCasterSmallPaneEaseInStoryboard">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ShadowCasterTransform" Storyboard.TargetProperty="TranslateX">
                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeSplitViewWidthMinusCompactLength}" />
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.2" KeySpline="0.1,0.9 0.2,1.0" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ShadowCaster" Storyboard.TargetProperty="Opacity">
                                    <LinearDoubleKeyFrame KeyTime="0:0:0.35" Value="1" />
                                </DoubleAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ShadowCaster" Storyboard.TargetProperty="Width">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding ElementName=RootSplitView, Path=Width}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ShadowCaster" Storyboard.TargetProperty="HorizontalAlignment">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="Stretch"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Name="ShadowCasterEaseOutStoryboard">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ShadowCasterTransform" Storyboard.TargetProperty="TranslateX">
                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.12" KeySpline="0.1,0.9 0.2,1.0" Value="{Binding ElementName=RootSplitView, Path=TemplateSettings.NegativeOpenPaneLengthMinusCompactLength}" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ShadowCaster" Storyboard.TargetProperty="Opacity">
                                    <LinearDoubleKeyFrame KeyTime="0:0:0.12" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ShadowCaster" Storyboard.TargetProperty="HorizontalAlignment">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="Left"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </Grid.Resources>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="DisplayModeGroup">
                                <VisualState x:Name="Compact" />

                                <VisualState x:Name="Expanded">
                                    <VisualState.Setters>
                                        <Setter Target="RootSplitView.PaneBackground" Value="{ThemeResource NavigationViewExpandedPaneBackground}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Minimal">
                                    <VisualState.Setters>
                                        <Setter Target="HeaderContent.Margin" Value="{ThemeResource NavigationViewMinimalHeaderMargin}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="TopNavigationMinimal" />

                                <VisualState x:Name="MinimalWithBackButton">
                                    <VisualState.Setters>
                                        <Setter Target="HeaderContent.Margin" Value="{ThemeResource NavigationViewMinimalHeaderMargin}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="TogglePaneGroup">
                                <VisualState x:Name="TogglePaneButtonVisible" />
                                <VisualState x:Name="TogglePaneButtonCollapsed" />
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="HeaderGroup">
                                <VisualState x:Name="HeaderVisible" />
                                <VisualState x:Name="HeaderCollapsed">
                                    <VisualState.Setters>
                                        <Setter Target="HeaderContent.Visibility" Value="Collapsed" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="AutoSuggestGroup">
                                <VisualState x:Name="AutoSuggestBoxVisible" />
                                <VisualState x:Name="AutoSuggestBoxCollapsed">
                                    <VisualState.Setters>
                                        <Setter Target="AutoSuggestArea.Visibility" Value="Collapsed" />
                                        <Setter Target="TopPaneAutoSuggestArea.Visibility" Value="Collapsed" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="PaneStateGroup">
                                <VisualState x:Name="NotClosedCompact" />
                                <VisualState x:Name="ClosedCompact">
                                    <VisualState.Setters>
                                        <Setter Target="PaneAutoSuggestBoxPresenter.Visibility" Value="Collapsed"/>
                                        <Setter Target="PaneAutoSuggestButton.Visibility" Value="Visible"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="PaneStateListSizeGroup">
                                <VisualState x:Name="ListSizeFull"/>
                                <VisualState x:Name="ListSizeCompact">
                                    <VisualState.Setters>
                                        <Setter Target="PaneContentGrid.Width" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CompactPaneLength}"/>
                                        <Setter Target="ShadowCaster.Width" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CompactPaneLength}" />
                                        <Setter Target="PaneTitleTextBlock.Visibility" Value="Collapsed" />
                                        <Setter Target="PaneHeaderContentBorder.Visibility" Value="Collapsed" />
                                        <Setter Target="PaneCustomContentBorder.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="FooterContentBorder.HorizontalAlignment" Value="Left"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="TitleBarVisibilityGroup">
                                <VisualState x:Name="TitleBarVisible" />
                                <VisualState x:Name="TitleBarCollapsed">
                                    <VisualState.Setters>
                                        <Setter Target="PaneContentGrid.Margin" Value="0,32,0,0"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="OverflowLabelGroup">
                                <VisualState x:Name="OverflowButtonWithLabel" />
                                <VisualState x:Name="OverflowButtonNoLabel">
                                    <VisualState.Setters>
                                        <Setter Target="TopNavOverflowButton.Style" Value="{ThemeResource NavigationViewOverflowButtonNoLabelStyleWhenPaneOnTop}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="BackButtonGroup">
                                <VisualState x:Name="BackButtonVisible" />
                                <VisualState x:Name="BackButtonCollapsed">
                                    <VisualState.Setters>
                                        <Setter Target="BackButtonPlaceholderOnTopNav.Width" Value="0" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="PaneVisibilityGroup">
                                <VisualState x:Name="PaneVisible" />
                                <VisualState x:Name="PaneCollapsed">
                                    <VisualState.Setters>
                                        <!-- Note that RootSplitView.DisplayMode is set in code so we don't want to -->
                                        <!-- write it here and interfere. But these values work together to hide -->
                                        <!-- the left pane. -->
                                        <Setter Target="RootSplitView.CompactPaneLength" Value="0" />
                                        <Setter Target="ShadowCaster.Width" Value="0" />
                                        <Setter Target="PaneToggleButtonGrid.Visibility" Value="Collapsed" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <!-- Button grid -->
                        <Grid
                            x:Name="PaneToggleButtonGrid"
                            Margin="0,0,0,8"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            Canvas.ZIndex="100">

                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Grid x:Name="TogglePaneTopPadding"
                                  Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPadding}"/>

                            <Grid x:Name="ButtonHolderGrid" Margin="0,4" Grid.Row="1">
                                <Button
                                    x:Name="NavigationViewBackButton"
                                    Style="{StaticResource NavigationBackButtonNormalStyle}"
                                    Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.SmallerPaneToggleButtonWidth}"
                                    VerticalAlignment="Top"
                                    Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.BackButtonVisibility}"
                                    IsEnabled="{TemplateBinding IsBackEnabled}">
                                    <ToolTipService.ToolTip>
                                        <ToolTip x:Name="NavigationViewBackButtonToolTip"/>
                                    </ToolTipService.ToolTip>
                                </Button>
                                <Button 
                                    x:Name="NavigationViewCloseButton"
                                    Style="{StaticResource NavigationBackButtonNormalStyle}"
                                    VerticalAlignment="Top">
                                    <ToolTipService.ToolTip>
                                        <ToolTip x:Name="NavigationViewCloseButtonToolTip"/>
                                    </ToolTipService.ToolTip>
                                </Button>
                                <Button
                                    x:Name="TogglePaneButton"
                                    Style="{TemplateBinding PaneToggleButtonStyle}"
                                    AutomationProperties.LandmarkType="Navigation"
                                    HorizontalAlignment="Center"
                                    Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.PaneToggleButtonVisibility}"
                                    VerticalAlignment="Top"
                                    MinWidth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.SmallerPaneToggleButtonWidth}">
                                    <TextBlock
                                        x:Name="PaneTitleTextBlock" 
                                        Grid.Column="0"
                                        Text="{TemplateBinding PaneTitle}"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        Style="{StaticResource NavigationViewItemHeaderTextStyle}"/>
                                </Button>
                                <Grid
                                    x:Name="PaneTitleHolder"
                                    Visibility="Collapsed">
                                    <ContentControl
                                        x:Name="PaneTitlePresenter"
                                        Margin="{ThemeResource NavigationViewPaneTitlePresenterMargin}"
                                        IsTabStop="False"
                                        HorizontalContentAlignment="Stretch"
                                        VerticalContentAlignment="Stretch"/>
                                </Grid>
                            </Grid>
                        </Grid>

                        <!-- Content layouts -->
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <!-- DisplayMode top -->
                            <StackPanel
                                x:Name="TopNavArea"
                                Background="{ThemeResource NavigationViewTopPaneBackground}"
                                Grid.Row="0"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Top"
                                Canvas.ZIndex="1"
                                contract4Present:XYFocusKeyboardNavigation="Enabled">

                                <Grid x:Name="TopNavTopPadding"
                                      Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPadding}"
                                      Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPaneVisibility}"/>

                                <Grid x:Name="TopNavGrid" 
                                      Height="{ThemeResource NavigationViewTopPaneHeight}"
                                      Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPaneVisibility}"
                                      BorderBrush="{ThemeResource NavigationViewItemSeparatorForeground}"
                                      BorderThickness="0,0,0,1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Name="BackButtonPlaceholderOnTopNav" Width="{ThemeResource NavigationBackButtonWidth}"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*" MinWidth="{ThemeResource TopNavigationViewPaneCustomContentMinWidth}"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <Grid 
                                        x:Name="TopNavLeftPadding" 
                                        Grid.Column="1"
                                        Width="0"/>

                                    <ContentControl
                                        x:Name="PaneHeaderOnTopPane"
                                        IsTabStop="False"
                                        VerticalContentAlignment="Stretch"
                                        HorizontalContentAlignment="Stretch"
                                        Grid.Column="2"/>

                                    <ContentControl
                                        x:Name="PaneTitleOnTopPane"
                                        IsTabStop="False"
                                        VerticalContentAlignment="Stretch"
                                        HorizontalContentAlignment="Stretch"
                                        Grid.Column="2"/>

                                    <!-- Top nav ItemsRepeater -->
                                    <local:ItemsRepeaterScrollHost
                                            Grid.Column="3">
                                        <ScrollViewer
                                            HorizontalScrollMode="Disabled"
                                            HorizontalScrollBarVisibility="Hidden"
                                            VerticalScrollMode="Disabled"
                                            VerticalScrollBarVisibility="Hidden">
                                            <local:ItemsRepeater 
                                                AutomationProperties.LandmarkType="Navigation"
                                                AutomationProperties.Name="{TemplateBinding AutomationProperties.Name}"
                                                AutomationProperties.AccessibilityView = "Content"
                                                x:Name="TopNavMenuItemsHost">
                                                <local:ItemsRepeater.Layout>
                                                    <local:StackLayout Orientation="Horizontal"/>
                                                </local:ItemsRepeater.Layout>
                                            </local:ItemsRepeater>
                                        </ScrollViewer>
                                    </local:ItemsRepeaterScrollHost>

                                    <Button 
                                        x:Name="TopNavOverflowButton"
                                        Grid.Column="4"
                                        Content="More"
                                        Margin="{ThemeResource TopNavigationViewOverflowButtonMargin}"
                                        Style="{StaticResource NavigationViewOverflowButtonStyleWhenPaneOnTop}"
                                        Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OverflowButtonVisibility}">

                                        <Button.Flyout>
                                            <Flyout
                                                contract7NotPresent:Placement="Bottom"
                                                contract7Present:Placement="BottomEdgeAlignedRight"
                                                ElementSoundMode="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ElementSoundMode}">
                                                <Flyout.FlyoutPresenterStyle>
                                                    <Style TargetType="FlyoutPresenter">
                                                        <Setter Property="Padding" Value="{ThemeResource TopNavigationViewOverflowMenuPadding}" />
                                                        <!-- Set negative top margin to make the flyout align exactly with the button -->
                                                        <Setter Property="Margin" Value="0,-4,0,0" />
                                                        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Auto" />
                                                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                                                        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto" />
                                                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                                                        <Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
                                                        <contract7Present:Setter Property="CornerRadius" Value="{ThemeResource OverlayCornerRadius}" />
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="FlyoutPresenter">
                                                                    <ScrollViewer
                                                                        x:Name="ScrollViewer"
                                                                        ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}"
                                                                        HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                                                                        HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                                                        VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                                                                        VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                                                        AutomationProperties.AccessibilityView="Raw">
                                                                        <ContentPresenter
                                                                            x:Name="ContentPresenter"
                                                                            Background="{TemplateBinding Background}"
                                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                                            BorderThickness="{TemplateBinding BorderThickness}"
                                                                            Content="{TemplateBinding Content}"
                                                                            ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                            ContentTransitions="{TemplateBinding ContentTransitions}"
                                                                            Padding="{TemplateBinding Padding}"
                                                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                            contract7Present:CornerRadius="{TemplateBinding CornerRadius}"
                                                                            contract7NotPresent:CornerRadius="{ThemeResource OverlayCornerRadius}"/>
                                                                    </ScrollViewer>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Flyout.FlyoutPresenterStyle>
                                                <local:ItemsRepeaterScrollHost>
                                                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                                                        <local:ItemsRepeater
                                                                    AutomationProperties.AccessibilityView = "Content"
                                                                    x:Name="TopNavMenuItemsOverflowHost"/>
                                                    </ScrollViewer>
                                                </local:ItemsRepeaterScrollHost>
                                            </Flyout>
                                        </Button.Flyout>
                                    </Button>

                                    <ContentControl
                                        x:Name="PaneCustomContentOnTopPane"
                                        IsTabStop="False"
                                        VerticalContentAlignment="Stretch"
                                        HorizontalContentAlignment="Stretch"
                                        Grid.Column="5"/>

                                    <Grid
                                        x:Name="TopPaneAutoSuggestArea"
                                        Height="{ThemeResource NavigationViewTopPaneHeight}"
                                        Grid.Column="6">

                                        <ContentControl
                                            x:Name="TopPaneAutoSuggestBoxPresenter"
                                            Margin="{ThemeResource TopNavigationViewAutoSuggestBoxMargin}"
                                            MinWidth="48"
                                            IsTabStop="False"
                                            HorizontalContentAlignment="Stretch"
                                            VerticalContentAlignment="Center"/>
                                    </Grid>

                                    <ContentControl
                                        x:Name="PaneFooterOnTopPane"
                                        IsTabStop="False"
                                        VerticalContentAlignment="Stretch"
                                        HorizontalContentAlignment="Stretch"
                                        Grid.Column="7" />
                                    <!-- Top footer menu ItemsRepeater -->
                                    <local:ItemsRepeater
                                        Grid.Column="8"
                                        AutomationProperties.LandmarkType="Navigation"
                                        AutomationProperties.AccessibilityView = "Content"
                                        x:Name="TopFooterMenuItemsHost">
                                        <local:ItemsRepeater.Layout>
                                            <local:StackLayout Orientation="Horizontal"/>
                                        </local:ItemsRepeater.Layout>
                                    </local:ItemsRepeater>

                                </Grid>
                                <Border
                                    x:Name="TopNavContentOverlayAreaGrid"
                                    Child="{TemplateBinding ContentOverlay}" />
                            </StackPanel>

                            <!-- Displaymode (compact/minimal/normal) left -->
                            <SplitView
                                x:Name="RootSplitView"
                                Background="{TemplateBinding Background}"
                                CompactPaneLength="{TemplateBinding CompactPaneLength}"
                                DisplayMode="Inline"
                                IsPaneOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPaneOpen, Mode=TwoWay}"
                                IsTabStop="False"
                                OpenPaneLength="{TemplateBinding OpenPaneLength}"
                                PaneBackground="{ThemeResource NavigationViewDefaultPaneBackground}"
                                Grid.Row="1">

                                <SplitView.Pane>
                                    <Grid 
                                        x:Name="PaneContentGrid"
                                        HorizontalAlignment="Left"
                                        Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.LeftPaneVisibility}"
                                        BorderBrush="{ThemeResource NavigationViewItemSeparatorForeground}"
                                        BorderThickness="0,0,1,0">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="0"/>
                                            <!-- above button margin + back button space -->
                                            <RowDefinition x:Name="PaneContentGridToggleButtonRow" Height="Auto" MinHeight="{StaticResource NavigationViewPaneHeaderRowMinHeight}"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="8"/>
                                            <!-- above list margin -->
                                            <RowDefinition x:Name="ItemsContainerRow" Height="*"/>
                                        </Grid.RowDefinitions>

                                        <Grid x:Name="ContentPaneTopPadding"
                                              Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPadding}"/>

                                        <Grid Grid.Row="2">
                                            <Grid.RowDefinitions>
                                                <RowDefinition x:Name="PaneHeaderContentBorderRow"/>
                                            </Grid.RowDefinitions>

                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition x:Name="PaneHeaderCloseButtonColumn"/>
                                                <ColumnDefinition x:Name="PaneHeaderToggleButtonColumn"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>

                                            <ContentControl
                                                x:Name="PaneHeaderContentBorder"
                                                IsTabStop="False"
                                                VerticalContentAlignment="Stretch"
                                                HorizontalContentAlignment="Stretch"
                                                Grid.Column="2" />
                                        </Grid>

                                        <Grid
                                            x:Name="AutoSuggestArea"
                                            Grid.Row="3"
                                            Height="{ThemeResource NavigationViewTopPaneHeight}"
                                            VerticalAlignment="Center">

                                            <ContentControl
                                                x:Name="PaneAutoSuggestBoxPresenter"
                                                Margin="{ThemeResource NavigationViewAutoSuggestBoxMargin}"
                                                IsTabStop="False"
                                                HorizontalContentAlignment="Stretch"
                                                VerticalContentAlignment="Center"/>

                                            <Button
                                                x:Name="PaneAutoSuggestButton"
                                                Visibility="Collapsed"
                                                Style="{ThemeResource NavigationViewPaneSearchButtonStyle}"
                                                Width="{TemplateBinding CompactPaneLength}"/>
                                        </Grid>

                                        <ContentControl
                                            x:Name="PaneCustomContentBorder"
                                            IsTabStop="False"
                                            VerticalContentAlignment="Stretch"
                                            HorizontalContentAlignment="Stretch"
                                            Grid.Row="4" />

                                        <!-- "Non header" content -->
                                        <Grid x:Name="ItemsContainerGrid" Grid.Row="6" Margin="0,0,0,8">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" MinHeight="{ThemeResource NavigationViewItemOnLeftMinHeight}"/>
                                                <!-- MenuItems -->
                                                <RowDefinition Height="*" MinHeight="21"/>
                                                <!-- Fill spacing -->
                                                <RowDefinition Height="Auto" />
                                                <!-- PaneFooter -->
                                                <RowDefinition Height="Auto" MinHeight="{ThemeResource NavigationViewItemOnLeftMinHeight}"/>
                                                <!-- FooterItems -->
                                            </Grid.RowDefinitions>

                                            <!-- MenuItems -->
                                            <local:ItemsRepeaterScrollHost
                                                HorizontalAlignment="Stretch"
                                                VerticalAlignment="Stretch">
                                                <ScrollViewer x:Name="MenuItemsScrollViewer"
                                                    TabNavigation="Local"
                                                    VerticalScrollBarVisibility="Auto">
                                                    <!-- Left nav ItemsRepeater -->
                                                    <local:ItemsRepeater
                                                        x:Name="MenuItemsHost"
                                                        AutomationProperties.Name="{TemplateBinding AutomationProperties.Name}"
                                                        AutomationProperties.AccessibilityView = "Content"/>
                                                </ScrollViewer>
                                            </local:ItemsRepeaterScrollHost>

                                            <local:NavigationViewItemSeparator x:Name="VisualItemsSeparator"
                                                Grid.Row="1" VerticalAlignment="Center"
                                                Visibility="Collapsed" HorizontalAlignment="Stretch"/>

                                            <!-- PaneFooter -->
                                            <ContentControl x:Name="FooterContentBorder"
                                                        IsTabStop="False"
                                                        VerticalContentAlignment="Stretch"
                                                        HorizontalContentAlignment="Stretch"
                                                        Grid.Row="2" />

                                            <!-- FooterItems -->
                                            <local:ItemsRepeaterScrollHost Grid.Row="3">
                                                <ScrollViewer x:Name="FooterItemsScrollViewer"
                                                        contract7Present:VerticalAnchorRatio="1">
                                                    <local:ItemsRepeater
                                                        x:Name="FooterMenuItemsHost"
                                                        AutomationProperties.AccessibilityView = "Content"/>
                                                </ScrollViewer>
                                            </local:ItemsRepeaterScrollHost>
                                        </Grid>
                                    </Grid>
                                </SplitView.Pane>

                                <SplitView.Content>
                                    <Grid x:Name="ContentGrid">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>

                                        <Grid x:Name="ContentTopPadding"
                                            Grid.ColumnSpan="2"
                                            Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPadding}"
                                            Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.LeftPaneVisibility}"/>

                                        <Grid x:Name="ContentLeftPadding" Grid.Row="1"/>

                                        <ContentControl
                                            x:Name="HeaderContent"
                                            Grid.Row="1"
                                            Grid.Column="1"
                                            MinHeight="{StaticResource PaneToggleButtonHeight}"
                                            IsTabStop="False"
                                            Content="{TemplateBinding Header}"
                                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                                            VerticalContentAlignment="Stretch"
                                            HorizontalContentAlignment="Stretch"
                                            Style="{StaticResource NavigationViewTitleHeaderContentControlTextStyle}"/>

                                        <ContentPresenter
                                            AutomationProperties.LandmarkType="Main"
                                            Grid.Row="2"
                                            Grid.ColumnSpan="2"
                                            Content="{TemplateBinding Content}"/>
                                    </Grid>
                                </SplitView.Content>
                            </SplitView>

                            <Grid
                                x:Name="ShadowCaster"
                                Grid.RowSpan="2"
                                Width="{TemplateBinding OpenPaneLength}"
                                Opacity="0"
                                HorizontalAlignment="Left">
                                <Grid.RenderTransform>
                                    <CompositeTransform x:Name="ShadowCasterTransform" />
                                </Grid.RenderTransform>
                            </Grid>

                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultNavigationViewItemStyle" TargetType="local:NavigationViewItem">
        <Setter Property="Foreground" Value="{ThemeResource NavigationViewItemForeground}" />
        <Setter Property="Background" Value="{ThemeResource NavigationViewItemBackground}" />
        <Setter Property="BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource NavigationViewItemBorderThickness}" />
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
        <Setter Property="Margin" Value="{ThemeResource NavigationViewItemMargin}" />
        <Setter Property="UseSystemFocusVisuals" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="TabNavigation" Value="Once"/>
        <contract7Present:Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:NavigationViewItem">
                    <Grid x:Name="NVIRootGrid">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ItemOnNavigationViewListPositionStates">
                                <VisualState x:Name="OnLeftNavigation">
                                    <VisualState.Setters>
                                        <Setter Target="NavigationViewItemPresenter.Style" Value="{StaticResource MUX_NavigationViewItemPresenterStyleWhenOnLeftPane}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="OnTopNavigationPrimary">
                                    <VisualState.Setters>
                                        <Setter Target="NavigationViewItemPresenter.Margin" Value="{ThemeResource TopNavigationViewItemMargin}"/>
                                        <Setter Target="NavigationViewItemPresenter.Foreground" Value="{ThemeResource TopNavigationViewItemForeground}" />
                                        <Setter Target="NavigationViewItemPresenter.Style" Value="{StaticResource MUX_NavigationViewItemPresenterStyleWhenOnTopPane}" />
                                        <contract7NotPresent:Setter Target="ChildrenFlyout.Placement" Value="Bottom"/>
                                        <contract7Present:Setter Target="ChildrenFlyout.Placement" Value="BottomEdgeAlignedLeft"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="OnTopNavigationOverflow">
                                    <VisualState.Setters>
                                        <Setter Target="NavigationViewItemPresenter.Style" Value="{StaticResource MUX_NavigationViewItemPresenterStyleWhenOnTopPaneOverflow}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <primitives:NavigationViewItemPresenter
                            x:Name="NavigationViewItemPresenter"
                            Icon="{TemplateBinding Icon}"
                            ContentTransitions="{TemplateBinding ContentTransitions}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            Padding="{TemplateBinding Padding}"
                            Foreground="{TemplateBinding Foreground}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            UseSystemFocusVisuals="{TemplateBinding UseSystemFocusVisuals}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                            Content="{TemplateBinding Content}"
                            primitiveContract7Present:CornerRadius="{TemplateBinding CornerRadius}"
                            IsTabStop="false"
                            Control.IsTemplateFocusTarget="True">
                        </primitives:NavigationViewItemPresenter>
                        <local:ItemsRepeater
                                Grid.Row="1"
                                Visibility="Collapsed"
                                x:Name="NavigationViewItemMenuItemsHost">
                            <local:ItemsRepeater.Layout>
                                <local:StackLayout Orientation="Vertical"/>
                            </local:ItemsRepeater.Layout>
                        </local:ItemsRepeater>
                        <FlyoutBase.AttachedFlyout>
                            <Flyout x:Name="ChildrenFlyout"
                                    contract7NotPresent:Placement="Right"
                                    contract7Present:Placement="RightEdgeAlignedTop">
                                <Flyout.FlyoutPresenterStyle>
                                    <Style TargetType="FlyoutPresenter">
                                        <Setter Property="Padding" Value="{ThemeResource NavigationViewItemChildrenMenuFlyoutPadding}" />
                                        <!-- Set negative top margin to make the flyout align exactly with the button -->
                                        <Setter Property="Margin" Value="0,-4,0,0" />
                                        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Auto" />
                                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                                        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto" />
                                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                                        <Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
                                        <contract7Present:Setter Property="CornerRadius" Value="{ThemeResource OverlayCornerRadius}" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="FlyoutPresenter">
                                                    <ScrollViewer
                                                        x:Name="ScrollViewer"
                                                        ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}"
                                                        HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                                                        HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                                        VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                                                        VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                                        AutomationProperties.AccessibilityView="Raw">
                                                        <ContentPresenter
                                                            x:Name="ContentPresenter"
                                                            Background="{TemplateBinding Background}"
                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                            BorderThickness="{TemplateBinding BorderThickness}"
                                                            Content="{TemplateBinding Content}"
                                                            ContentTemplate="{TemplateBinding ContentTemplate}"
                                                            ContentTransitions="{TemplateBinding ContentTransitions}"
                                                            Padding="{TemplateBinding Padding}"
                                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                            contract7Present:CornerRadius="{TemplateBinding CornerRadius}"
                                                            contract7NotPresent:CornerRadius="{ThemeResource OverlayCornerRadius}"/>
                                                    </ScrollViewer>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Flyout.FlyoutPresenterStyle>
                                <Grid x:Name="FlyoutRootGrid">
                                    <Grid x:Name="FlyoutContentGrid"/>
                                </Grid>
                            </Flyout>
                        </FlyoutBase.AttachedFlyout>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultNavigationViewItemPresenterStyle" TargetType="primitives:NavigationViewItemPresenter" />

    <Style x:Key="DefaultNavigationViewItemHeaderStyle" TargetType="local:NavigationViewItemHeader">
        <Setter Property="IsEnabled" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="AutomationProperties.AccessibilityView" Value="Raw"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:NavigationViewItemHeader">
                    <Grid x:Name="NavigationViewItemHeaderRootGrid">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="PaneStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="HeaderTextCollapsed" To="HeaderTextVisible">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InnerHeaderGrid" Storyboard.TargetProperty="Height">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="40" />
                                            </ObjectAnimationUsingKeyFrames>

                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderText" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>

                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="HeaderText" Storyboard.TargetProperty="Opacity">
                                                <LinearDoubleKeyFrame KeyTime="0:0:0" Value="0.0"/>
                                                <LinearDoubleKeyFrame KeyTime="0:0:0.1" Value="0.0"/>
                                                <SplineDoubleKeyFrame
                                                KeyTime="0:0:0.2"
                                                KeySpline="0.0,0.35 0.15,1.0"
                                                Value="1.0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>

                                    <VisualTransition From="HeaderTextVisible" To="HeaderTextCollapsed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InnerHeaderGrid" Storyboard.TargetProperty="Height">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="20" />
                                            </ObjectAnimationUsingKeyFrames>

                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderText" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="Collapsed" />
                                            </ObjectAnimationUsingKeyFrames>

                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="HeaderText" Storyboard.TargetProperty="Opacity">
                                                <LinearDoubleKeyFrame KeyTime="0:0:0" Value="1.0"/>
                                                <SplineDoubleKeyFrame
                                                KeyTime="0:0:0.1"
                                                KeySpline="0.0,0.35 0.15,1.0"
                                                Value="0.0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>

                                <VisualState x:Name="HeaderTextVisible"/>
                                <VisualState x:Name="HeaderTextCollapsed">
                                    <VisualState.Setters>
                                        <Setter Target="HeaderText.Visibility" Value="Collapsed" />
                                        <Setter Target="InnerHeaderGrid.Height" Value="20"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="InnerHeaderGrid" Height="40" HorizontalAlignment="Left" Margin="{ThemeResource NavigationViewItemInnerHeaderMargin}">
                            <TextBlock
                                x:Name="HeaderText"
                                VerticalAlignment="Center"
                                Margin="0,-1,0,-1"
                                Style="{StaticResource NavigationViewItemHeaderTextStyle}"
                                Text="{TemplateBinding Content}"
                                TextWrapping="NoWrap"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultNavigationViewItemSeparatorStyle" TargetType="local:NavigationViewItemSeparator">
        <Setter Property="IsEnabled" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="AutomationProperties.AccessibilityView" Value="Raw" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid x:Name="NavigationViewItemSeparatorRootGrid">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="NavigationSeparatorLineStates">
                                <VisualState x:Name="HorizontalLine" />
                                <VisualState x:Name="HorizontalLineCompact">
                                    <VisualState.Setters>
                                        <Setter Target="SeparatorLine.Margin" Value="{ThemeResource NavigationViewCompactItemSeparatorMargin}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="VerticalLine">
                                    <VisualState.Setters>
                                        <Setter Target="SeparatorLine.Height" Value="24" />
                                        <Setter Target="SeparatorLine.Width" Value="{ThemeResource TopNavigationViewItemSeparatorWidth}" />
                                        <Setter Target="SeparatorLine.Margin" Value="{ThemeResource TopNavigationViewItemSeparatorMargin}" />
                                        <Setter Target="SeparatorLine.VerticalAlignment" Value="Center" />
                                        <Setter Target="SeparatorLine.Fill" Value="{ThemeResource TopNavigationViewItemSeparatorForeground}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle 
                            x:Name="SeparatorLine"
                            Height="{ThemeResource NavigationViewItemSeparatorHeight}"
                            Margin="{ThemeResource NavigationViewItemSeparatorMargin}"
                            Fill="{ThemeResource NavigationViewItemSeparatorForeground}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="PaneToggleButtonStyle" TargetType="Button">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontFamily" Value="{StaticResource SymbolThemeFontFamily}" />
        <Setter Property="MinHeight" Value="{StaticResource PaneToggleButtonHeight}" />
        <Setter Property="MinWidth" Value="{StaticResource PaneToggleButtonWidth}" />
        <Setter Property="Padding" Value="4,2" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{ThemeResource NavigationViewItemBackground}" />
        <Setter Property="Foreground" Value="{ThemeResource NavigationViewItemForeground}" />
        <Setter Property="BorderThickness" Value="{ThemeResource NavigationViewToggleBorderThickness}" />
        <contract7Present:Setter Property="CornerRadius" Value="{ThemeResource OverlayCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid
                        x:Name="LayoutRoot"
                        Height="{TemplateBinding MinHeight}"
                        Margin="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        HorizontalAlignment="Stretch"
                        contract7Present:CornerRadius="{TemplateBinding CornerRadius}"
                        contract7NotPresent:CornerRadius="{ThemeResource OverlayCornerRadius}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="{ThemeResource PaneToggleButtonHeight}"/>
                        </Grid.RowDefinitions>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewButtonBackgroundPointerOver}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewButtonForegroundPointerOver}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewButtonForegroundPointerOver}" />
                                        <Setter Target="Icon.(AnimatedIcon.State)" Value="PointerOver"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewButtonBackgroundPressed}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewButtonForegroundPressed}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewButtonForegroundPressed}" />
                                        <Setter Target="Icon.(AnimatedIcon.State)" Value="Pressed"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewButtonBackgroundDisabled}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewButtonForegroundDisabled}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border Width="{TemplateBinding MinWidth}">
                            <local:AnimatedIcon x:Name="Icon"
                                                Width="16"
                                                Height="16"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                AutomationProperties.AccessibilityView="Raw"
                                                local:AnimatedIcon.State="Normal">
                                <animatedvisuals:AnimatedGlobalNavigationButtonVisualSource/>
                                <local:AnimatedIcon.FallbackIconSource>
                                    <local:FontIconSource
                                        Glyph="&#xE700;"
                                        FontSize="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FontSize }"/>
                                </local:AnimatedIcon.FallbackIconSource>
                            </local:AnimatedIcon>
                        </Border>

                        <ContentPresenter
                            x:Name="ContentPresenter"
                            VerticalContentAlignment="Center"
                            Content="{TemplateBinding Content}"
                            FontSize="{TemplateBinding FontSize}"
                            Padding="4,0,0,0"
                            Grid.Column="1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NavigationViewPaneSearchButtonStyle" TargetType="Button">
        <Setter Property="MinHeight" Value="40"/>
        <Setter Property="Content" Value="&#xE11A;"/>
        <Setter Property="FontFamily" Value="{ThemeResource SymbolThemeFontFamily}" />
        <Setter Property="BorderThickness" Value="{ThemeResource NavigationViewToggleBorderThickness}" />
        <Setter Property="Background" Value="{ThemeResource NavigationViewItemBackground}" />
        <Setter Property="Foreground" Value="{ThemeResource NavigationViewItemForeground}" />
    </Style>

    <Style x:Key="NavigationViewOverflowButtonStyleWhenPaneOnTop" TargetType="Button">
        <Setter Property="Background" Value="{ThemeResource NavigationViewItemBackground}" />
        <Setter Property="Foreground" Value="{ThemeResource TopNavigationViewItemForeground}" />
        <Setter Property="BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource NavigationViewItemBorderThickness}" />
        <Setter Property="Height" Value="{StaticResource TopNavigationViewOverflowButtonHeight}" />
        <Setter Property="Width" Value="{StaticResource TopNavigationViewOverflowButtonWidth}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="UseSystemFocusVisuals" Value="True" />
        <Setter Property="FocusVisualMargin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid 
                        x:Name="RootGrid" 
                        Height="{TemplateBinding Height}"
                        Width="{TemplateBinding Width}"
                        Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.Background" Value="{ThemeResource TopNavigationViewItemBackgroundPointerOver}" />
                                        <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundPointerOver}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundPointerOver}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.Background" Value="{ThemeResource TopNavigationViewItemBackgroundPressed}" />
                                        <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundPressed}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundPressed}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundDisabled}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle 
                            x:Name="PointerRectangle" 
                            Fill="Transparent"
                            Visibility="Collapsed"/>
                        <FontIcon
                            x:Name="Icon"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            AutomationProperties.AccessibilityView="Raw"
                            FontFamily="{ThemeResource SymbolThemeFontFamily}"
                            FontSize="16"
                            Glyph="&#xE10C;"
                            Foreground="{TemplateBinding Foreground}"
                            IsHitTestVisible="False" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NavigationViewOverflowButtonNoLabelStyleWhenPaneOnTop" TargetType="Button">
        <Setter Property="Background" Value="{ThemeResource NavigationViewItemBackground}" />
        <Setter Property="Foreground" Value="{ThemeResource TopNavigationViewItemForeground}" />
        <Setter Property="BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource NavigationViewItemBorderThickness}" />
        <Setter Property="Height" Value="{StaticResource TopNavigationViewOverflowButtonHeight}" />
        <Setter Property="Width" Value="{StaticResource TopNavigationViewOverflowButtonWidth}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="UseSystemFocusVisuals" Value="True" />
        <Setter Property="FocusVisualMargin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid 
                        x:Name="RootGrid" 
                        Height="{TemplateBinding Height}"
                        Width="{TemplateBinding Width}"
                        Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.Background" Value="{ThemeResource TopNavigationViewItemBackgroundPointerOver}" />
                                        <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundPointerOver}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundPointerOver}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.Background" Value="{ThemeResource TopNavigationViewItemBackgroundPressed}" />
                                        <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundPressed}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundPressed}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundDisabled}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle 
                            x:Name="PointerRectangle" 
                            Fill="Transparent" />
                        <FontIcon
                            x:Name="Icon"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            AutomationProperties.AccessibilityView="Raw"
                            FontFamily="{ThemeResource SymbolThemeFontFamily}"
                            FontSize="20"
                            Glyph="&#xE10C;"
                            Foreground="{TemplateBinding Foreground}"
                            IsHitTestVisible="False" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="primitives:NavigationViewItemPresenter" x:Key="MUX_NavigationViewItemPresenterStyleWhenOnLeftPane">
        <Setter Property="Foreground" Value="{ThemeResource NavigationViewItemForeground}" />
        <Setter Property="Background" Value="{ThemeResource NavigationViewItemBackground}" />
        <Setter Property="BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource NavigationViewItemBorderThickness}" />
        <Setter Property="UseSystemFocusVisuals" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <contract7Present:Setter Property="CornerRadius" Value="{ThemeResource OverlayCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="primitives:NavigationViewItemPresenter">
                    <Grid
                        x:Name="LayoutRoot"
                        MinHeight="{ThemeResource NavigationViewItemOnLeftMinHeight}"
                        Background="{TemplateBinding Background}"
                        contract7Present:CornerRadius="{TemplateBinding CornerRadius}"
                        contract7NotPresent:CornerRadius="{ThemeResource OverlayCornerRadius}"
                        Margin="4,2,4,2"
                        Control.IsTemplateFocusTarget="True">
                        <Grid.Resources>
                            <contract7NotPresent:Storyboard x:Name="ExpandCollapseRotateExpandedStoryboard">
                                <DoubleAnimation
                                    Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                    Storyboard.TargetProperty="Angle"
                                    From="0.0" To="180.0" Duration="0:0:0.1"/>
                            </contract7NotPresent:Storyboard>
                            <contract7NotPresent:Storyboard x:Name="ExpandCollapseRotateCollapsedStoryboard">
                                <DoubleAnimation
                                    Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                    Storyboard.TargetProperty="Angle"
                                    From="180.0" To="0.0" Duration="0:0:0.1"/>
                            </contract7NotPresent:Storyboard>
                        </Grid.Resources>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="PointerStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundPointerOver}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewItemForegroundPointerOver}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundPointerOver}" />
                                        <Setter Target="Icon.(local:AnimatedIcon.State)" Value="PointerOver"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundPressed}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewItemForegroundPressed}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundPressed}" />
                                        <Setter Target="Icon.(local:AnimatedIcon.State)" Value="Pressed"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundSelected}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewItemForegroundSelected}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundSelected}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOverSelected">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundSelectedPointerOver}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewItemForegroundSelectedPointerOver}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundSelectedPointerOver}" />
                                        <Setter Target="Icon.(local:AnimatedIcon.State)" Value="PointerOver"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PressedSelected">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundSelectedPressed}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewItemForegroundSelectedPressed}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundSelectedPressed}" />
                                        <Setter Target="Icon.(local:AnimatedIcon.State)" Value="Pressed"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="DisabledStates">
                                <VisualState x:Name="Enabled"/>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Opacity" Value="{ThemeResource ListViewItemDisabledThemeOpacity}"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="IconStates">
                                <VisualState x:Name="IconVisible" />
                                <VisualState x:Name="IconCollapsed">
                                    <VisualState.Setters>
                                        <Setter Target="IconBox.Visibility" Value="Collapsed" />
                                        <Setter Target="IconColumn.Width" Value="16" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ChevronStates">
                                <VisualState x:Name="ChevronHidden"/>
                                <VisualState x:Name="ChevronVisibleOpen">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevron.Visibility" Value="Visible" />
                                        <contract7NotPresent:Setter Target="ExpandCollapseChevronRotateTransform.Angle" Value="180"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="ChevronVisibleClosed">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevron.Visibility" Value="Visible" />
                                        <contract7NotPresent:Setter Target="ExpandCollapseChevronRotateTransform.Angle" Value="0"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="PointerChevronStates">
                                <VisualState x:Name="NormalChevronHidden"/>
                                <VisualState x:Name="NormalChevronVisibleOpen">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(local:AnimatedIcon.State)" Value="NormalOn"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="NormalChevronVisibleClosed">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(local:AnimatedIcon.State)" Value="NormalOff"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOverChevronHidden">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(local:AnimatedIcon.State)" Value="PointerOverOff"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOverChevronVisibleOpen">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(local:AnimatedIcon.State)" Value="PointerOverOn"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOverChevronVisibleClosed">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(local:AnimatedIcon.State)" Value="PointerOverOff"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PressedChevronHidden">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(local:AnimatedIcon.State)" Value="PressedOff"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PressedChevronVisibleOpen">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(local:AnimatedIcon.State)" Value="PressedOn"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PressedChevronVisibleClosed">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(local:AnimatedIcon.State)" Value="PressedOff"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="PaneAndTopLevelItemStates">
                                <VisualState x:Name="NotClosedCompactAndTopLevelItem" />
                                <VisualState x:Name="ClosedCompactAndTopLevelItem">
                                    <VisualState.Setters>
                                        <Setter Target="ContentPresenter.Margin" Value="{ThemeResource NavigationViewCompactItemContentPresenterMargin}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid x:Name="PresenterContentRootGrid">
                            <!-- Wrap SelectionIndicator in a grid so that its offset is 0,0 - this enables the offset animation. -->
                            <Grid
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center">

                                <Rectangle
                                    x:Name="SelectionIndicator"
                                    Width="3"
                                    Height="16"
                                    Fill="{ThemeResource NavigationViewSelectionIndicatorForeground}"
                                    Opacity="0.0"
                                    contract7Present:RadiusX="2"
                                    contract7Present:RadiusY="2"/>
                            </Grid>

                            <Grid
                                x:Name="ContentGrid"
                                MinHeight="{ThemeResource NavigationViewItemOnLeftMinHeight}"
                                HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <Border x:Name="IconColumn" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.SmallerIconWidth}">
                                    <Viewbox x:Name="IconBox"
                                        Height="16"
                                        Margin="{ThemeResource NavigationViewItemOnLeftIconBoxMargin}">
                                        <ContentPresenter 
                                            x:Name="Icon" 
                                            Content="{TemplateBinding Icon}"
                                            local:AnimatedIcon.State="Normal"/>
                                    </Viewbox>
                                </Border>

                                <ContentPresenter
                                    x:Name="ContentPresenter"
                                    Grid.Column="1"
                                    Margin="{ThemeResource NavigationViewItemContentPresenterMargin}"
                                    ContentTransitions="{TemplateBinding ContentTransitions}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    Content="{TemplateBinding Content}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                    Padding="{TemplateBinding Padding}"
                                    AutomationProperties.AccessibilityView="Raw"/>

                                <Grid
                                    x:Name="ExpandCollapseChevron"
                                    Grid.Column="2"
                                    Visibility="Collapsed"
                                    HorizontalAlignment="Right"
                                    Width="40"
                                    Margin="{ThemeResource NavigationViewItemExpandChevronMargin}"
                                    Background="Transparent">
                                    <local:AnimatedIcon
                                        Width="12"
                                        Height="12"
                                        RenderTransformOrigin="0.5, 0.5"
                                        x:Name="ExpandCollapseChevronIcon"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        AutomationProperties.AccessibilityView="Raw"
                                        local:AnimatedIcon.State="NormalOff">
                                        <animatedvisuals:AnimatedChevronUpDownSmallVisualSource/>
                                        <local:AnimatedIcon.FallbackIconSource>
                                            <local:FontIconSource
                                                Foreground="{ThemeResource NavigationViewItemForeground}"
                                                FontSize="{ThemeResource NavigationViewItemExpandedGlyphFontSize}"
                                                Glyph="{StaticResource NavigationViewItemExpandedGlyph}"
                                                FontFamily="{StaticResource SymbolThemeFontFamily}"/>
                                        </local:AnimatedIcon.FallbackIconSource>
                                        <local:AnimatedIcon.RenderTransform>
                                            <contract7NotPresent:RotateTransform x:Name="ExpandCollapseChevronRotateTransform" Angle="0"/>
                                        </local:AnimatedIcon.RenderTransform>
                                    </local:AnimatedIcon>
                                </Grid>
                            </Grid>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:NavigationViewItem" x:Key="MUX_NavigationViewSettingsItemStyleWhenOnTopPane">
        <Setter Property="Foreground" Value="{ThemeResource NavigationViewItemForeground}" />
        <Setter Property="Background" Value="{ThemeResource NavigationViewItemBackground}" />
        <Setter Property="BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource NavigationViewItemBorderThickness}" />
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
        <Setter Property="UseSystemFocusVisuals" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:NavigationViewItem">
                    <Grid 
                        x:Name="LayoutRoot" 
                        Background="{TemplateBinding Background}"
                        Control.IsTemplateFocusTarget="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="PointerStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource TopNavigationViewItemBackgroundPointerOver}" />
                                        <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundPointerOver}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundPointerOver}" />
                                        <Setter Target="Icon.(local:AnimatedIcon.State)" Value="PointerOver"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource TopNavigationViewItemBackgroundPressed}" />
                                        <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundPressed}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundPressed}" />
                                        <Setter Target="Icon.(local:AnimatedIcon.State)" Value="Pressed"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource TopNavigationViewItemBackgroundSelected}" />
                                        <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundSelected}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundSelected}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOverSelected">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource TopNavigationViewItemBackgroundPointerOver}" />
                                        <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundSelectedPointerOver}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundPointerOver}" />
                                        <Setter Target="Icon.(local:AnimatedIcon.State)" Value="PointerOver"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PressedSelected">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource TopNavigationViewItemBackgroundPressed}" />
                                        <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundSelectedPressed}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundPressed}" />
                                        <Setter Target="Icon.(local:AnimatedIcon.State)" Value="Pressed"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DisabledStates">
                                <VisualState x:Name="Enabled"/>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundDisabled}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle 
                            x:Name="PointerRectangle" 
                            Fill="Transparent" />
                        <Grid x:Name="ContentGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="IconRow" Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Viewbox 
                                x:Name="IconBox" 
                                Grid.Row="1"
                                Grid.Column="1"
                                Height="16"
                                Width ="40"
                                Margin="0"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center">
                                <ContentPresenter 
                                    x:Name="Icon" 
                                    Content="{TemplateBinding Icon}"
                                    Foreground="{TemplateBinding Foreground}"
                                    local:AnimatedIcon.State="Normal" />
                            </Viewbox>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="primitives:NavigationViewItemPresenter" x:Key="MUX_NavigationViewItemPresenterStyleWhenOnTopPane">
        <Setter Property="Foreground" Value="{ThemeResource TopNavigationViewItemForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="primitives:NavigationViewItemPresenter">
                    <Grid 
                        x:Name="LayoutRoot" 
                        Background="{TemplateBinding Background}"
                        Control.IsTemplateFocusTarget="True">
                        <Grid.Resources>
                            <contract7NotPresent:Storyboard x:Name="ExpandCollapseRotateExpandedStoryboard">
                                <DoubleAnimation
                                    Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                    Storyboard.TargetProperty="Angle"
                                    From="0.0" To="180.0" Duration="0:0:0.1"/>
                            </contract7NotPresent:Storyboard>
                            <contract7NotPresent:Storyboard x:Name="ExpandCollapseRotateCollapsedStoryboard">
                                <DoubleAnimation
                                    Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                    Storyboard.TargetProperty="Angle"
                                    From="180.0" To="0.0" Duration="0:0:0.1"/>
                            </contract7NotPresent:Storyboard>
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="PointerStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource TopNavigationViewItemBackgroundPointerOver}" />
                                        <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundPointerOver}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundPointerOver}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundPointerOver}" />
                                        <Setter Target="Icon.(local:AnimatedIcon.State)" Value="PointerOver"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource TopNavigationViewItemBackgroundPressed}" />
                                        <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundPressed}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundPressed}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundPressed}" />
                                        <Setter Target="Icon.(local:AnimatedIcon.State)" Value="Pressed"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource TopNavigationViewItemBackgroundSelected}" />
                                        <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundSelected}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundSelected}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundSelected}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOverSelected">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource TopNavigationViewItemBackgroundPointerOver}" />
                                        <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundSelectedPointerOver}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundSelectedPointerOver}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundSelectedPointerOver}" />
                                        <Setter Target="Icon.(local:AnimatedIcon.State)" Value="PointerOver"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PressedSelected">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource TopNavigationViewItemBackgroundPressed}" />
                                        <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundSelectedPressed}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundSelectedPressed}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundSelectedPressed}" />
                                        <Setter Target="Icon.(local:AnimatedIcon.State)" Value="Pressed"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DisabledStates">
                                <VisualState x:Name="Enabled"/>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundDisabled}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundDisabled}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="NavigationViewIconPositionStates">
                                <VisualState x:Name="IconOnLeft" />
                                <VisualState x:Name="IconOnly">
                                    <VisualState.Setters>
                                        <Setter Target="PointerRectangle.Visibility" Value="Visible" />
                                        <Setter Target="LayoutRoot.MinWidth" Value="48" />
                                        <Setter Target="ContentPresenter.Visibility" Value="Collapsed" />
                                        <Setter Target="SelectionIndicatorGrid.Margin" Value="4,0,4,4" />
                                        <Setter Target="ExpandCollapseChevron.Margin" Value="{ThemeResource TopNavigationViewItemIconOnlyExpandChevronMargin}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="ContentOnly">
                                    <VisualState.Setters>
                                        <Setter Target="IconBox.Visibility" Value="Collapsed" />
                                        <Setter Target="ContentPresenter.Margin" Value="{ThemeResource TopNavigationViewItemContentOnlyContentPresenterMargin}" />
                                        <Setter Target="SelectionIndicatorGrid.Margin" Value="12,0,12,4" />
                                        <Setter Target="ExpandCollapseChevron.Margin" Value="{ThemeResource TopNavigationViewItemContentOnlyExpandChevronMargin}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ChevronStates">
                                <VisualState x:Name="ChevronHidden"/>
                                <VisualState x:Name="ChevronVisibleOpen">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevron.Visibility" Value="Visible" />
                                        <contract7NotPresent:Setter Target="ExpandCollapseChevronRotateTransform.Angle" Value="180"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="ChevronVisibleClosed">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevron.Visibility" Value="Visible" />
                                        <contract7NotPresent:Setter Target="ExpandCollapseChevronRotateTransform.Angle" Value="0"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="PointerChevronStates">
                                <VisualState x:Name="NormalChevronHidden"/>
                                <VisualState x:Name="NormalChevronVisibleOpen">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(local:AnimatedIcon.State)" Value="NormalOn"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="NormalChevronVisibleClosed">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(local:AnimatedIcon.State)" Value="NormalOff"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOverChevronHidden">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(local:AnimatedIcon.State)" Value="PointerOverOff"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOverChevronVisibleOpen">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(local:AnimatedIcon.State)" Value="PointerOverOn"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOverChevronVisibleClosed">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(local:AnimatedIcon.State)" Value="PointerOverOff"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PressedChevronHidden">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(local:AnimatedIcon.State)" Value="PressedOff"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PressedChevronVisibleOpen">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(local:AnimatedIcon.State)" Value="PressedOn"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PressedChevronVisibleClosed">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(local:AnimatedIcon.State)" Value="PressedOff"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle 
                            x:Name="PointerRectangle" 
                            Fill="Transparent"
                            Visibility="Collapsed" />
                        <Grid x:Name="ContentGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Viewbox 
                                x:Name="IconBox" 
                                Height="16"
                                Width="16"
                                Margin="12,0,0,0"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center">
                                <ContentPresenter 
                                    x:Name="Icon" 
                                    Content="{TemplateBinding Icon}"
                                    Foreground="{TemplateBinding Foreground}"
                                    local:AnimatedIcon.State="Normal"/>
                            </Viewbox>
                            <ContentPresenter
                                x:Name="ContentPresenter"
                                Grid.Column="1"
                                Margin="{ThemeResource TopNavigationViewItemContentPresenterMargin}"
                                TextWrapping="NoWrap"
                                Foreground="{TemplateBinding Foreground}"
                                ContentTransitions="{TemplateBinding ContentTransitions}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Content="{TemplateBinding Content}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                VerticalAlignment="Center"
                                AutomationProperties.AccessibilityView="Raw"/>
                            <Grid
                                x:Name="ExpandCollapseChevron"
                                Grid.Column="2"
                                Visibility="Collapsed"
                                HorizontalAlignment="Right"
                                Width="40"
                                Margin="{ThemeResource TopNavigationViewItemExpandChevronMargin}"
                                Background="Transparent">
                                <local:AnimatedIcon
                                        Width="12"
                                        Height="12"
                                        RenderTransformOrigin="0.5, 0.5"
                                        x:Name="ExpandCollapseChevronIcon"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        AutomationProperties.AccessibilityView="Raw"
                                        local:AnimatedIcon.State="NormalOff">
                                    <animatedvisuals:AnimatedChevronUpDownSmallVisualSource/>
                                    <local:AnimatedIcon.FallbackIconSource>
                                        <local:FontIconSource
                                                Foreground="{ThemeResource NavigationViewItemForeground}"
                                                FontSize="{ThemeResource NavigationViewItemExpandedGlyphFontSize}"
                                                Glyph="{StaticResource NavigationViewItemExpandedGlyph}"
                                                FontFamily="{StaticResource SymbolThemeFontFamily}"/>
                                    </local:AnimatedIcon.FallbackIconSource>
                                    <local:AnimatedIcon.RenderTransform>
                                        <contract7NotPresent:RotateTransform x:Name="ExpandCollapseChevronRotateTransform" Angle="0"/>
                                    </local:AnimatedIcon.RenderTransform>
                                </local:AnimatedIcon>
                            </Grid>
                        </Grid>
                        <Grid 
                            x:Name="SelectionIndicatorGrid"
                            Margin="16,0,16,4"
                            VerticalAlignment="Bottom"
                            HorizontalAlignment="Center">
                            <Rectangle
                                x:Name="SelectionIndicator"
                                Height="3"
                                Width="16"
                                Fill="{ThemeResource NavigationViewSelectionIndicatorForeground}"
                                Opacity="0"
                                contract7Present:RadiusX="2"
                                contract7Present:RadiusY="2"
                                contract7NotPresent:RadiusX="2"
                                contract7NotPresent:RadiusY="2" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="primitives:NavigationViewItemPresenter" x:Key="MUX_NavigationViewItemPresenterStyleWhenOnTopPaneOverflow">
        <Setter Property="Foreground" Value="{ThemeResource TopNavigationViewItemForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="primitives:NavigationViewItemPresenter">
                    <Grid
                        x:Name="LayoutRoot"
                        Height="36" 
                        Background="{TemplateBinding Background}"
                        Control.IsTemplateFocusTarget="True">
                        <Grid.Resources>
                            <contract7NotPresent:Storyboard x:Name="ExpandCollapseRotateExpandedStoryboard">
                                <DoubleAnimation
                                    Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                    Storyboard.TargetProperty="Angle"
                                    From="0.0" To="180.0" Duration="0:0:0.1"/>
                            </contract7NotPresent:Storyboard>
                            <contract7NotPresent:Storyboard x:Name="ExpandCollapseRotateCollapsedStoryboard">
                                <DoubleAnimation
                                    Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                    Storyboard.TargetProperty="Angle"
                                    From="180.0" To="0.0" Duration="0:0:0.1"/>
                            </contract7NotPresent:Storyboard>
                        </Grid.Resources>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="PointerStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundPointerOver}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewItemForegroundPointerOver}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundPointerOver}" />
                                        <Setter Target="Icon.(local:AnimatedIcon.State)" Value="PointerOver"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundPressed}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewItemForegroundPressed}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundPressed}" />
                                        <Setter Target="Icon.(local:AnimatedIcon.State)" Value="Pressed"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundSelected}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewItemForegroundSelected}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundSelected}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOverSelected">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundSelectedPointerOver}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewItemForegroundPointerOver}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundPointerOver}" />
                                        <Setter Target="Icon.(local:AnimatedIcon.State)" Value="PointerOver"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PressedSelected">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundSelectedPressed}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewItemForegroundPressed}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundPressed}" />
                                        <Setter Target="Icon.(local:AnimatedIcon.State)" Value="Pressed"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DisabledStates">
                                <VisualState x:Name="Enabled"/>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundDisabled}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundDisabled}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="NavigationViewIconPositionStates">
                                <VisualState x:Name="IconOnLeft" />
                                <VisualState x:Name="IconOnly" />
                                <VisualState x:Name="ContentOnly">
                                    <VisualState.Setters>
                                        <Setter Target="IconBox.Visibility" Value="Collapsed" />
                                        <Setter Target="ContentPresenter.Margin" Value="{ThemeResource TopNavigationViewItemOnOverflowNoIconContentPresenterMargin}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ChevronStates">
                                <VisualState x:Name="ChevronHidden"/>
                                <VisualState x:Name="ChevronVisibleOpen">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevron.Visibility" Value="Visible" />
                                        <Setter Target="ExpandCollapseChevronRotateTransform.Angle" Value="180"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="ChevronVisibleClosed">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevron.Visibility" Value="Visible" />
                                        <Setter Target="ExpandCollapseChevronRotateTransform.Angle" Value="0"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="PointerChevronStates">
                                <VisualState x:Name="NormalChevronHidden"/>
                                <VisualState x:Name="NormalChevronVisibleOpen">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(local:AnimatedIcon.State)" Value="NormalOn"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="NormalChevronVisibleClosed">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(local:AnimatedIcon.State)" Value="NormalOff"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOverChevronHidden">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(local:AnimatedIcon.State)" Value="PointerOverOff"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOverChevronVisibleOpen">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(local:AnimatedIcon.State)" Value="PointerOverOn"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOverChevronVisibleClosed">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(local:AnimatedIcon.State)" Value="PointerOverOff"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PressedChevronHidden">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(local:AnimatedIcon.State)" Value="PressedOff"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PressedChevronVisibleOpen">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(local:AnimatedIcon.State)" Value="PressedOn"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PressedChevronVisibleClosed">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(local:AnimatedIcon.State)" Value="PressedOff"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="PresenterContentRootGrid">
                            <!-- Wrap SelectionIndicator in a grid so that its offset is 0,0 - this enables the offset animation. -->
                            <Grid
                                Margin="4,0,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center">

                                <Rectangle
                                x:Name="SelectionIndicator"
                                Width="2"
                                Height="24"
                                Fill="{ThemeResource NavigationViewSelectionIndicatorForeground}"
                                Opacity="0.0"
                                contract7Present:RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
                                contract7Present:RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}"
                                contract7NotPresent:RadiusX="{Binding Source={ThemeResource ControlCornerRadius}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
                                contract7NotPresent:RadiusY="{Binding Source={ThemeResource ControlCornerRadius}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}"/>
                            </Grid>
                            <Grid x:Name="ContentGrid">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Viewbox 
                                    x:Name="IconBox" 
                                    Height="16"
                                    Width="16"
                                    Margin="16,0,0,0"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center">
                                    <ContentPresenter 
                                        x:Name="Icon" 
                                        Content="{TemplateBinding Icon}"
                                        Foreground="{TemplateBinding Foreground}"
                                        local:AnimatedIcon.State="Normal" />
                                </Viewbox>
                                <ContentPresenter
                                    x:Name="ContentPresenter"
                                    Grid.Column="1"
                                    Margin="{ThemeResource TopNavigationViewItemOnOverflowContentPresenterMargin}"
                                    Foreground="{TemplateBinding Foreground}"
                                    TextWrapping="NoWrap"
                                    ContentTransitions="{TemplateBinding ContentTransitions}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    Content="{TemplateBinding Content}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                    VerticalAlignment="Center"
                                    AutomationProperties.AccessibilityView="Raw"/>
                                <Grid
                                    x:Name="ExpandCollapseChevron"
                                    Grid.Column="2"
                                    Visibility="Collapsed"
                                    HorizontalAlignment="Right"
                                    Width="40"
                                    Margin="{ThemeResource TopNavigationViewItemOnOverflowExpandChevronMargin}"
                                    Padding="{ThemeResource TopNavigationViewItemOnOverflowExpandChevronPadding}"
                                    Background="Transparent">
                                    <local:AnimatedIcon
                                        Width="12"
                                        Height="12"
                                        RenderTransformOrigin="0.5, 0.5"
                                        x:Name="ExpandCollapseChevronIcon"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        AutomationProperties.AccessibilityView="Raw"
                                        local:AnimatedIcon.State="NormalOff">
                                        <animatedvisuals:AnimatedChevronUpDownSmallVisualSource/>
                                        <local:AnimatedIcon.FallbackIconSource>
                                            <local:FontIconSource
                                                Foreground="{ThemeResource NavigationViewItemForeground}"
                                                FontSize="{ThemeResource NavigationViewItemExpandedGlyphFontSize}"
                                                Glyph="{StaticResource NavigationViewItemExpandedGlyph}"
                                                FontFamily="{StaticResource SymbolThemeFontFamily}"/>
                                        </local:AnimatedIcon.FallbackIconSource>
                                        <local:AnimatedIcon.RenderTransform>
                                            <contract7NotPresent:RotateTransform x:Name="ExpandCollapseChevronRotateTransform" Angle="0"/>
                                        </local:AnimatedIcon.RenderTransform>
                                    </local:AnimatedIcon>
                                </Grid>
                            </Grid>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NavigationViewItemHeaderTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="OpticalMarginAlignment" Value="TrimSideBearings" />
        <Setter Property="TextWrapping" Value="NoWrap"/>
    </Style>

    <!-- based on TitleTextBlockStyle -->
    <Style x:Key="NavigationViewTitleHeaderContentControlTextStyle" TargetType="ContentControl">
        <Setter Property="FontWeight" Value="SemiLight" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="FontFamily" Value="XamlAutoFontFamily" />
        <Setter Property="Margin" Value="{ThemeResource NavigationViewHeaderMargin}"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
    </Style>

</ResourceDictionary>
