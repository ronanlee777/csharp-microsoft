<!-- Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT License. See LICENSE in the project root for license information. -->
<Application
    x:Class="MUXControlsTestApp.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:MUXControlsTestApp"
    xmlns:controls="using:Microsoft.UI.Xaml.Controls">

    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.ThemeDictionaries>
                <!-- intentionally empty, used by ThemeResourcesTests. -->
                <ResourceDictionary x:Key="Default">
                </ResourceDictionary>
                <ResourceDictionary x:Key="Light">
                </ResourceDictionary>
                <ResourceDictionary x:Key="HighContrast">
                </ResourceDictionary>
            </ResourceDictionary.ThemeDictionaries>
            <ResourceDictionary.MergedDictionaries>
                <controls:XamlControlsResources/>

                <!-- NOTE: If you change this entry, you must update App.StyleOverridesPlaceholder -->
                <ResourceDictionary x:Name="_styleOverridesPlaceholder"/>
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="StandardGroupHeader" TargetType="TextBlock">
                <Setter Property="FontSize" Value="22"/>
                <Setter Property="Margin" Value="0,0,0,8"/>
                <Setter Property="AutomationProperties.HeadingLevel" Value="Level2"/>
            </Style>

            <Style x:Key="StandardGroupingStackPanel" TargetType="StackPanel">
                <Setter Property="BorderBrush" Value="{ThemeResource SystemChromeGrayColor}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="8"/>
            </Style>

            <Style TargetType="local:AnimatedIconHost">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="local:AnimatedIconHost">
                            <StackPanel x:Name="RootGrid" Background="{TemplateBinding Background}">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal">
                                            <VisualState.Setters>
                                                <Setter Target="Icon.(controls:AnimatedIcon.State)" Value="Normal"/>
                                                <Setter Target="StateTextBlock.Text" Value="Normal"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="PointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="Icon.(controls:AnimatedIcon.State)" Value="Hover"/>
                                                <Setter Target="StateTextBlock.Text" Value="Hover"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <VisualState.Setters>
                                                <Setter Target="Icon.(controls:AnimatedIcon.State)" Value="Pressed"/>
                                                <Setter Target="StateTextBlock.Text" Value="Pressed"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <VisualState.Setters>
                                                <Setter Target="Icon.(controls:AnimatedIcon.State)" Value="Disabled"/>
                                                <Setter Target="StateTextBlock.Text" Value="Disabled"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <ContentPresenter Height="200" Width="200" x:Name="IconPresenter" Foreground="{TemplateBinding Foreground}">
                                    <Border x:Name="Icon" controls:AnimatedIcon.State="Normal"/>
                                </ContentPresenter>
                                <TextBlock x:Name="StateTextBlock" HorizontalAlignment="Center"/>
                                <TextBlock x:Name="TransitionTextBlock" HorizontalAlignment="Center"/>
                            </StackPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <local:DoubleToStringConverter x:Key="DoubleToStringConverter"/>
        </ResourceDictionary>
    </Application.Resources>

</Application>
