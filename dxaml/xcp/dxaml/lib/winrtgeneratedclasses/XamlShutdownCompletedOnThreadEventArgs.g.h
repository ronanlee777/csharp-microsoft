// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#pragma once

#include <FeatureFlags.h>
#if WI_IS_FEATURE_PRESENT(Feature_ExperimentalApi) 
#define FEATURE_EXPERIMENTALAPI_OVERRIDE override
#else
#define FEATURE_EXPERIMENTALAPI_OVERRIDE
#endif
#define __XamlShutdownCompletedOnThreadEventArgs_GUID "c21339b3-e8f2-42b1-b5fc-335b78e66879"

#pragma region forwarders
#if WI_IS_FEATURE_PRESENT(Feature_ExperimentalApi)
namespace ctl
{
    template<typename impl_type>
    class interface_forwarder< ABI::Microsoft::UI::Xaml::Hosting::IXamlShutdownCompletedOnThreadEventArgs, impl_type> final
        : public ctl::iinspectable_forwarder_base< ABI::Microsoft::UI::Xaml::Hosting::IXamlShutdownCompletedOnThreadEventArgs, impl_type>
    {
        impl_type* This() { return this->This_helper<impl_type>(); }
        IFACEMETHOD(GetDispatcherQueueDeferral)(_Outptr_ ABI::Windows::Foundation::IDeferral** ppResult) override { return This()->GetDispatcherQueueDeferral(ppResult); }
    };
}
#endif
#pragma endregion

namespace DirectUI
{
    class XamlShutdownCompletedOnThreadEventArgs;

    class __declspec(novtable) XamlShutdownCompletedOnThreadEventArgsGenerated:
        public ctl::WeakReferenceSource
#if WI_IS_FEATURE_PRESENT(Feature_ExperimentalApi)
        , public ctl::forwarder_holder< ABI::Microsoft::UI::Xaml::Hosting::IXamlShutdownCompletedOnThreadEventArgs, XamlShutdownCompletedOnThreadEventArgsGenerated >
#endif
    {
        friend class DirectUI::XamlShutdownCompletedOnThreadEventArgs;

        INSPECTABLE_CLASS(L"Microsoft.UI.Xaml.Hosting.XamlShutdownCompletedOnThreadEventArgs");

        BEGIN_INTERFACE_MAP(XamlShutdownCompletedOnThreadEventArgsGenerated, ctl::WeakReferenceSource)
#if WI_IS_FEATURE_PRESENT(Feature_ExperimentalApi)
            INTERFACE_ENTRY(XamlShutdownCompletedOnThreadEventArgsGenerated, ABI::Microsoft::UI::Xaml::Hosting::IXamlShutdownCompletedOnThreadEventArgs)
#else
            INTERFACE_ENTRY(DUMMYINTERFACE, IUnknown)
#endif
        END_INTERFACE_MAP(XamlShutdownCompletedOnThreadEventArgsGenerated, ctl::WeakReferenceSource)

    public:
        XamlShutdownCompletedOnThreadEventArgsGenerated();
        ~XamlShutdownCompletedOnThreadEventArgsGenerated() override;

        // Event source typedefs.


        // Properties.

        // Events.

        // Methods.
        _Check_return_ HRESULT STDMETHODCALLTYPE GetDispatcherQueueDeferral(_Outptr_ ABI::Windows::Foundation::IDeferral** ppResult);


    protected:
        HRESULT QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject) override;

    private:

        // Fields.
    };
}

#include "XamlShutdownCompletedOnThreadEventArgs_Partial.h"

