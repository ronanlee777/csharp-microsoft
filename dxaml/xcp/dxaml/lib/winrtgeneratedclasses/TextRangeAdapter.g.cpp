// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
//------------------------------------------------------------------------
//
//  Abstract:
//
//      XAML types.
//      NOTE: This file was generated by a tool.
//
//------------------------------------------------------------------------

#include "TextRangeAdapter.g.h"
#include "IRawElementProviderSimple.g.h"
#include "TextAdapter.g.h"

// Constructors/destructors.
DirectUI::TextRangeAdapterGenerated::TextRangeAdapterGenerated()
{
}

DirectUI::TextRangeAdapterGenerated::~TextRangeAdapterGenerated()
{
}

HRESULT DirectUI::TextRangeAdapterGenerated::QueryInterfaceImpl(_In_ REFIID iid, _Outptr_ void** ppObject)
{
    if (InlineIsEqualGUID(iid, __uuidof(DirectUI::TextRangeAdapter)))
    {
        *ppObject = static_cast<DirectUI::TextRangeAdapter*>(this);
    }
    else if (InlineIsEqualGUID(iid, __uuidof(ABI::Microsoft::UI::Xaml::Automation::Provider::ITextRangeProvider)))
    {
        *ppObject = static_cast<ABI::Microsoft::UI::Xaml::Automation::Provider::ITextRangeProvider*>(this);
    }
    else
    {
        RRETURN(DirectUI::DependencyObject::QueryInterfaceImpl(iid, ppObject));
    }

    AddRefOuter();
    RRETURN(S_OK);
}

// Properties.
_Check_return_ HRESULT DirectUI::TextRangeAdapterGenerated::get_Owner(_Outptr_result_maybenull_ DirectUI::TextAdapter** ppValue)
{
    RRETURN(GetValueByKnownIndex(KnownPropertyIndex::TextRangeAdapter_Owner, ppValue));
}

// Events.

// Methods.
IFACEMETHODIMP DirectUI::TextRangeAdapterGenerated::AddToSelection()
{
    HRESULT hr = S_OK;
    if (EventEnabledApiFunctionCallStart())
    {
        ApiEtwStart(this, KnownMethodIndex::TextRangeAdapter_AddToSelection);
    }
    
    IFC(CheckThread());
    IFC(DefaultStrictApiCheck(this));
    IFC(static_cast<TextRangeAdapter*>(this)->AddToSelectionImpl());
Cleanup:
    if (EventEnabledApiFunctionCallStop())
    {
        ApiEtwStop(this, hr);
    }
    RRETURN(hr);
}
IFACEMETHODIMP DirectUI::TextRangeAdapterGenerated::Clone(_Outptr_ ABI::Microsoft::UI::Xaml::Automation::Provider::ITextRangeProvider** ppReturnValue)
{
    HRESULT hr = S_OK;
    if (EventEnabledApiFunctionCallStart())
    {
        ApiEtwStart(this, KnownMethodIndex::TextRangeAdapter_Clone);
    }
    ARG_VALIDRETURNPOINTER(ppReturnValue);
    IFC(CheckThread());
    IFC(DefaultStrictApiCheck(this));
    IFC(static_cast<TextRangeAdapter*>(this)->CloneImpl(ppReturnValue));
Cleanup:
    if (EventEnabledApiFunctionCallStop())
    {
        ApiEtwStop(this, hr);
    }
    RRETURN(hr);
}
IFACEMETHODIMP DirectUI::TextRangeAdapterGenerated::Compare(_In_ ABI::Microsoft::UI::Xaml::Automation::Provider::ITextRangeProvider* pTextRangeProvider, _Out_ BOOLEAN* pReturnValue)
{
    HRESULT hr = S_OK;
    if (EventEnabledApiFunctionCallStart())
    {
        ApiEtwStart(this, KnownMethodIndex::TextRangeAdapter_Compare);
    }
    ARG_NOTNULL(pTextRangeProvider, "textRangeProvider");
    ARG_VALIDRETURNPOINTER(pReturnValue);
    IFC(CheckThread());
    IFC(DefaultStrictApiCheck(this));
    IFC(static_cast<TextRangeAdapter*>(this)->CompareImpl(pTextRangeProvider, pReturnValue));
Cleanup:
    if (EventEnabledApiFunctionCallStop())
    {
        ApiEtwStop(this, hr);
    }
    RRETURN(hr);
}
IFACEMETHODIMP DirectUI::TextRangeAdapterGenerated::CompareEndpoints(_In_ ABI::Microsoft::UI::Xaml::Automation::Text::TextPatternRangeEndpoint endpoint, _In_ ABI::Microsoft::UI::Xaml::Automation::Provider::ITextRangeProvider* pTextRangeProvider, _In_ ABI::Microsoft::UI::Xaml::Automation::Text::TextPatternRangeEndpoint targetEndpoint, _Out_ INT* pReturnValue)
{
    HRESULT hr = S_OK;
    if (EventEnabledApiFunctionCallStart())
    {
        ApiEtwStart(this, KnownMethodIndex::TextRangeAdapter_CompareEndpoints);
    }
    ARG_NOTNULL(pTextRangeProvider, "textRangeProvider");
    ARG_VALIDRETURNPOINTER(pReturnValue);
    IFC(CheckThread());
    IFC(DefaultStrictApiCheck(this));
    IFC(static_cast<TextRangeAdapter*>(this)->CompareEndpointsImpl(endpoint, pTextRangeProvider, targetEndpoint, pReturnValue));
Cleanup:
    if (EventEnabledApiFunctionCallStop())
    {
        ApiEtwStop(this, hr);
    }
    RRETURN(hr);
}
IFACEMETHODIMP DirectUI::TextRangeAdapterGenerated::ExpandToEnclosingUnit(_In_ ABI::Microsoft::UI::Xaml::Automation::Text::TextUnit unit)
{
    HRESULT hr = S_OK;
    if (EventEnabledApiFunctionCallStart())
    {
        ApiEtwStart(this, KnownMethodIndex::TextRangeAdapter_ExpandToEnclosingUnit);
    }
    
    IFC(CheckThread());
    IFC(DefaultStrictApiCheck(this));
    IFC(static_cast<TextRangeAdapter*>(this)->ExpandToEnclosingUnitImpl(unit));
Cleanup:
    if (EventEnabledApiFunctionCallStop())
    {
        ApiEtwStop(this, hr);
    }
    RRETURN(hr);
}
IFACEMETHODIMP DirectUI::TextRangeAdapterGenerated::FindAttribute(_In_ INT attributeId, _In_ IInspectable* pValue, _In_ BOOLEAN backward, _Outptr_ ABI::Microsoft::UI::Xaml::Automation::Provider::ITextRangeProvider** ppReturnValue)
{
    HRESULT hr = S_OK;
    if (EventEnabledApiFunctionCallStart())
    {
        ApiEtwStart(this, KnownMethodIndex::TextRangeAdapter_FindAttribute);
    }
    ARG_NOTNULL(pValue, "value");
    ARG_VALIDRETURNPOINTER(ppReturnValue);
    IFC(CheckThread());
    IFC(DefaultStrictApiCheck(this));
    IFC(static_cast<TextRangeAdapter*>(this)->FindAttributeImpl(attributeId, pValue, backward, ppReturnValue));
Cleanup:
    if (EventEnabledApiFunctionCallStop())
    {
        ApiEtwStop(this, hr);
    }
    RRETURN(hr);
}
IFACEMETHODIMP DirectUI::TextRangeAdapterGenerated::FindText(_In_ HSTRING text, _In_ BOOLEAN backward, _In_ BOOLEAN ignoreCase, _Outptr_ ABI::Microsoft::UI::Xaml::Automation::Provider::ITextRangeProvider** ppReturnValue)
{
    HRESULT hr = S_OK;
    if (EventEnabledApiFunctionCallStart())
    {
        ApiEtwStart(this, KnownMethodIndex::TextRangeAdapter_FindText);
    }
    ARG_NOTNULL(text, "text");
    ARG_VALIDRETURNPOINTER(ppReturnValue);
    IFC(CheckThread());
    IFC(DefaultStrictApiCheck(this));
    IFC(static_cast<TextRangeAdapter*>(this)->FindTextImpl(text, backward, ignoreCase, ppReturnValue));
Cleanup:
    if (EventEnabledApiFunctionCallStop())
    {
        ApiEtwStop(this, hr);
    }
    RRETURN(hr);
}
IFACEMETHODIMP DirectUI::TextRangeAdapterGenerated::GetAttributeValue(_In_ INT attributeId, _Outptr_ IInspectable** ppReturnValue)
{
    HRESULT hr = S_OK;
    if (EventEnabledApiFunctionCallStart())
    {
        ApiEtwStart(this, KnownMethodIndex::TextRangeAdapter_GetAttributeValue);
    }
    ARG_VALIDRETURNPOINTER(ppReturnValue);
    IFC(CheckThread());
    IFC(DefaultStrictApiCheck(this));
    IFC(static_cast<TextRangeAdapter*>(this)->GetAttributeValueImpl(attributeId, ppReturnValue));
Cleanup:
    if (EventEnabledApiFunctionCallStop())
    {
        ApiEtwStop(this, hr);
    }
    RRETURN(hr);
}
IFACEMETHODIMP DirectUI::TextRangeAdapterGenerated::GetBoundingRectangles(_Out_ UINT* pReturnValueCount, _Out_writes_to_ptr_(*pReturnValueCount) DOUBLE** ppReturnValue)
{
    HRESULT hr = S_OK;
    if (EventEnabledApiFunctionCallStart())
    {
        ApiEtwStart(this, KnownMethodIndex::TextRangeAdapter_GetBoundingRectangles);
    }
    ARG_VALIDRETURNPOINTER(ppReturnValue);
    IFC(CheckThread());
    IFC(DefaultStrictApiCheck(this));
    IFC(static_cast<TextRangeAdapter*>(this)->GetBoundingRectanglesImpl(pReturnValueCount, ppReturnValue));
Cleanup:
    if (EventEnabledApiFunctionCallStop())
    {
        ApiEtwStop(this, hr);
    }
    RRETURN(hr);
}
IFACEMETHODIMP DirectUI::TextRangeAdapterGenerated::GetChildren(_Out_ UINT* pReturnValueCount, _Out_writes_to_ptr_(*pReturnValueCount) ABI::Microsoft::UI::Xaml::Automation::Provider::IIRawElementProviderSimple*** ppReturnValue)
{
    HRESULT hr = S_OK;
    if (EventEnabledApiFunctionCallStart())
    {
        ApiEtwStart(this, KnownMethodIndex::TextRangeAdapter_GetChildren);
    }
    ARG_VALIDRETURNPOINTER(ppReturnValue);
    IFC(CheckThread());
    IFC(DefaultStrictApiCheck(this));
    IFC(static_cast<TextRangeAdapter*>(this)->GetChildrenImpl(pReturnValueCount, ppReturnValue));
Cleanup:
    if (EventEnabledApiFunctionCallStop())
    {
        ApiEtwStop(this, hr);
    }
    RRETURN(hr);
}
IFACEMETHODIMP DirectUI::TextRangeAdapterGenerated::GetEnclosingElement(_Outptr_ ABI::Microsoft::UI::Xaml::Automation::Provider::IIRawElementProviderSimple** ppReturnValue)
{
    HRESULT hr = S_OK;
    if (EventEnabledApiFunctionCallStart())
    {
        ApiEtwStart(this, KnownMethodIndex::TextRangeAdapter_GetEnclosingElement);
    }
    ARG_VALIDRETURNPOINTER(ppReturnValue);
    IFC(CheckThread());
    IFC(DefaultStrictApiCheck(this));
    IFC(static_cast<TextRangeAdapter*>(this)->GetEnclosingElementImpl(ppReturnValue));
Cleanup:
    if (EventEnabledApiFunctionCallStop())
    {
        ApiEtwStop(this, hr);
    }
    RRETURN(hr);
}
IFACEMETHODIMP DirectUI::TextRangeAdapterGenerated::GetText(_In_ INT maxLength, _Out_ HSTRING* pReturnValue)
{
    HRESULT hr = S_OK;
    if (EventEnabledApiFunctionCallStart())
    {
        ApiEtwStart(this, KnownMethodIndex::TextRangeAdapter_GetText);
    }
    ARG_VALIDRETURNPOINTER(pReturnValue);
    IFC(CheckThread());
    IFC(DefaultStrictApiCheck(this));
    IFC(static_cast<TextRangeAdapter*>(this)->GetTextImpl(maxLength, pReturnValue));
Cleanup:
    if (EventEnabledApiFunctionCallStop())
    {
        ApiEtwStop(this, hr);
    }
    RRETURN(hr);
}
IFACEMETHODIMP DirectUI::TextRangeAdapterGenerated::Move(_In_ ABI::Microsoft::UI::Xaml::Automation::Text::TextUnit unit, _In_ INT count, _Out_ INT* pReturnValue)
{
    HRESULT hr = S_OK;
    if (EventEnabledApiFunctionCallStart())
    {
        ApiEtwStart(this, KnownMethodIndex::TextRangeAdapter_Move);
    }
    ARG_VALIDRETURNPOINTER(pReturnValue);
    IFC(CheckThread());
    IFC(DefaultStrictApiCheck(this));
    IFC(static_cast<TextRangeAdapter*>(this)->MoveImpl(unit, count, pReturnValue));
Cleanup:
    if (EventEnabledApiFunctionCallStop())
    {
        ApiEtwStop(this, hr);
    }
    RRETURN(hr);
}
IFACEMETHODIMP DirectUI::TextRangeAdapterGenerated::MoveEndpointByRange(_In_ ABI::Microsoft::UI::Xaml::Automation::Text::TextPatternRangeEndpoint endpoint, _In_ ABI::Microsoft::UI::Xaml::Automation::Provider::ITextRangeProvider* pTextRangeProvider, _In_ ABI::Microsoft::UI::Xaml::Automation::Text::TextPatternRangeEndpoint targetEndpoint)
{
    HRESULT hr = S_OK;
    if (EventEnabledApiFunctionCallStart())
    {
        ApiEtwStart(this, KnownMethodIndex::TextRangeAdapter_MoveEndpointByRange);
    }
    ARG_NOTNULL(pTextRangeProvider, "textRangeProvider");
    IFC(CheckThread());
    IFC(DefaultStrictApiCheck(this));
    IFC(static_cast<TextRangeAdapter*>(this)->MoveEndpointByRangeImpl(endpoint, pTextRangeProvider, targetEndpoint));
Cleanup:
    if (EventEnabledApiFunctionCallStop())
    {
        ApiEtwStop(this, hr);
    }
    RRETURN(hr);
}
IFACEMETHODIMP DirectUI::TextRangeAdapterGenerated::MoveEndpointByUnit(_In_ ABI::Microsoft::UI::Xaml::Automation::Text::TextPatternRangeEndpoint endpoint, _In_ ABI::Microsoft::UI::Xaml::Automation::Text::TextUnit unit, _In_ INT count, _Out_ INT* pReturnValue)
{
    HRESULT hr = S_OK;
    if (EventEnabledApiFunctionCallStart())
    {
        ApiEtwStart(this, KnownMethodIndex::TextRangeAdapter_MoveEndpointByUnit);
    }
    ARG_VALIDRETURNPOINTER(pReturnValue);
    IFC(CheckThread());
    IFC(DefaultStrictApiCheck(this));
    IFC(static_cast<TextRangeAdapter*>(this)->MoveEndpointByUnitImpl(endpoint, unit, count, pReturnValue));
Cleanup:
    if (EventEnabledApiFunctionCallStop())
    {
        ApiEtwStop(this, hr);
    }
    RRETURN(hr);
}
IFACEMETHODIMP DirectUI::TextRangeAdapterGenerated::RemoveFromSelection()
{
    HRESULT hr = S_OK;
    if (EventEnabledApiFunctionCallStart())
    {
        ApiEtwStart(this, KnownMethodIndex::TextRangeAdapter_RemoveFromSelection);
    }
    
    IFC(CheckThread());
    IFC(DefaultStrictApiCheck(this));
    IFC(static_cast<TextRangeAdapter*>(this)->RemoveFromSelectionImpl());
Cleanup:
    if (EventEnabledApiFunctionCallStop())
    {
        ApiEtwStop(this, hr);
    }
    RRETURN(hr);
}
IFACEMETHODIMP DirectUI::TextRangeAdapterGenerated::ScrollIntoView(_In_ BOOLEAN alignToTop)
{
    HRESULT hr = S_OK;
    if (EventEnabledApiFunctionCallStart())
    {
        ApiEtwStart(this, KnownMethodIndex::TextRangeAdapter_ScrollIntoView);
    }
    
    IFC(CheckThread());
    IFC(DefaultStrictApiCheck(this));
    IFC(static_cast<TextRangeAdapter*>(this)->ScrollIntoViewImpl(alignToTop));
Cleanup:
    if (EventEnabledApiFunctionCallStop())
    {
        ApiEtwStop(this, hr);
    }
    RRETURN(hr);
}
IFACEMETHODIMP DirectUI::TextRangeAdapterGenerated::Select()
{
    HRESULT hr = S_OK;
    if (EventEnabledApiFunctionCallStart())
    {
        ApiEtwStart(this, KnownMethodIndex::TextRangeAdapter_Select);
    }
    
    IFC(CheckThread());
    IFC(DefaultStrictApiCheck(this));
    IFC(static_cast<TextRangeAdapter*>(this)->SelectImpl());
Cleanup:
    if (EventEnabledApiFunctionCallStop())
    {
        ApiEtwStop(this, hr);
    }
    RRETURN(hr);
}


namespace DirectUI
{
}
