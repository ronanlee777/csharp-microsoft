#define WUXC_VERSION_RS3_CONTRACT  5
#define WUXC_VERSION_RS4_CONTRACT  6
#define WUXC_VERSION_RS5_CONTRACT  7
#define WUXC_VERSION_19H1_CONTRACT 8

#define MU_XC_NAMESPACE Microsoft.UI.Xaml.Controls
#define MU_XCP_NAMESPACE Microsoft.UI.Xaml.Controls.Primitives
#define MU_XM_NAMESPACE Microsoft.UI.Xaml.Media
#define MU_XAP_NAMESPACE Microsoft.UI.Xaml.Automation.Peers
#define MU_PRIVATE_CONTROLS_NAMESPACE Microsoft.UI.Private.Controls
#define MU_PRIVATE_MEDIA_NAMESPACE Microsoft.UI.Private.Media
#define MU_X_XTI_NAMESPACE Microsoft.UI.Xaml.XamlTypeInfo

namespace features
{
#ifdef MUX_PRERELEASE
    // In prerelease, the feature is disabled by default (giving it the [experimental] tag)
    feature_name Feature_Experimental = { DisabledByDefault, FALSE };
#else
    // In release, the experimental feature is disabled, removing it from the final WinMD
    feature_name Feature_Experimental = { AlwaysDisabled, FALSE };
#endif
}

namespace Microsoft.UI.Xaml.CustomAttributes
{
    [attributeusage(target_runtimeclass, target_enum, target_struct, target_interface, target_delegate)]
    [attributename("muxcontract")]
    [version(0x00000001)]
    [webhosthidden]
    attribute MUXContractPropertyAttribute
    {
        int version;
    }

    [attributeusage(target_runtimeclass)]
    [attributename("muxhascustomactivationfactory")]
    [version(0x00000001)]
    [webhosthidden]
    attribute MUXHasCustomActivationFactoryAttribute
    {
    }

    [attributeusage(target_runtimeclass, target_enum, target_struct, target_interface, target_delegate, target_property, target_method)]
    [attributename("muxpropertyneedsdependencypropertyfield")]
    [version(0x00000001)]
    [webhosthidden]
    attribute MUXPropertyNeedsDependencyPropertyFieldAttribute
    {
    }

    [attributeusage(target_runtimeclass, target_enum, target_struct, target_interface, target_delegate, target_property, target_method)]
    [attributename("muxpropertychangedcallback")]
    [version(0x00000001)]
    [webhosthidden]
    attribute MUXPropertyChangedCallbackAttribute
    {
        boolean enable;
    }

    [attributeusage(target_runtimeclass, target_enum, target_struct, target_interface, target_delegate, target_property, target_method)]
    [attributename("muxpropertychangedcallbackmethodname")]
    [version(0x00000001)]
    [webhosthidden]
    attribute MUXPropertyChangedCallbackMethodNameAttribute
    {
        String value;
    }

    [attributeusage(target_runtimeclass, target_enum, target_struct, target_interface, target_delegate, target_property, target_method)]
    [attributename("muxpropertyvalidationcallback")]
    [version(0x00000001)]
    [webhosthidden]
    attribute MUXPropertyValidationCallbackAttribute
    {
        String value;
    }

    [attributeusage(target_property, target_method)]
    [attributename("muxpropertydefaultvalue")]
    [version(0x00000001)]
    [webhosthidden]
    attribute MUXPropertyDefaultValueAttribute
    {
        String value;
    }

    [attributeusage(target_property, target_method)]
    [attributename("muxpropertytype")]
    [version(0x00000001)]
    [webhosthidden]
    attribute MUXPropertyTypeAttribute
    {
        String value;
    }
}


#define WUXC_VERSION_RS3 muxcontract(WUXC_VERSION_RS3_CONTRACT)
#define WUXC_VERSION_RS4 muxcontract(WUXC_VERSION_RS4_CONTRACT)
#define WUXC_VERSION_RS5 muxcontract(WUXC_VERSION_RS5_CONTRACT)
#define WUXC_VERSION_19H1 muxcontract(WUXC_VERSION_19H1_CONTRACT)
#define WUXC_VERSION_MUXONLY muxcontract(0)
#define WUXC_VERSION_PREVIEW muxcontract(0), feature(Feature_Experimental)
#define WUXC_VERSION_INTERNAL muxcontract(0), feature(Feature_Experimental)

#define WUXC_INTERFACE_NAME(name, uuid)
#define WUXC_STATIC_NAME(name, uuid) 
#define WUXC_CONSTRUCTOR_NAME(name, uuid) 

// If this is specified then codegen will not create or register a default activation factory.
#define MUX_HAS_CUSTOM_FACTORY muxhascustomactivationfactory

// If specified on a property that doesn't have a corresponding "{...}Property" static DependencyProperty 
// property, a DependencyProperty field will still be generated and registered. The scenario for this is 
// TemplateSettings objects which don't need public DependencyProperty properties but use TemplateBinding
// under the covers and TemplateBinding understands the DP registration and will use it.
#define MUX_PROPERTY_NEEDS_DP_FIELD muxpropertyneedsdependencypropertyfield

// Whether the property (or, if specified on the type, all properties) should have a OnPropertyChanged callback
#define MUX_PROPERTY_CHANGED_CALLBACK(enable) muxpropertychangedcallback(enable)

// Normally the codegen generates a static OnPropertyChanged method which then calls an instance OnPropertyChanged
// method on your type. For attached properties you need to specify this callback so that you can also receive the sender.
#define MUX_PROPERTY_CHANGED_CALLBACK_METHODNAME(name) muxpropertychangedcallbackmethodname(name)

// Specifies the default value for the DependencyProperty.Register call. If unspecified the default is the default 
// for the property type (e.g. false for bool, 0 for int, 0.0 for double, "" for string, nullptr for reference types)
#define MUX_DEFAULT_VALUE(value) muxpropertydefaultvalue(value)

// Codegen infers the type of a property from the instance property's getter or an attached properties' 
// Get{...} method. If neither of these exist then the IDL must specify the override type or the codegen
// will produce a build error.
#define MUX_PROPERTY_TYPE(value) muxpropertytype(value)

// Instance method on the owning type that can be used to validate or coerce the value.
#define MUX_PROPERTY_VALIDATION_CALLBACK(value) muxpropertyvalidationcallback(value)

namespace MU_X_XTI_NAMESPACE
{
    [WUXC_VERSION_MUXONLY]
    [webhosthidden]
    [default_interface]
    runtimeclass XamlControlsXamlMetaDataProvider
    // IXMP needs to be implemented by a public type in our assembly, but it doesn't need to be
    // named anything special. Let's leverage the fact that we have this existing runtimeclass
    // so we don't pollute our namespace with unnecessary public types.
    : [default] Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        XamlControlsXamlMetaDataProvider();

        static void Initialize();
    }
}

namespace MU_XC_NAMESPACE
{
    [WUXC_VERSION_MUXONLY]
    [webhosthidden]
    [default_interface]
    [MUX_PROPERTY_CHANGED_CALLBACK(TRUE)]
    [MUX_PROPERTY_CHANGED_CALLBACK_METHODNAME("OnPropertyChanged")]
    runtimeclass XamlControlsResources : Windows.UI.Xaml.ResourceDictionary
    {
        XamlControlsResources();
        static void EnsureRevealLights(Windows.UI.Xaml.UIElement element);

        [WUXC_VERSION_PREVIEW]
        {
            [MUX_DEFAULT_VALUE("false")]
            Boolean UseCompactResources{ get; set; };

            static Windows.UI.Xaml.DependencyProperty UseCompactResourcesProperty{ get; };
        }
    }
}
